
#pragma once
#include "files.hpp"
namespace duckdb {
const File FILE_NEXT_STATIC_CHUNKS_168_D23F2CF0D147C7F5_JS = {
     // Content
     "KHNlbGYud2VicGFja0NodW5rX05fRT1zZWxmLndlYnBhY2tDaHVua19OX0V8fFtdKS5wdXNoKFtbMTY4XSx7NzQxNjg6KHQsZSxhKT0+eyJ1c2Ugc3RyaWN0IjthLnIoZSksYS5kKGUse2RlZmF1bHQ6KCk9Pkd9KTt2YXIgbj1hKDYyNDUzKSxpPWEoNDAxNykscj1hKDQ3OTI5KSxzPWEoODI0MDYpLGw9YS5uKHMpLG89YSgxMjM1NSksYz1hLm4obyk7YSg3ODA4MSk7dmFyIGQ9YSgzNzE0MSksdT1hKDYyNzQ0KSxoPWEoNTk0MjQpO2Z1bmN0aW9uIHAodCl7cmV0dXJuKDAsbi5qc3gpKGguRCx7ZW1iZWRkZWQ6ITAscmVsYXRpb25TdGF0ZTp0LnJlbGF0aW9uLGlucHV0TWFuYWdlcjp0LmlucHV0TWFuYWdlcix1cGRhdGVSZWxhdGlvbjp0Lm9uUmVsYXRpb25VcGRhdGV9KX12YXIgdz1hKDI2OTI5KTtsZXQgZz0nPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLXdpZHRoPSIyIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIGNsYXNzPSJsdWNpZGUgbHVjaWRlLXNoZWV0IGljb24tc21hbGxlciI+PHJlY3Qgd2lkdGg9IjE4IiBoZWlnaHQ9IjE4IiB4PSIzIiB5PSIzIiByeD0iMiIgcnk9IjIiLz48bGluZSB4MT0iMyIgeDI9IjIxIiB5MT0iOSIgeTI9IjkiLz48bGluZSB4MT0iMyIgeDI9IjIxIiB5MT0iMTUiIHkyPSIxNSIvPjxsaW5lIHgxPSI5IiB4Mj0iOSIgeTE9IjkiIHkyPSIyMSIvPjxsaW5lIHgxPSIxNSIgeDI9IjE1IiB5MT0iOSIgeTI9IjIxIi8+PC9zdmc+Jyx2PSc8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Qm94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHN0cm9rZT0iY3VycmVudENvbG9yIiBzdHJva2Utd2lkdGg9IjIiIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCIgY2xhc3M9Imx1Y2lkZSBsdWNpZGUtY2hhcnQtc3BsaW5lIGljb24tc21hbGxlciI+PHBhdGggZD0iTTMgM3YxNmEyIDIgMCAwIDAgMiAyaDE2Ii8+PHBhdGggZD0iTTcgMTZjLjUtMiAxLjUtNyA0LTcgMiAwIDIgMyA0IDMgMi41IDAgNC41LTUgNS03Ii8+PC9zdmc+JyxTPSdcbjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdCb3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSJcbiAgc3Ryb2tlPSJjdXJyZW50Q29sb3IiIHN0cm9rZS13aWR0aD0iMiIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIlxuICBjbGFzcz0ibHVjaWRlIGx1Y2lkZS1zZXR0aW5ncy1pY29uIGx1Y2lkZS1zZXR0aW5ncyI+XG4gIDxnIHRyYW5zZm9ybT0ic2NhbGUoMC44NSkgdHJhbnNsYXRlKDIgMikiPlxuICAgIDxwYXRoIGQ9Ik0xMi4yMiAyaC0uNDRhMiAyIDAgMCAwLTIgMnYuMThhMiAyIDAgMCAxLTEgMS43M2wtLjQzLjI1YTIgMiAwIDAgMS0yIDBsLS4xNS0uMDhhMiAyIDAgMCAwLTIuNzMuNzNsLS4yMi4zOGEyIDIgMCAwIDAgLjczIDIuNzNsLjE1LjFhMiAyIDAgMCAxIDEgMS43MnYuNTFhMiAyIDAgMCAxLTEgMS43NGwtLjE1LjA5YTIgMiAwIDAgMC0uNzMgMi43M2wuMjIuMzhhMiAyIDAgMCAwIDIuNzMuNzNsLjE1LS4wOGEyIDIgMCAwIDEgMiAwbC40My4yNWEyIDIgMCAwIDEgMSAxLjczVjIwYTIgMiAwIDAgMCAyIDJoLjQ0YTIgMiAwIDAgMCAyLTJ2LS4xOGEyIDIgMCAwIDEgMS0xLjczbC40My0uMjVhMiAyIDAgMCAxIDIgMGwuMTUuMDhhMiAyIDAgMCAwIDIuNzMtLjczbC4yMi0uMzlhMiAyIDAgMCAwLS43My0yLjczbC0uMTUtLjA4YTIgMiAwIDAgMS0xLTEuNzR2LS41YTIgMiAwIDAgMSAxLTEuNzRsLjE1LS4wOWEyIDIgMCAwIDAgLjczLTIuNzNsLS4yMi0uMzhhMiAyIDAgMCAwLTIuNzMtLjczbC0uMTUuMDhhMiAyIDAgMCAxLTIgMGwtLjQzLS4yNWEyIDIgMCAwIDEtMS0xLjczVjRhMiAyIDAgMCAwLTItMnoiLz5cbiAgICA8Y2lyY2xlIGN4PSIxMiIgY3k9IjEyIiByPSIzIi8+XG4gIDwvZz5cbjwvc3ZnPicudHJpbSgpLHk9J1xuPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIlxuICBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLXdpZHRoPSIyIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiXG4gIGNsYXNzPSJsdWNpZGUgbHVjaWRlLXNxdWFyZS1hcnJvdy1kb3duLWljb24gbHVjaWRlLXNxdWFyZS1hcnJvdy1kb3duIj5cbiAgPGcgdHJhbnNmb3JtPSJzY2FsZSgwLjg1KSB0cmFuc2xhdGUoMiAyKSI+XG4gICAgPHJlY3Qgd2lkdGg9IjE4IiBoZWlnaHQ9IjE4IiB4PSIzIiB5PSIzIiByeD0iMiIvPlxuICAgIDxwYXRoIGQ9Ik0xMiA4djgiLz5cbiAgICA8cGF0aCBkPSJtOCAxMiA0IDQgNC00Ii8+XG4gIDwvZz5cbjwvc3ZnPicudHJpbSgpLG09J1xuPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIlxuICBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLXdpZHRoPSIyIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiXG4gIGNsYXNzPSJsdWNpZGUgbHVjaWRlLXNlYXJjaCI+XG4gIDxnIHRyYW5zZm9ybT0ic2NhbGUoMC44NSkgdHJhbnNsYXRlKDIgMikiPlxuICAgIDxjaXJjbGUgY3g9IjExIiBjeT0iMTEiIHI9IjgiLz5cbiAgICA8cGF0aCBkPSJtMjEgMjEtNC4zLTQuMyIvPlxuICA8L2c+XG48L3N2Zz4nLnRyaW0oKTt2YXIgeD1hKDIxNjI3KTtmdW5jdGlvbiBmKHQpe3JldHVybiB0JiYib2JqZWN0Ij09dHlwZW9mIHQmJiJ2aWV3U3RhdGUiaW4gdH12YXIgaz1hKDEzNzQzKSxDPWEoOTAzNTApLGI9YSg2Mzg0Myk7ZnVuY3Rpb24gSSh0LGUpe3JldHVybiB0LmJsb2NrSWQ9PT1lLmJsb2NrSWQmJnQuaW5wdXROYW1lPT09ZS5pbnB1dE5hbWV9dmFyIE09YSg3MzQ1NCk7Y2xhc3MgVHtzdGF0aWMgZ2V0IGlzUmVhZE9ubHlTdXBwb3J0ZWQoKXtyZXR1cm4hMH1zdGF0aWMgZ2V0IHRvb2xib3goKXt0aHJvdyBFcnJvcigiVG9vbGJveCBjb25maWd1cmF0aW9uIG11c3QgYmUgcHJvdmlkZWQgYnkgc3ViY2xhc3MiKX1nZXRSZWxhdGlvbklkKHQpe3QodGhpcy5kYXRhLmlkKX1nZXRJbnRlcmFjdGl2ZUlkKHQpe3QodGhpcy5pbnRlcmFjdGl2ZUlkKX11cGRhdGVBbmRSZW5kZXIodCl7dGhpcy5kYXRhPXQsdGhpcy5yZW5kZXIoKX1hc3luYyByZXJ1blF1ZXJ5KCl7bGV0IHQ9ey4uLnRoaXMuZGF0YS5xdWVyeS52aWV3UGFyYW1ldGVyc307YXdhaXQgKDAsTS5tNSkodGhpcy5kYXRhLHQsdGhpcy51cGRhdGVBbmRSZW5kZXIuYmluZCh0aGlzKSx0aGlzLmlucHV0TWFuYWdlcil9c2V0SW5wdXRWYWx1ZSh0LGUpe3RoaXMucmVydW5RdWVyeSgpfWdldEFuZFVwZGF0ZUlucHV0RGVwZW5kZW5jaWVzKHQpe2xldCBlPSgwLGIuS00pKHQpLGE9W107Zm9yKGxldCB0IG9mIGUpe2xldCBlPXtibG9ja0lkOnRoaXMuaW50ZXJhY3RpdmVJZCxpbnB1dE5hbWU6dCxjYWxsRnVuY3Rpb246YXN5bmMgZT0+e3RoaXMuc2V0SW5wdXRWYWx1ZSh0LGUpfX07YS5wdXNoKGUpfWZvcihsZXQgdCBvZiB0aGlzLmN1cnJlbnRJbnB1dERlcGVuZGVuY2llcylhLmZpbmQoZT0+SSh0LGUpKXx8dGhpcy5pbnB1dE1hbmFnZXIucmVtb3ZlSW5wdXREZXBlbmRlbmN5KHQpO2ZvcihsZXQgdCBvZiBhKXRoaXMuY3VycmVudElucHV0RGVwZW5kZW5jaWVzLmZpbmQoZT0+SShlLHQpKXx8dGhpcy5pbnB1dE1hbmFnZXIucmVnaXN0ZXJJbnB1dERlcGVuZGVuY3kodCk7dGhpcy5jdXJyZW50SW5wdXREZXBlbmRlbmNpZXM9YX1zZXRTaG93Q29kZUZlbmNlKHQpe3RoaXMuZGF0YT17Li4udGhpcy5kYXRhLHZpZXdTdGF0ZTp7Li4udGhpcy5kYXRhLnZpZXdTdGF0ZSxjb2RlRmVuY2VTdGF0ZTp7Li4udGhpcy5kYXRhLnZpZXdTdGF0ZS5jb2RlRmVuY2VTdGF0ZSxzaG93OnR9fX0sdGhpcy5yZW5kZXIoKX1yZW5kZXIoKXtyZXR1cm4gdGhpcy53cmFwcGVyfHwodGhpcy53cmFwcGVyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpLHRoaXMud3JhcHBlci5zdHlsZS5iYWNrZ3JvdW5kQ29sb3I9ImluaGVyaXQiLHRoaXMucmVhY3RSb290PSgwLGsuY3JlYXRlUm9vdCkodGhpcy53cmFwcGVyKSksdGhpcy5yZW5kZXJDb21wb25lbnQoKSx0aGlzLndyYXBwZXJ9cmVuZGVyQ29tcG9uZW50KCl7dGhpcy5yZWFjdFJvb3QucmVuZGVyKCgwLG4uanN4KShBLHtpbnB1dE1hbmFnZXI6dGhpcy5pbnB1dE1hbmFnZXIsaW5pdGlhbERhdGE6dGhpcy5kYXRhLG9uRGF0YUNoYW5nZTp0aGlzLm9uRGF0YUNoYW5nZWQuYmluZCh0aGlzKX0pKX1vbkRhdGFDaGFuZ2VkKHQpe3QucXVlcnkuYmFzZVF1ZXJ5IT09dGhpcy5kYXRhLnF1ZXJ5LmJhc2VRdWVyeSYmdGhpcy5nZXRBbmRVcGRhdGVJbnB1dERlcGVuZGVuY2llcyh0LnF1ZXJ5LmJhc2VRdWVyeSksdGhpcy5kYXRhPXR9cmVuZGVyU2V0dGluZ3MoKXtsZXQgdD10aGlzLmRhdGEudmlld1N0YXRlLmNvZGVGZW5jZVN0YXRlLnNob3c7cmV0dXJuW3t0aXRsZTp0PyJIaWRlIFF1ZXJ5IjoiU2hvdyBRdWVyeSIsY2xvc2VPbkFjdGl2YXRlOiEwLGljb246dD8nPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLXdpZHRoPSIyIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIGNsYXNzPSJsdWNpZGUgbHVjaWRlLWV5ZS1jbG9zZWQgaWNvbi1zbWFsbGVyIj48cGF0aCBkPSJtMTUgMTgtLjcyMi0zLjI1Ii8+PHBhdGggZD0iTTIgOGExMC42NDUgMTAuNjQ1IDAgMCAwIDIwIDAiLz48cGF0aCBkPSJtMjAgMTUtMS43MjYtMi4wNSIvPjxwYXRoIGQ9Im00IDE1IDEuNzI2LTIuMDUiLz48cGF0aCBkPSJtOSAxOCAuNzIyLTMuMjUiLz48L3N2Zz4nOic8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Qm94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHN0cm9rZT0iY3VycmVudENvbG9yIiBzdHJva2Utd2lkdGg9IjIiIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCIgY2xhc3M9Imx1Y2lkZSBsdWNpZGUtZXllIGljb24tc21hbGxlciI+PHBhdGggZD0iTTIuMDYyIDEyLjM0OGExIDEgMCAwIDEgMC0uNjk2IDEwLjc1IDEwLjc1IDAgMCAxIDE5Ljg3NiAwIDEgMSAwIDAgMSAwIC42OTYgMTAuNzUgMTAuNzUgMCAwIDEtMTkuODc2IDAiLz48Y2lyY2xlIGN4PSIxMiIgY3k9IjEyIiByPSIzIi8+PC9zdmc+JyxvbkFjdGl2YXRlOigpPT57dGhpcy5zZXRTaG93Q29kZUZlbmNlKCF0KX19LHt0aXRsZToiUnVuIFF1ZXJ5IixpY29uOic8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Qm94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHN0cm9rZT0iY3VycmVudENvbG9yIiBzdHJva2Utd2lkdGg9IjIiIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCIgY2xhc3M9Imx1Y2lkZSBsdWNpZGUtcGxheS1pY29uIGx1Y2lkZS1wbGF5Ij5cbiA8ZyB0cmFuc2Zvcm09InNjYWxlKDAuODUpIHRyYW5zbGF0ZSgyIDIpIj5cbjxwYXRoIGQ9Ik01IDVhMiAyIDAgMCAxIDMuMDA4LTEuNzI4bDExLjk5NyA2Ljk5OGEyIDIgMCAwIDEgLjAwMyAzLjQ1OGwtMTIgN0EyIDIgMCAwIDEgNSAxOXoiLz5cblxuICA8L2c+XG48L3N2Zz5cbicsY2xvc2VPbkFjdGl2YXRlOiEwLG9uQWN0aXZhdGU6KCk9Pnt0aGlzLnJlcnVuUXVlcnkoKX19XX1zYXZlKCl7cmV0dXJuIHRoaXMuZGF0YX1kZXN0cm95KCl7dGhpcy5yZWFjdFJvb3QmJnRoaXMucmVhY3RSb290LnVubW91bnQoKX1jb25zdHJ1Y3Rvcih7ZGF0YTp0LGFwaTplLHJlYWRPbmx5OmEsY29uZmlnOm59LGkpe3RoaXMud3"
     ""
     "LG9uQ2hhbmdlOihlLGEpPT57dmFyIGk7bGV0IHI9QXJyYXkuaXNBcnJheShhKT9hOlthXSxzPSgwLGQuVSkoKS5nZXRFZGl0b3IodC5pZCk7cyYmcy5tYW5hZ2VyLm9uQmxvY2tDaGFuZ2VFdmVudChyKSxudWxsPT09KGk9dC5vbkJsb2NrQ2hhbmdlRXZlbnQpfHx2b2lkIDA9PT1pfHxpLmNhbGwodCxyKSxuLnNhdmUoKS50aGVuKGU9Pnt2YXIgYTtudWxsPT09KGE9dC5vblNhdmVkKXx8dm9pZCAwPT09YXx8YS5jYWxsKHQsZSl9KX0sdG9vbHM6ZnVuY3Rpb24odCl7bGV0IGU9e3BsYWNlaG9sZGVyOiJBZGQgYSBuZXcgcmVsYXRpb24iLGdldElucHV0TWFuYWdlcjp0fTtyZXR1cm57W3guUjldOntjbGFzczpWLGlubGluZVRvb2xiYXI6ITAsc2hvcnRjdXQ6IkNNRCtTSElGVCtSIixjb25maWc6ZX0sW3guTGxdOntjbGFzczpQLGlubGluZVRvb2xiYXI6ITAsY29uZmlnOmV9LFt4LnZtXTp7Y2xhc3M6XyxpbmxpbmVUb29sYmFyOiEwLGNvbmZpZzp7Li4uZSx0eXBlOiJzZWxlY3QifX0sW3guWHpdOntjbGFzczp6LGlubGluZVRvb2xiYXI6ITAsY29uZmlnOnsuLi5lLHR5cGU6ImZ1bGx0ZXh0In19LFt4LmhKXTp7Y2xhc3M6cS5BLGlubGluZVRvb2xiYXI6WyJtYXJrZXIiLCJsaW5rIl0sY29uZmlnOntwbGFjZWhvbGRlcjoiSGVhZGVyIn0sc2hvcnRjdXQ6IkNNRCtTSElGVCtIIn0sW3guaTVdOntjbGFzczpRLkEsaW5saW5lVG9vbGJhcjohMCxzaG9ydGN1dDoiQ01EK1NISUZUK0wifSxbeC5BTl06RC5BLG1hcmtlcjp7Y2xhc3M6Qi5BLHNob3J0Y3V0OiJDTUQrU0hJRlQrTSJ9LFt4LlowXTpOLGlubGluZUNvZGU6e2NsYXNzOkUuQSxzaG9ydGN1dDoiQ01EK1NISUZUK0MifSxsaW5rVG9vbDpGLkEsZW1iZWQ6ai5BLHRhYmxlOntjbGFzczpILkEsaW5saW5lVG9vbGJhcjohMCxzaG9ydGN1dDoiQ01EK0FMVCtUIn19fSh0PT5hLmhhcyh0KT9lOihhLmFkZCh0KSxudWxsKSksZGF0YTp0LmluaXRpYWxEYXRhfSk7cmV0dXJuIHMuY3VycmVudD1uLCgpPT57cy5jdXJyZW50JiZzLmN1cnJlbnQuZGVzdHJveSYmKHMuY3VycmVudC5kZXN0cm95KCksaCh0LmlkKSl9fSxbZV0pLCgwLG4uanN4KSgiZGl2Iix7aWQ6dC5pZCxjbGFzc05hbWU6InctZnVsbCBtaW4taC1bNDAwcHhdIHAtMiJ9KX19LDc4MDgxOigpPT57fX1dKTs=",    //
     17904, //
     "application/javascript", //
     "/_next/static/chunks/168.d23f2cf0d147c7f5.js/", //
     
};
}
