
#pragma once
#include "files.hpp"
namespace duckdb {
const File FILE_NEXT_STATIC_CHUNKS_32FA3855_229C70A9F91729D1_JS = {
     // Content
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "VkLG5vUGFuQ2xhc3NOYW1lOmVjLGRpc2FibGVLZXlib2FyZEExMXk6ZXUsb25WaWV3cG9ydENoYW5nZTpldixpc0NvbnRyb2xsZWRWaWV3cG9ydDohIWVwLGNoaWxkcmVuOigwLGwuanN4cykodHUse2NoaWxkcmVuOlsoMCxsLmpzeCkodGQse2VkZ2VUeXBlczpuLG9uRWRnZUNsaWNrOmEsb25FZGdlRG91YmxlQ2xpY2s6ZCxvblJlY29ubmVjdDplcixvblJlY29ubmVjdFN0YXJ0OmVpLG9uUmVjb25uZWN0RW5kOmVhLG9ubHlSZW5kZXJWaXNpYmxlRWxlbWVudHM6aixvbkVkZ2VDb250ZXh0TWVudTpKLG9uRWRnZU1vdXNlRW50ZXI6ZWUsb25FZGdlTW91c2VNb3ZlOmV0LG9uRWRnZU1vdXNlTGVhdmU6ZW4scmVjb25uZWN0UmFkaXVzOmVvLGRlZmF1bHRNYXJrZXJDb2xvcjp6LG5vUGFuQ2xhc3NOYW1lOmVjLGRpc2FibGVLZXlib2FyZEExMXk6ZXUscmZJZDplZn0pLCgwLGwuanN4KSh0dix7c3R5bGU6eCx0eXBlOnksY29tcG9uZW50OlMsY29udGFpbmVyU3R5bGU6d30pLCgwLGwuanN4KSgiZGl2Iix7Y2xhc3NOYW1lOiJyZWFjdC1mbG93X19lZGdlbGFiZWwtcmVuZGVyZXIifSksKDAsbC5qc3gpKGVCLHtub2RlVHlwZXM6dCxvbk5vZGVDbGljazppLG9uTm9kZURvdWJsZUNsaWNrOnMsb25Ob2RlTW91c2VFbnRlcjpjLG9uTm9kZU1vdXNlTW92ZTp1LG9uTm9kZU1vdXNlTGVhdmU6Zyxvbk5vZGVDb250ZXh0TWVudTp2LG5vZGVDbGlja0Rpc3RhbmNlOiQsb25seVJlbmRlclZpc2libGVFbGVtZW50czpqLG5vUGFuQ2xhc3NOYW1lOmVjLG5vRHJhZ0NsYXNzTmFtZTplcyxkaXNhYmxlS2V5Ym9hcmRBMTF5OmV1LG5vZGVFeHRlbnQ6ZWcscmZJZDplZn0pLCgwLGwuanN4KSgiZGl2Iix7Y2xhc3NOYW1lOiJyZWFjdC1mbG93X192aWV3cG9ydC1wb3J0YWwifSldfSl9KX10eS5kaXNwbGF5TmFtZT0iR3JhcGhWaWV3IjtsZXQgdHg9KDAsci5tZW1vKSh0eSksdFM9ZnVuY3Rpb24oKXt2YXIgZSx0LG47bGV0e25vZGVzOm8sZWRnZXM6bCxkZWZhdWx0Tm9kZXM6cixkZWZhdWx0RWRnZXM6aSx3aWR0aDpzLGhlaWdodDpkLGZpdFZpZXc6YyxmaXRWaWV3T3B0aW9uczp1LG1pblpvb206Zz0uNSxtYXhab29tOmY9Mixub2RlT3JpZ2luOnAsbm9kZUV4dGVudDp2fT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30saD1uZXcgTWFwLG09bmV3IE1hcCxiPW5ldyBNYXAseT1uZXcgTWFwLHg9bnVsbCE9PShlPW51bGwhPWk/aTpsKSYmdm9pZCAwIT09ZT9lOltdLFM9bnVsbCE9PSh0PW51bGwhPXI/cjpvKSYmdm9pZCAwIT09dD90OltdLHc9bnVsbCE9cD9wOlswLDBdLEM9bnVsbCE9dj92OmEuWk87KDAsYS5xbikoYix5LHgpO2xldCBFPSgwLGEuYmkpKFMsaCxtLHtub2RlT3JpZ2luOncsbm9kZUV4dGVudDpDLGVsZXZhdGVOb2Rlc09uU2VsZWN0OiExfSksTj1bMCwwLDFdO2lmKGMmJnMmJmQpe2xldCBlPSgwLGEuYVopKGgse2ZpbHRlcjplPT4hISgoZS53aWR0aHx8ZS5pbml0aWFsV2lkdGgpJiYoZS5oZWlnaHR8fGUuaW5pdGlhbEhlaWdodCkpfSkse3g6dCx5Om8sem9vbTpsfT0oMCxhLlI0KShlLHMsZCxnLGYsbnVsbCE9PShuPW51bGw9PXU/dm9pZCAwOnUucGFkZGluZykmJnZvaWQgMCE9PW4/bjouMSk7Tj1bdCxvLGxdfXJldHVybntyZklkOiIxIix3aWR0aDowLGhlaWdodDowLHRyYW5zZm9ybTpOLG5vZGVzOlMsbm9kZXNJbml0aWFsaXplZDpFLG5vZGVMb29rdXA6aCxwYXJlbnRMb29rdXA6bSxlZGdlczp4LGVkZ2VMb29rdXA6eSxjb25uZWN0aW9uTG9va3VwOmIsb25Ob2Rlc0NoYW5nZTpudWxsLG9uRWRnZXNDaGFuZ2U6bnVsbCxoYXNEZWZhdWx0Tm9kZXM6dm9pZCAwIT09cixoYXNEZWZhdWx0RWRnZXM6dm9pZCAwIT09aSxwYW5ab29tOm51bGwsbWluWm9vbTpnLG1heFpvb206Zix0cmFuc2xhdGVFeHRlbnQ6YS5aTyxub2RlRXh0ZW50OkMsbm9kZXNTZWxlY3Rpb25BY3RpdmU6ITEsdXNlclNlbGVjdGlvbkFjdGl2ZTohMSx1c2VyU2VsZWN0aW9uUmVjdDpudWxsLGNvbm5lY3Rpb25Nb2RlOmEuV1ouU3RyaWN0LGRvbU5vZGU6bnVsbCxwYW5lRHJhZ2dpbmc6ITEsbm9QYW5DbGFzc05hbWU6Im5vcGFuIixub2RlT3JpZ2luOncsbm9kZURyYWdUaHJlc2hvbGQ6MSxjb25uZWN0aW9uRHJhZ1RocmVzaG9sZDoxLHNuYXBHcmlkOlsxNSwxNV0sc25hcFRvR3JpZDohMSxub2Rlc0RyYWdnYWJsZTohMCxub2Rlc0Nvbm5lY3RhYmxlOiEwLG5vZGVzRm9jdXNhYmxlOiEwLGVkZ2VzRm9jdXNhYmxlOiEwLGVkZ2VzUmVjb25uZWN0YWJsZTohMCxlbGVtZW50c1NlbGVjdGFibGU6ITAsZWxldmF0ZU5vZGVzT25TZWxlY3Q6ITAsZWxldmF0ZUVkZ2VzT25TZWxlY3Q6ITEsc2VsZWN0Tm9kZXNPbkRyYWc6ITAsbXVsdGlTZWxlY3Rpb25BY3RpdmU6ITEsZml0Vmlld1F1ZXVlZDpudWxsIT1jJiZjLGZpdFZpZXdPcHRpb25zOnUsZml0Vmlld1Jlc29sdmVyOm51bGwsY29ubmVjdGlvbjp7Li4uYS5iS30sY29ubmVjdGlvbkNsaWNrU3RhcnRIYW5kbGU6bnVsbCxjb25uZWN0T25DbGljazohMCxhcmlhTGl2ZU1lc3NhZ2U6IiIsYXV0b1Bhbk9uQ29ubmVjdDohMCxhdXRvUGFuT25Ob2RlRHJhZzohMCxhdXRvUGFuT25Ob2RlRm9jdXM6ITAsYXV0b1BhblNwZWVkOjE1LGNvbm5lY3Rpb25SYWRpdXM6MjAsb25FcnJvcjphLktFLGlzVmFsaWRDb25uZWN0aW9uOnZvaWQgMCxvblNlbGVjdGlvbkNoYW5nZUhhbmRsZXJzOltdLGxpYjoicmVhY3QiLGRlYnVnOiExLGFyaWFMYWJlbENvbmZpZzphLnRNfX0sdHc9ZT0+e2xldHtub2Rlczp0LGVkZ2VzOm4sZGVmYXVsdE5vZGVzOm8sZGVmYXVsdEVkZ2VzOmwsd2lkdGg6cixoZWlnaHQ6aSxmaXRWaWV3OmQsZml0Vmlld09wdGlvbnM6YyxtaW5ab29tOnUsbWF4Wm9vbTpnLG5vZGVPcmlnaW46Zixub2RlRXh0ZW50OnB9PWU7cmV0dXJuKDAscy5oKSgoZSxzKT0+e2FzeW5jIGZ1bmN0aW9uIHYoKXtsZXR7bm9kZUxvb2t1cDp0LHBhblpvb206bixmaXRWaWV3T3B0aW9uczpvLGZpdFZpZXdSZXNvbHZlcjpsLHdpZHRoOnIsaGVpZ2h0OmksbWluWm9vbTpkLG1heFpvb206Y309cygpO24mJihhd2FpdCAoMCxhLklPKSh7bm9kZXM6dCx3aWR0aDpyLGhlaWdodDppLHBhblpvb206bixtaW5ab29tOmQsbWF4Wm9vbTpjfSxvKSxudWxsPT1sfHxsLnJlc29sdmUoITApLGUoe2ZpdFZpZXdSZXNvbHZlcjpudWxsfSkpfXJldHVybnsuLi50Uyh7bm9kZXM6dCxlZGdlczpuLHdpZHRoOnIsaGVpZ2h0OmksZml0VmlldzpkLGZpdFZpZXdPcHRpb25zOmMsbWluWm9vbTp1LG1heFpvb206Zyxub2RlT3JpZ2luOmYsbm9kZUV4dGVudDpwLGRlZmF1bHROb2RlczpvLGRlZmF1bHRFZGdlczpsfSksc2V0Tm9kZXM6dD0+e2xldHtub2RlTG9va3VwOm4scGFyZW50TG9va3VwOm8sbm9kZU9yaWdpbjpsLGVsZXZhdGVOb2Rlc09uU2VsZWN0OnIsZml0Vmlld1F1ZXVlZDppfT1zKCksZD0oMCxhLmJpKSh0LG4sbyx7bm9kZU9yaWdpbjpsLG5vZGVFeHRlbnQ6cCxlbGV2YXRlTm9kZXNPblNlbGVjdDpyLGNoZWNrRXF1YWxpdHk6ITB9KTtpJiZkPyh2KCksZSh7bm9kZXM6dCxub2Rlc0luaXRpYWxpemVkOmQsZml0Vmlld1F1ZXVlZDohMSxmaXRWaWV3T3B0aW9uczp2b2lkIDB9KSk6ZSh7bm9kZXM6dCxub2Rlc0luaXRpYWxpemVkOmR9KX0sc2V0RWRnZXM6dD0+e2xldHtjb25uZWN0aW9uTG9va3VwOm4sZWRnZUxvb2t1cDpvfT1zKCk7KDAsYS5xbikobixvLHQpLGUoe2VkZ2VzOnR9KX0sc2V0RGVmYXVsdE5vZGVzQW5kRWRnZXM6KHQsbik9PntpZih0KXtsZXR7c2V0Tm9kZXM6bn09cygpO24odCksZSh7aGFzRGVmYXVsdE5vZGVzOiEwfSl9aWYobil7bGV0e3NldEVkZ2VzOnR9PXMoKTt0KG4pLGUoe2hhc0RlZmF1bHRFZGdlczohMH0pfX0sdXBkYXRlTm9kZUludGVybmFsczp0PT57bGV0e3RyaWdnZXJOb2RlQ2hhbmdlczpuLG5vZGVMb29rdXA6byxwYXJlbnRMb29rdXA6bCxkb21Ob2RlOnIsbm9kZU9yaWdpbjppLG5vZGVFeHRlbnQ6ZCxkZWJ1ZzpjLGZpdFZpZXdRdWV1ZWQ6dX09cygpLHtjaGFuZ2VzOmcsdXBkYXRlZEludGVybmFsczpmfT0oMCxhLnVMKSh0LG8sbCxyLGksZCk7ZiYmKCgwLGEudlMpKG8sbCx7bm9kZU9yaWdpbjppLG5vZGVFeHRlbnQ6ZH0pLHU/KHYoKSxlKHtmaXRWaWV3UXVldWVkOiExLGZpdFZpZXdPcHRpb25zOnZvaWQgMH0pKTplKHt9KSwobnVsbD09Zz92b2lkIDA6Zy5sZW5ndGgpPjAmJihjJiZjb25zb2xlLmxvZygiUmVhY3QgRmxvdzogdHJpZ2dlciBub2RlIGNoYW5nZXMiLGcpLG51bGw9PW58fG4oZykpKX0sdXBkYXRlTm9kZVBvc2l0aW9uczpmdW5jdGlvbihlKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXSYmYXJndW1lbnRzWzFdLG49W10sbz1bXSx7bm9kZUxvb2t1cDpsLHRyaWdnZXJOb2RlQ2hhbmdlczpyfT1zKCk7Zm9yKGxldFtyLGFdb2YgZSl7bGV0IGU9bC5nZXQocikscz0hISgobnVsbD09ZT92b2lkIDA6ZS5leHBhbmRQYXJlbnQpJiYobnVsbD09ZT92b2lkIDA6ZS5wYXJlbnRJZCkmJihudWxsPT1hP3ZvaWQgMDphLnBvc2l0aW9uKSksYz17aWQ6cix0eXBlOiJwb3NpdGlvbiIscG9zaXRpb246cz97eDpNYXRoLm1heCgwLGEucG9zaXRpb24ueCkseTpNYXRoLm1heCgwLGEucG9zaXRpb24ueSl9OmEucG9zaXRpb24sZHJhZ2dpbmc6dH07aWYocyYmZS5wYXJlbnRJZCl7dmFyIGksZDtuLnB1c2goe2lkOnIscGFyZW50SWQ6ZS5wYXJlbnRJZCxyZWN0OnsuLi5hLmludGVybmFscy5wb3NpdGlvbkFic29sdXRlLHdpZHRoOm51bGwhPT0oaT1hLm1lYXN1cmVkLndpZHRoKSYmdm9pZCAwIT09aT9pOjAsaGVpZ2h0Om51bGwhPT0oZD1hLm1lYXN1cmVkLmhlaWdodCkmJnZvaWQgMCE9PWQ/ZDowfX0pfW8ucHVzaChjKX1pZihuLmxlbmd0aD4wKXtsZXR7cGFyZW50TG9va3VwOmUsbm9kZU9yaWdpbjp0fT1zKCkscj0oMCxhLnI4KShuLGwsZSx0KTtvLnB1c2goLi4ucil9cihvKX0sdHJpZ2dlck5vZGVDaGFuZ2VzOmU9PntsZXR7b25Ob2Rlc0NoYW5nZTp0LHNldE5vZGVzOm4sbm9kZXM6byxoYXNEZWZhdWx0Tm9kZXM6bCxkZWJ1ZzpyfT1zKCk7KG51bGw9PWU/dm9pZCAwOmUubGVuZ3RoKSYmKGwmJm4oWihlLG8pKSxyJiZjb25zb2xlLmxvZygiUmVhY3QgRmxvdzogdHJpZ2dlciBub2RlIGNoYW5nZXMiLGUpLG51bGw9PXR8fHQoZSkpfSx0cmlnZ2VyRWRnZUNoYW5nZXM6ZT0+e2xldHtvbkVkZ2VzQ2hhbmdlOnQsc2V0RWRnZXM6bixlZGdlczpvLGhhc0RlZmF1bHRFZGdlczpsLGRlYnVnOnJ9PXMoKTsobnVsbD09ZT92b2lkIDA6ZS5sZW5ndGgpJiYobCYmbihaKGUsbykpLHImJmNvbnNvbGUubG9nKCJSZWFjdCBGbG93OiB0cmlnZ2VyIGVkZ2UgY2hhbmdlcyIsZSksbnVsbD09dHx8dChlKSl9LGFkZFNlbGVjdGVkTm9kZXM6ZT0+e2xldHttdWx0aVNlbGVjdGlvbkFjdGl2ZTp0LGVkZ2VMb29rdXA6bixub2RlTG9va3VwOm8sdHJpZ2dlck5vZGVDaGFuZ2VzOmwsdHJpZ2dlckVkZ2VDaGFuZ2VzOnJ9PXMoKTtpZih0KXtsKGUubWFwKGU9PlcoZSwhMCkpKTtyZXR1cm59bChZKG8sbmV3IFNldChbLi4uZV0pLCEwKSkscihZKG4pKX0sYWRkU2VsZWN0ZWRFZGdlczplPT57bGV0e211bHRpU2VsZWN0aW9uQWN0aXZlOnQsZWRnZUxvb2t1cDpuLG5vZGVMb29rdXA6byx0cmlnZ2VyTm9kZUNoYW5nZXM6bCx0cmlnZ2VyRWRnZUNoYW5nZXM6cn09cygpO2lmKHQpe3IoZS5tYXAoZT0+VyhlLCEwKSkpO3JldHVybn1yKFkobixuZXcgU2V0KFsuLi5lXSkpKSxsKFkobyxuZXcgU2V0LCEwKSl9LHVuc2VsZWN0Tm9kZXNBbmRFZGdlczpmdW5jdGlvbigpe2xldHtub2RlczplLGVkZ2VzOnR9PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx7ZWRnZXM6bixub2RlczpvLG5vZGVMb29rdXA6bCx0cmlnZ2VyTm9kZUNoYW5nZXM6cix0cmlnZ2VyRWRnZUNoYW5nZXM6aX09cygpLGE9KGV8fG8pLm1hcChlPT57bGV0IHQ9bC5nZXQoZS5pZCk7cmV0dXJuIHQmJih0LnNlbGVjdGVkPSExKSxXKGUuaWQsITEpfSksZD0odHx8bikubWFwKGU9PlcoZS5pZCwhMSkpO3IoYSksaShkKX0sc2V0TWluWm9vbTp0PT57bGV0e3Bhblpvb206bixtYXhab29tOm99PXMoKTtudWxsPT1ufHxuLnNldFNjYWxlRXh0ZW50KFt0LG9dKSxlKHttaW5ab29tOnR9KX0sc2V0TWF4Wm9vbTp0PT57bGV0"
     ""
     ""
     "Zml0VmlldzpQfT1lbCgpO3JldHVybigwLGwuanN4cykoQyx7Y2xhc3NOYW1lOigwLGkuQSkoWyJyZWFjdC1mbG93X19jb250cm9scyIsImhvcml6b250YWwiPT09Yj8iaG9yaXpvbnRhbCI6InZlcnRpY2FsIix2XSkscG9zaXRpb246bSxzdHlsZTp0LCJkYXRhLXRlc3RpZCI6InJmX19jb250cm9scyIsImFyaWEtbGFiZWwiOm51bGwhPXk/eTpOWyJjb250cm9scy5hcmlhTGFiZWwiXSxjaGlsZHJlbjpbbiYmKDAsbC5qc3hzKShsLkZyYWdtZW50LHtjaGlsZHJlbjpbKDAsbC5qc3gpKHRCLHtvbkNsaWNrOigpPT57aygpLG51bGw9PXN8fHMoKX0sY2xhc3NOYW1lOiJyZWFjdC1mbG93X19jb250cm9scy16b29taW4iLHRpdGxlOk5bImNvbnRyb2xzLnpvb21Jbi5hcmlhTGFiZWwiXSwiYXJpYS1sYWJlbCI6TlsiY29udHJvbHMuem9vbUluLmFyaWFMYWJlbCJdLGRpc2FibGVkOkUsY2hpbGRyZW46KDAsbC5qc3gpKHRPLHt9KX0pLCgwLGwuanN4KSh0Qix7b25DbGljazooKT0+e00oKSxudWxsPT1jfHxjKCl9LGNsYXNzTmFtZToicmVhY3QtZmxvd19fY29udHJvbHMtem9vbW91dCIsdGl0bGU6TlsiY29udHJvbHMuem9vbU91dC5hcmlhTGFiZWwiXSwiYXJpYS1sYWJlbCI6TlsiY29udHJvbHMuem9vbU91dC5hcmlhTGFiZWwiXSxkaXNhYmxlZDp3LGNoaWxkcmVuOigwLGwuanN4KSh0Uix7fSl9KV19KSxvJiYoMCxsLmpzeCkodEIse2NsYXNzTmFtZToicmVhY3QtZmxvd19fY29udHJvbHMtZml0dmlldyIsb25DbGljazooKT0+e1AoYSksbnVsbD09dXx8dSgpfSx0aXRsZTpOWyJjb250cm9scy5maXRWaWV3LmFyaWFMYWJlbCJdLCJhcmlhLWxhYmVsIjpOWyJjb250cm9scy5maXRWaWV3LmFyaWFMYWJlbCJdLGNoaWxkcmVuOigwLGwuanN4KSh0SSx7fSl9KSxyJiYoMCxsLmpzeCkodEIse2NsYXNzTmFtZToicmVhY3QtZmxvd19fY29udHJvbHMtaW50ZXJhY3RpdmUiLG9uQ2xpY2s6KCk9Pnt4LnNldFN0YXRlKHtub2Rlc0RyYWdnYWJsZTohUyxub2Rlc0Nvbm5lY3RhYmxlOiFTLGVsZW1lbnRzU2VsZWN0YWJsZTohU30pLG51bGw9PWd8fGcoIVMpfSx0aXRsZTpOWyJjb250cm9scy5pbnRlcmFjdGl2ZS5hcmlhTGFiZWwiXSwiYXJpYS1sYWJlbCI6TlsiY29udHJvbHMuaW50ZXJhY3RpdmUuYXJpYUxhYmVsIl0sY2hpbGRyZW46Uz8oMCxsLmpzeCkodHose30pOigwLGwuanN4KSh0TCx7fSl9KSxoXX0pfXRILmRpc3BsYXlOYW1lPSJDb250cm9scyI7bGV0IHRUPSgwLHIubWVtbykodEgpLHRGPSgwLHIubWVtbykoZnVuY3Rpb24oZSl7bGV0e2lkOnQseDpuLHk6byx3aWR0aDpyLGhlaWdodDphLHN0eWxlOnMsY29sb3I6ZCxzdHJva2VDb2xvcjpjLHN0cm9rZVdpZHRoOnUsY2xhc3NOYW1lOmcsYm9yZGVyUmFkaXVzOmYsc2hhcGVSZW5kZXJpbmc6cCxzZWxlY3RlZDp2LG9uQ2xpY2s6aH09ZSx7YmFja2dyb3VuZDptLGJhY2tncm91bmRDb2xvcjpifT1zfHx7fTtyZXR1cm4oMCxsLmpzeCkoInJlY3QiLHtjbGFzc05hbWU6KDAsaS5BKShbInJlYWN0LWZsb3dfX21pbmltYXAtbm9kZSIse3NlbGVjdGVkOnZ9LGddKSx4Om4seTpvLHJ4OmYscnk6Zix3aWR0aDpyLGhlaWdodDphLHN0eWxlOntmaWxsOmR8fG18fGIsc3Ryb2tlOmMsc3Ryb2tlV2lkdGg6dX0sc2hhcGVSZW5kZXJpbmc6cCxvbkNsaWNrOmg/ZT0+aChlLHQpOnZvaWQgMH0pfSksdFo9ZT0+ZS5ub2Rlcy5tYXAoZT0+ZS5pZCksdFg9ZT0+ZSBpbnN0YW5jZW9mIEZ1bmN0aW9uP2U6KCk9PmUsdEs9KDAsci5tZW1vKShmdW5jdGlvbihlKXtsZXR7aWQ6dCxub2RlQ29sb3JGdW5jOm4sbm9kZVN0cm9rZUNvbG9yRnVuYzpvLG5vZGVDbGFzc05hbWVGdW5jOnIsbm9kZUJvcmRlclJhZGl1czppLG5vZGVTdHJva2VXaWR0aDpzLHNoYXBlUmVuZGVyaW5nOmMsTm9kZUNvbXBvbmVudDp1LG9uQ2xpY2s6Z309ZSx7bm9kZTpwLHg6dix5Omgsd2lkdGg6bSxoZWlnaHQ6Yn09ZihlPT57bGV0e2ludGVybmFsczpufT1lLm5vZGVMb29rdXAuZ2V0KHQpLG89bi51c2VyTm9kZSx7eDpsLHk6cn09bi5wb3NpdGlvbkFic29sdXRlLHt3aWR0aDppLGhlaWdodDpzfT0oMCxhLnVEKShvKTtyZXR1cm57bm9kZTpvLHg6bCx5OnIsd2lkdGg6aSxoZWlnaHQ6c319LGQueCk7cmV0dXJuIHAmJiFwLmhpZGRlbiYmKDAsYS5RRSkocCk/KDAsbC5qc3gpKHUse3g6dix5Omgsd2lkdGg6bSxoZWlnaHQ6YixzdHlsZTpwLnN0eWxlLHNlbGVjdGVkOiEhcC5zZWxlY3RlZCxjbGFzc05hbWU6cihwKSxjb2xvcjpuKHApLGJvcmRlclJhZGl1czppLHN0cm9rZUNvbG9yOm8ocCksc3Ryb2tlV2lkdGg6cyxzaGFwZVJlbmRlcmluZzpjLG9uQ2xpY2s6ZyxpZDpwLmlkfSk6bnVsbH0pLHRXPWU9PiFlLmhpZGRlbjthLnhOLkxpbmUsYS54Ti5IYW5kbGU7bGV0IHRZPWU9Pnt2YXIgdDtyZXR1cm4gbnVsbD09PSh0PWUuZG9tTm9kZSl8fHZvaWQgMD09PXQ/dm9pZCAwOnQucXVlcnlTZWxlY3RvcigiLnJlYWN0LWZsb3dfX3JlbmRlcmVyIil9LHRRPShlLHQpPT4obnVsbD09ZT92b2lkIDA6ZS5pbnRlcm5hbHMucG9zaXRpb25BYnNvbHV0ZS54KSE9PShudWxsPT10P3ZvaWQgMDp0LmludGVybmFscy5wb3NpdGlvbkFic29sdXRlLngpfHwobnVsbD09ZT92b2lkIDA6ZS5pbnRlcm5hbHMucG9zaXRpb25BYnNvbHV0ZS55KSE9PShudWxsPT10P3ZvaWQgMDp0LmludGVybmFscy5wb3NpdGlvbkFic29sdXRlLnkpfHwobnVsbD09ZT92b2lkIDA6ZS5tZWFzdXJlZC53aWR0aCkhPT0obnVsbD09dD92b2lkIDA6dC5tZWFzdXJlZC53aWR0aCl8fChudWxsPT1lP3ZvaWQgMDplLm1lYXN1cmVkLmhlaWdodCkhPT0obnVsbD09dD92b2lkIDA6dC5tZWFzdXJlZC5oZWlnaHQpfHwobnVsbD09ZT92b2lkIDA6ZS5zZWxlY3RlZCkhPT0obnVsbD09dD92b2lkIDA6dC5zZWxlY3RlZCl8fChudWxsPT1lP3ZvaWQgMDplLmludGVybmFscy56KSE9PShudWxsPT10P3ZvaWQgMDp0LmludGVybmFscy56KX19XSk7",    //
     102204, //
     "application/javascript", //
     "/_next/static/chunks/32fa3855-229c70a9f91729d1.js/", //
     
};
}
