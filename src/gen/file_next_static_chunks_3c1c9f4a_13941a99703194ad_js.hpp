
#pragma once
#include "files.hpp"
namespace duckdb {
const File FILE_NEXT_STATIC_CHUNKS_3C1C9F4A_13941A99703194AD_JS = {
     // Content
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "KTtpZighcy5vayl7bGV0IGU9YXdhaXQgcy50ZXh0KCkuY2F0Y2goKCk9Pm51bGwpLHQ9bmV3IHRDKHttZXNzYWdlOmBNQ1AgU1NFIFRyYW5zcG9ydCBFcnJvcjogUE9TVGluZyB0byBlbmRwb2ludCAoSFRUUCAke3Muc3RhdHVzfSk6ICR7ZX1gfSk7bnVsbD09KHI9dGhpcy5vbmVycm9yKXx8ci5jYWxsKHRoaXMsdCk7cmV0dXJufX1jYXRjaChlKXtudWxsPT0oYT10aGlzLm9uZXJyb3IpfHxhLmNhbGwodGhpcyxlKTtyZXR1cm59fX07ZnVuY3Rpb24gcnQoZT17fSl7bGV0IHQ9bmV3IFRleHRFbmNvZGVyLHI9IiI7cmV0dXJuIG5ldyBUcmFuc2Zvcm1TdHJlYW0oe2FzeW5jIHN0YXJ0KCl7ZS5vblN0YXJ0JiZhd2FpdCBlLm9uU3RhcnQoKX0sYXN5bmMgdHJhbnNmb3JtKGEsbil7bi5lbnF1ZXVlKHQuZW5jb2RlKGEpKSxyKz1hLGUub25Ub2tlbiYmYXdhaXQgZS5vblRva2VuKGEpLGUub25UZXh0JiYic3RyaW5nIj09dHlwZW9mIGEmJmF3YWl0IGUub25UZXh0KGEpfSxhc3luYyBmbHVzaCgpe2Uub25Db21wbGV0aW9uJiZhd2FpdCBlLm9uQ29tcGxldGlvbihyKSxlLm9uRmluYWwmJmF3YWl0IGUub25GaW5hbChyKX19KX1mdW5jdGlvbiBycihlLHQpe3JldHVybiBlLnBpcGVUaHJvdWdoKG5ldyBUcmFuc2Zvcm1TdHJlYW0oe3RyYW5zZm9ybTphc3luYyhlLHQpPT57dmFyIHI7aWYoInN0cmluZyI9PXR5cGVvZiBlKXt0LmVucXVldWUoZSk7cmV0dXJufWlmKCJldmVudCJpbiBlKXsib25fY2hhdF9tb2RlbF9zdHJlYW0iPT09ZS5ldmVudCYmcm8obnVsbD09KHI9ZS5kYXRhKT92b2lkIDA6ci5jaHVuayx0KTtyZXR1cm59cm8oZSx0KX19KSkucGlwZVRocm91Z2gocnQodCkpLnBpcGVUaHJvdWdoKG5ldyBUZXh0RGVjb2RlclN0cmVhbSkucGlwZVRocm91Z2gobmV3IFRyYW5zZm9ybVN0cmVhbSh7dHJhbnNmb3JtOmFzeW5jKGUsdCk9Pnt0LmVucXVldWUoKDAsSS5INCkoInRleHQiLGUpKX19KSl9ZnVuY3Rpb24gcmEoZSx0KXtyZXR1cm4gcnIoZSx0KS5waXBlVGhyb3VnaChuZXcgVGV4dEVuY29kZXJTdHJlYW0pfWZ1bmN0aW9uIHJuKGUsdCl7dmFyIHI7bGV0IGE9cnIoZSxudWxsPT10P3ZvaWQgMDp0LmNhbGxiYWNrcykucGlwZVRocm91Z2gobmV3IFRleHRFbmNvZGVyU3RyZWFtKSxuPW51bGw9PXQ/dm9pZCAwOnQuZGF0YSxzPW51bGw9PXQ/dm9pZCAwOnQuaW5pdDtyZXR1cm4gbmV3IFJlc3BvbnNlKG4/dEUobi5zdHJlYW0sYSk6YSx7c3RhdHVzOm51bGwhPShyPW51bGw9PXM/dm9pZCAwOnMuc3RhdHVzKT9yOjIwMCxzdGF0dXNUZXh0Om51bGw9PXM/dm9pZCAwOnMuc3RhdHVzVGV4dCxoZWFkZXJzOkMobnVsbD09cz92b2lkIDA6cy5oZWFkZXJzLHtjb250ZW50VHlwZToidGV4dC9wbGFpbjsgY2hhcnNldD11dGYtOCIsZGF0YVN0cmVhbVZlcnNpb246InYxIn0pfSl9ZnVuY3Rpb24gcnMoZSx0KXt0LmRhdGFTdHJlYW0ubWVyZ2UocnIoZSx0LmNhbGxiYWNrcykpfWZ1bmN0aW9uIHJvKGUsdCl7aWYoInN0cmluZyI9PXR5cGVvZiBlLmNvbnRlbnQpdC5lbnF1ZXVlKGUuY29udGVudCk7ZWxzZSBmb3IobGV0IHIgb2YgZS5jb250ZW50KSJ0ZXh0Ij09PXIudHlwZSYmdC5lbnF1ZXVlKHIudGV4dCl9ZnVuY3Rpb24gcmkoZSx0KXtsZXQgcjtsZXQgYT0ocj0hMCxlPT4ociYmKGU9ZS50cmltU3RhcnQoKSkmJihyPSExKSxlKSk7cmV0dXJuKDAseC5OUikoZVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSkucGlwZVRocm91Z2gobmV3IFRyYW5zZm9ybVN0cmVhbSh7YXN5bmMgdHJhbnNmb3JtKGUsdCl7dC5lbnF1ZXVlKGEoZS5kZWx0YSkpfX0pKS5waXBlVGhyb3VnaChydCh0KSkucGlwZVRocm91Z2gobmV3IFRleHREZWNvZGVyU3RyZWFtKS5waXBlVGhyb3VnaChuZXcgVHJhbnNmb3JtU3RyZWFtKHt0cmFuc2Zvcm06YXN5bmMoZSx0KT0+e3QuZW5xdWV1ZSgoMCxJLkg0KSgidGV4dCIsZSkpfX0pKX1mdW5jdGlvbiBybChlLHQpe3JldHVybiByaShlLHQpLnBpcGVUaHJvdWdoKG5ldyBUZXh0RW5jb2RlclN0cmVhbSl9ZnVuY3Rpb24gcnUoZSx0PXt9KXt2YXIgcjtsZXR7aW5pdDphLGRhdGE6bixjYWxsYmFja3M6c309dCxvPXJpKGUscykucGlwZVRocm91Z2gobmV3IFRleHRFbmNvZGVyU3RyZWFtKTtyZXR1cm4gbmV3IFJlc3BvbnNlKG4/dEUobi5zdHJlYW0sbyk6byx7c3RhdHVzOm51bGwhPShyPW51bGw9PWE/dm9pZCAwOmEuc3RhdHVzKT9yOjIwMCxzdGF0dXNUZXh0Om51bGw9PWE/dm9pZCAwOmEuc3RhdHVzVGV4dCxoZWFkZXJzOkMobnVsbD09YT92b2lkIDA6YS5oZWFkZXJzLHtjb250ZW50VHlwZToidGV4dC9wbGFpbjsgY2hhcnNldD11dGYtOCIsZGF0YVN0cmVhbVZlcnNpb246InYxIn0pfSl9ZnVuY3Rpb24gcnAoZSx0KXt0LmRhdGFTdHJlYW0ubWVyZ2UocmkoZSx0LmNhbGxiYWNrcykpfWsoe30se21lcmdlSW50b0RhdGFTdHJlYW06KCk9PnJzLHRvRGF0YVN0cmVhbTooKT0+cmEsdG9EYXRhU3RyZWFtUmVzcG9uc2U6KCk9PnJufSksayh7fSx7bWVyZ2VJbnRvRGF0YVN0cmVhbTooKT0+cnAsdG9EYXRhU3RyZWFtOigpPT5ybCx0b0RhdGFTdHJlYW1SZXNwb25zZTooKT0+cnV9KX19XSk7",    //
     85300, //
     "application/javascript", //
     "/_next/static/chunks/3c1c9f4a-13941a99703194ad.js/", //
     
};
}
