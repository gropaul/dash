
#pragma once
#include "files.hpp"
namespace duckdb {
const File FILE_NEXT_STATIC_CHUNKS_696_B636FE34B79A4E00_JS = {
     // Content
     "KHNlbGYud2VicGFja0NodW5rX05fRT1zZWxmLndlYnBhY2tDaHVua19OX0V8fFtdKS5wdXNoKFtbNjk2XSx7MjI6KGUsdCxyKT0+eyJ1c2Ugc3RyaWN0IjtyLmQodCx7QTooKT0+bn0pO2xldCBuPSgwLHIoNjE1NjEpLkEpKCJUb2dnbGVMZWZ0IixbWyJyZWN0Iix7d2lkdGg6IjIwIixoZWlnaHQ6IjEyIix4OiIyIix5OiI2IixyeDoiNiIscnk6IjYiLGtleToiZjJ2dDdkIn1dLFsiY2lyY2xlIix7Y3g6IjgiLGN5OiIxMiIscjoiMiIsa2V5OiIxbnZidzMifV1dKX0sNTU1OihlLHQscik9PnsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHQuVGFiQnV0dG9uPXZvaWQgMDtsZXQgbj1yKDYwOTY3KSxpPXIoMjM5Mikscz1yKDIxNDgzKSxvPXIoMTQ3NzIpLGE9cig0MjY1MyksbD1yKDM5ODIzKSx1PXIoNTIxNTMpO3QuVGFiQnV0dG9uPWU9PntsZXR7bGF5b3V0OnQsbm9kZTpyLHNlbGVjdGVkOmQsaWNvbkZhY3Rvcnk6Yyx0aXRsZUZhY3Rvcnk6aCxpY29uczpwLHBhdGg6Zn09ZSxtPW4udXNlUmVmKG51bGwpLGc9bi51c2VSZWYobnVsbCkseT1lPT57KDAsdS5pc0F1eE1vdXNlRXZlbnQpKGUpfHx0LmdldEVkaXRpbmdUYWIoKXx8dC5kcmFnU3RhcnQoZSx2b2lkIDAscixyLmlzRW5hYmxlRHJhZygpLF8sdil9LGI9ZT0+eygwLHUuaXNBdXhNb3VzZUV2ZW50KShlKSYmdC5hdXhNb3VzZUNsaWNrKHIsZSl9LF89KCk9Pnt0LmRvQWN0aW9uKHMuQWN0aW9ucy5zZWxlY3RUYWIoci5nZXRJZCgpKSl9LHY9ZT0+e3IuaXNFbmFibGVSZW5hbWUoKSYmdygpfSx3PSgpPT57dC5zZXRFZGl0aW5nVGFiKHIpLHQuZ2V0Q3VycmVudERvY3VtZW50KCkuYm9keS5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWRvd24iLFQpLHQuZ2V0Q3VycmVudERvY3VtZW50KCkuYm9keS5hZGRFdmVudExpc3RlbmVyKCJ0b3VjaHN0YXJ0IixUKX0sVD1lPT57ZS50YXJnZXQhPT1nLmN1cnJlbnQmJih0LmdldEN1cnJlbnREb2N1bWVudCgpLmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIixUKSx0LmdldEN1cnJlbnREb2N1bWVudCgpLmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcigidG91Y2hzdGFydCIsVCksdC5zZXRFZGl0aW5nVGFiKHZvaWQgMCkpfSxTPSgpPT57bGV0IGU9ci5nZXRDbG9zZVR5cGUoKTtyZXR1cm4hIWR8fGU9PT1hLklDbG9zZVR5cGUuQWx3YXlzfHxlPT09YS5JQ2xvc2VUeXBlLlZpc2libGUmJiEhd2luZG93Lm1hdGNoTWVkaWEmJiEhd2luZG93Lm1hdGNoTWVkaWEoIihob3ZlcjogaG92ZXIpIGFuZCAocG9pbnRlcjogZmluZSkiKS5tYXRjaGVzfSxFPWU9PntlLnN0b3BQcm9wYWdhdGlvbigpfTtuLnVzZUxheW91dEVmZmVjdCgoKT0+e3goKSx0LmdldEVkaXRpbmdUYWIoKT09PXImJmcuY3VycmVudC5zZWxlY3QoKX0pO2xldCB4PSgpPT57dmFyIGU7bGV0IG49dC5nZXREb21SZWN0KCksaT1udWxsPT09KGU9bS5jdXJyZW50KXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtpJiZuJiZyLl9zZXRUYWJSZWN0KG5ldyBvLlJlY3QoaS5sZWZ0LW4ubGVmdCxpLnRvcC1uLnRvcCxpLndpZHRoLGkuaGVpZ2h0KSl9LEE9ZT0+e2Uuc3RvcFByb3BhZ2F0aW9uKCl9LEk9dC5nZXRDbGFzc05hbWUsTz1yLmdldFBhcmVudCgpLFI9Ty5pc0VuYWJsZVNpbmdsZVRhYlN0cmV0Y2goKSYmMT09PU8uZ2V0Q2hpbGRyZW4oKS5sZW5ndGgsTj1SP2wuQ0xBU1NFUy5GTEVYTEFZT1VUX19UQUJfQlVUVE9OX1NUUkVUQ0g6bC5DTEFTU0VTLkZMRVhMQVlPVVRfX1RBQl9CVVRUT04sQz1JKE4pO0MrPSIgIitJKE4rIl8iK08uZ2V0VGFiTG9jYXRpb24oKSksUnx8KGQ/Qys9IiAiK0koTisiLS1zZWxlY3RlZCIpOkMrPSIgIitJKE4rIi0tdW5zZWxlY3RlZCIpKSx2b2lkIDAhPT1yLmdldENsYXNzTmFtZSgpJiYoQys9IiAiK3IuZ2V0Q2xhc3NOYW1lKCkpO2xldCBMPSgwLHUuZ2V0UmVuZGVyU3RhdGVFeCkodCxyLGMsaCksRD1MLmNvbnRlbnQ/bi5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6SShsLkNMQVNTRVMuRkxFWExBWU9VVF9fVEFCX0JVVFRPTl9DT05URU5UKX0sTC5jb250ZW50KTpudWxsLEI9TC5sZWFkaW5nP24uY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOkkobC5DTEFTU0VTLkZMRVhMQVlPVVRfX1RBQl9CVVRUT05fTEVBRElORyl9LEwubGVhZGluZyk6bnVsbDtpZih0LmdldEVkaXRpbmdUYWIoKT09PXImJihEPW4uY3JlYXRlRWxlbWVudCgiaW5wdXQiLHtyZWY6ZyxjbGFzc05hbWU6SShsLkNMQVNTRVMuRkxFWExBWU9VVF9fVEFCX0JVVFRPTl9URVhUQk9YKSwiZGF0YS1sYXlvdXQtcGF0aCI6ZisiL3RleHRib3giLHR5cGU6InRleHQiLGF1dG9Gb2N1czohMCxkZWZhdWx0VmFsdWU6ci5nZXROYW1lKCksb25LZXlEb3duOmU9PnsiRXNjYXBlIj09PWUuY29kZT90LnNldEVkaXRpbmdUYWIodm9pZCAwKToiRW50ZXIiPT09ZS5jb2RlJiYodC5zZXRFZGl0aW5nVGFiKHZvaWQgMCksdC5kb0FjdGlvbihzLkFjdGlvbnMucmVuYW1lVGFiKHIuZ2V0SWQoKSxlLnRhcmdldC52YWx1ZSkpKX0sb25Nb3VzZURvd246QSxvblRvdWNoU3RhcnQ6QX0pKSxyLmlzRW5hYmxlQ2xvc2UoKSYmIVIpe2xldCBlPXQuaTE4bk5hbWUoaS5JMThuTGFiZWwuQ2xvc2VfVGFiKTtMLmJ1dHRvbnMucHVzaChuLmNyZWF0ZUVsZW1lbnQoImRpdiIse2tleToiY2xvc2UiLCJkYXRhLWxheW91dC1wYXRoIjpmKyIvYnV0dG9uL2Nsb3NlIix0aXRsZTplLGNsYXNzTmFtZTpJKGwuQ0xBU1NFUy5GTEVYTEFZT1VUX19UQUJfQlVUVE9OX1RSQUlMSU5HKSxvbk1vdXNlRG93bjpFLG9uQ2xpY2s6ZT0+e1MoKT90LmRvQWN0aW9uKHMuQWN0aW9ucy5kZWxldGVUYWIoci5nZXRJZCgpKSk6XygpfSxvblRvdWNoU3RhcnQ6RX0sImZ1bmN0aW9uIj09dHlwZW9mIHAuY2xvc2U/cC5jbG9zZShyKTpwLmNsb3NlKSl9cmV0dXJuIG4uY3JlYXRlRWxlbWVudCgiZGl2Iix7cmVmOm0sImRhdGEtbGF5b3V0LXBhdGgiOmYsY2xhc3NOYW1lOkMsb25Nb3VzZURvd246eSxvbkNsaWNrOmIsb25BdXhDbGljazpiLG9uQ29udGV4dE1lbnU6ZT0+e3Quc2hvd0NvbnRleHRNZW51KHIsZSl9LG9uVG91Y2hTdGFydDp5LHRpdGxlOnIuZ2V0SGVscFRleHQoKX0sQixELEwuYnV0dG9ucyl9fSwxOTY0OihlLHQscik9PnsidXNlIHN0cmljdCI7ci5kKHQse3FXOigpPT5ofSk7dmFyIG4saT1yKDYwOTY3KSxzPXIoNjI1NjkpLG89cig0ODQ1KSxhPXIoMjY1MTcpLGw9cigxMTAzMCksdT1yKDc2NDk1KSxkPSJkaXNtaXNzYWJsZUxheWVyLnVwZGF0ZSIsYz1pLmNyZWF0ZUNvbnRleHQoe2xheWVyczpuZXcgU2V0LGxheWVyc1dpdGhPdXRzaWRlUG9pbnRlckV2ZW50c0Rpc2FibGVkOm5ldyBTZXQsYnJhbmNoZXM6bmV3IFNldH0pLGg9aS5mb3J3YXJkUmVmKChlLHQpPT57dmFyIHIsaDtsZXR7ZGlzYWJsZU91dHNpZGVQb2ludGVyRXZlbnRzOm09ITEsb25Fc2NhcGVLZXlEb3duOmcsb25Qb2ludGVyRG93bk91dHNpZGU6eSxvbkZvY3VzT3V0c2lkZTpiLG9uSW50ZXJhY3RPdXRzaWRlOl8sb25EaXNtaXNzOnYsLi4ud309ZSxUPWkudXNlQ29udGV4dChjKSxbUyxFXT1pLnVzZVN0YXRlKG51bGwpLHg9bnVsbCE9PShoPW51bGw9PVM/dm9pZCAwOlMub3duZXJEb2N1bWVudCkmJnZvaWQgMCE9PWg/aDpudWxsPT09KHI9Z2xvYmFsVGhpcyl8fHZvaWQgMD09PXI/dm9pZCAwOnIuZG9jdW1lbnQsWyxBXT1pLnVzZVN0YXRlKHt9KSxJPSgwLGEucykodCxlPT5FKGUpKSxPPUFycmF5LmZyb20oVC5sYXllcnMpLFtSXT1bLi4uVC5sYXllcnNXaXRoT3V0c2lkZVBvaW50ZXJFdmVudHNEaXNhYmxlZF0uc2xpY2UoLTEpLE49Ty5pbmRleE9mKFIpLEM9Uz9PLmluZGV4T2YoUyk6LTEsTD1ULmxheWVyc1dpdGhPdXRzaWRlUG9pbnRlckV2ZW50c0Rpc2FibGVkLnNpemU+MCxEPUM+PU4sQj1mdW5jdGlvbihlKXt2YXIgdDtsZXQgcj1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06bnVsbD09PSh0PWdsb2JhbFRoaXMpfHx2b2lkIDA9PT10P3ZvaWQgMDp0LmRvY3VtZW50LG49KDAsbC5jKShlKSxzPWkudXNlUmVmKCExKSxvPWkudXNlUmVmKCgpPT57fSk7cmV0dXJuIGkudXNlRWZmZWN0KCgpPT57bGV0IGU9ZT0+e2lmKGUudGFyZ2V0JiYhcy5jdXJyZW50KXtsZXQgdD1mdW5jdGlvbigpe2YoImRpc21pc3NhYmxlTGF5ZXIucG9pbnRlckRvd25PdXRzaWRlIixuLGkse2Rpc2NyZXRlOiEwfSl9LGk9e29yaWdpbmFsRXZlbnQ6ZX07InRvdWNoIj09PWUucG9pbnRlclR5cGU/KHIucmVtb3ZlRXZlbnRMaXN0ZW5lcigiY2xpY2siLG8uY3VycmVudCksby5jdXJyZW50PXQsci5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsby5jdXJyZW50LHtvbmNlOiEwfSkpOnQoKX1lbHNlIHIucmVtb3ZlRXZlbnRMaXN0ZW5lcigiY2xpY2siLG8uY3VycmVudCk7cy5jdXJyZW50PSExfSx0PXdpbmRvdy5zZXRUaW1lb3V0KCgpPT57ci5hZGRFdmVudExpc3RlbmVyKCJwb2ludGVyZG93biIsZSl9LDApO3JldHVybigpPT57d2luZG93LmNsZWFyVGltZW91dCh0KSxyLnJlbW92ZUV2ZW50TGlzdGVuZXIoInBvaW50ZXJkb3duIixlKSxyLnJlbW92ZUV2ZW50TGlzdGVuZXIoImNsaWNrIixvLmN1cnJlbnQpfX0sW3Isbl0pLHtvblBvaW50ZXJEb3duQ2FwdHVyZTooKT0+cy5jdXJyZW50PSEwfX0oZT0+e2xldCB0PWUudGFyZ2V0LHI9Wy4uLlQuYnJhbmNoZXNdLnNvbWUoZT0+ZS5jb250YWlucyh0KSk7IUR8fHJ8fChudWxsPT15fHx5KGUpLG51bGw9PV98fF8oZSksZS5kZWZhdWx0UHJldmVudGVkfHxudWxsPT12fHx2KCkpfSx4KSxrPWZ1bmN0aW9uKGUpe3ZhciB0O2xldCByPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTpudWxsPT09KHQ9Z2xvYmFsVGhpcyl8fHZvaWQgMD09PXQ/dm9pZCAwOnQuZG9jdW1lbnQsbj0oMCxsLmMpKGUpLHM9aS51c2VSZWYoITEpO3JldHVybiBpLnVzZUVmZmVjdCgoKT0+e2xldCBlPWU9PntlLnRhcmdldCYmIXMuY3VycmVudCYmZigiZGlzbWlzc2FibGVMYXllci5mb2N1c091dHNpZGUiLG4se29yaWdpbmFsRXZlbnQ6ZX0se2Rpc2NyZXRlOiExfSl9O3JldHVybiByLmFkZEV2ZW50TGlzdGVuZXIoImZvY3VzaW4iLGUpLCgpPT5yLnJlbW92ZUV2ZW50TGlzdGVuZXIoImZvY3VzaW4iLGUpfSxbcixuXSkse29uRm9jdXNDYXB0dXJlOigpPT5zLmN1cnJlbnQ9ITAsb25CbHVyQ2FwdHVyZTooKT0+cy5jdXJyZW50PSExfX0oZT0+e2xldCB0PWUudGFyZ2V0O1suLi5ULmJyYW5jaGVzXS5zb21lKGU9PmUuY29udGFpbnModCkpfHwobnVsbD09Ynx8YihlKSxudWxsPT1ffHxfKGUpLGUuZGVmYXVsdFByZXZlbnRlZHx8bnVsbD09dnx8digpKX0seCk7cmV0dXJuIWZ1bmN0aW9uKGUsdD1nbG9iYWxUaGlzPy5kb2N1bWVudCl7bGV0IHI9KDAsbC5jKShlKTtpLnVzZUVmZmVjdCgoKT0+e2xldCBlPWU9PnsiRXNjYXBlIj09PWUua2V5JiZyKGUpfTtyZXR1cm4gdC5hZGRFdmVudExpc3RlbmVyKCJrZXlkb3duIixlLHtjYXB0dXJlOiEwfSksKCk9PnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigia2V5ZG93biIsZSx7Y2FwdHVyZTohMH0pfSxbcix0XSl9KGU9PntDPT09VC5sYXllcnMuc2l6ZS0xJiYobnVsbD09Z3x8ZyhlKSwhZS5kZWZhdWx0UHJldmVudGVkJiZ2JiYoZS5wcmV2ZW50RGVmYXVsdCgpLHYoKSkpfSx4KSxpLnVzZUVmZmVjdCgoKT0+e2lmKFMpcmV0dXJuIG0mJigwPT09VC5sYXllcnNXaXRoT3V0c2lkZVBvaW50ZXJFdmVudHNEaXNhYmxlZC5zaXplJiYobj14LmJvZHkuc3R5bGUucG9pbnRlckV2ZW50cyx4LmJvZHkuc3R5bGUucG9pbnRlckV2ZW50cz0ibm9uZSIpLFQubGF5ZXJzV2l0aE91dHNpZGVQb2ludGVyRXZlbnRzRGlzYWJsZWQuYWRkKFMpKSxULmxheWVycy5hZGQoUykscCgpLCgpPT57bSYmMT09PVQubGF5ZXJzV2l0aE91dHNpZGVQb2ludGVyRXZlbnRzRGlzYWJsZWQuc2l6ZSYmKHguYm9keS5zdHlsZS5wb2ludGVyRXZlbnRzPW4pfX0sW1MseCxtLFRdKSxpLnVzZUVmZmVjdCgoKT0+KCk9PntTJiYoVC5sYXllcnMuZGVsZXRlKFMpLFQubGF5ZXJzV2l0aE91dHNpZGVQb2ludGVyRXZlbnRzRGlzYWJsZWQuZGVsZXRlKFMpLHAoKSl9LFtTLFRdKSxpLnVzZUVmZmVjdCgoKT0+e2xldCBlPSgpPT"
     ""
     "UmVjdHMoe3JlZmVyZW5jZTplLGZsb2F0aW5nOnQsc3RyYXRlZ3k6aX0pLHt4OmQseTpjfT1UKHUsbixsKSxoPW4scD17fSxmPTA7Zm9yKGxldCByPTA7cjxhLmxlbmd0aDtyKyspe2xldHtuYW1lOnMsZm46bX09YVtyXSx7eDpnLHk6eSxkYXRhOmIscmVzZXQ6X309YXdhaXQgbSh7eDpkLHk6Yyxpbml0aWFsUGxhY2VtZW50Om4scGxhY2VtZW50Omgsc3RyYXRlZ3k6aSxtaWRkbGV3YXJlRGF0YTpwLHJlY3RzOnUscGxhdGZvcm06byxlbGVtZW50czp7cmVmZXJlbmNlOmUsZmxvYXRpbmc6dH19KTtkPW51bGwhPWc/ZzpkLGM9bnVsbCE9eT95OmMscD17Li4ucCxbc106ey4uLnBbc10sLi4uYn19LF8mJmY8PTUwJiYoZisrLCJvYmplY3QiPT10eXBlb2YgXyYmKF8ucGxhY2VtZW50JiYoaD1fLnBsYWNlbWVudCksXy5yZWN0cyYmKHU9ITA9PT1fLnJlY3RzP2F3YWl0IG8uZ2V0RWxlbWVudFJlY3RzKHtyZWZlcmVuY2U6ZSxmbG9hdGluZzp0LHN0cmF0ZWd5Oml9KTpfLnJlY3RzKSx7eDpkLHk6Y309VCh1LGgsbCkpLHI9LTEpfXJldHVybnt4OmQseTpjLHBsYWNlbWVudDpoLHN0cmF0ZWd5OmksbWlkZGxld2FyZURhdGE6cH19O2FzeW5jIGZ1bmN0aW9uIEUoZSx0KXt2YXIgcjt2b2lkIDA9PT10JiYodD17fSk7bGV0e3g6bix5OmkscGxhdGZvcm06cyxyZWN0czpvLGVsZW1lbnRzOmEsc3RyYXRlZ3k6bH09ZSx7Ym91bmRhcnk6dT0iY2xpcHBpbmdBbmNlc3RvcnMiLHJvb3RCb3VuZGFyeTpkPSJ2aWV3cG9ydCIsZWxlbWVudENvbnRleHQ6Yz0iZmxvYXRpbmciLGFsdEJvdW5kYXJ5OnA9ITEscGFkZGluZzpmPTB9PWgodCxlKSxtPXYoZiksZz1hW3A/ImZsb2F0aW5nIj09PWM/InJlZmVyZW5jZSI6ImZsb2F0aW5nIjpjXSx5PXcoYXdhaXQgcy5nZXRDbGlwcGluZ1JlY3Qoe2VsZW1lbnQ6bnVsbD09KHI9YXdhaXQgKG51bGw9PXMuaXNFbGVtZW50P3ZvaWQgMDpzLmlzRWxlbWVudChnKSkpfHxyP2c6Zy5jb250ZXh0RWxlbWVudHx8YXdhaXQgKG51bGw9PXMuZ2V0RG9jdW1lbnRFbGVtZW50P3ZvaWQgMDpzLmdldERvY3VtZW50RWxlbWVudChhLmZsb2F0aW5nKSksYm91bmRhcnk6dSxyb290Qm91bmRhcnk6ZCxzdHJhdGVneTpsfSkpLGI9ImZsb2F0aW5nIj09PWM/e3g6bix5Omksd2lkdGg6by5mbG9hdGluZy53aWR0aCxoZWlnaHQ6by5mbG9hdGluZy5oZWlnaHR9Om8ucmVmZXJlbmNlLF89YXdhaXQgKG51bGw9PXMuZ2V0T2Zmc2V0UGFyZW50P3ZvaWQgMDpzLmdldE9mZnNldFBhcmVudChhLmZsb2F0aW5nKSksVD1hd2FpdCAobnVsbD09cy5pc0VsZW1lbnQ/dm9pZCAwOnMuaXNFbGVtZW50KF8pKSYmYXdhaXQgKG51bGw9PXMuZ2V0U2NhbGU/dm9pZCAwOnMuZ2V0U2NhbGUoXykpfHx7eDoxLHk6MX0sUz13KHMuY29udmVydE9mZnNldFBhcmVudFJlbGF0aXZlUmVjdFRvVmlld3BvcnRSZWxhdGl2ZVJlY3Q/YXdhaXQgcy5jb252ZXJ0T2Zmc2V0UGFyZW50UmVsYXRpdmVSZWN0VG9WaWV3cG9ydFJlbGF0aXZlUmVjdCh7ZWxlbWVudHM6YSxyZWN0OmIsb2Zmc2V0UGFyZW50Ol8sc3RyYXRlZ3k6bH0pOmIpO3JldHVybnt0b3A6KHkudG9wLVMudG9wK20udG9wKS9ULnksYm90dG9tOihTLmJvdHRvbS15LmJvdHRvbSttLmJvdHRvbSkvVC55LGxlZnQ6KHkubGVmdC1TLmxlZnQrbS5sZWZ0KS9ULngscmlnaHQ6KFMucmlnaHQteS5yaWdodCttLnJpZ2h0KS9ULnh9fWZ1bmN0aW9uIHgoZSx0KXtyZXR1cm57dG9wOmUudG9wLXQuaGVpZ2h0LHJpZ2h0OmUucmlnaHQtdC53aWR0aCxib3R0b206ZS5ib3R0b20tdC5oZWlnaHQsbGVmdDplLmxlZnQtdC53aWR0aH19ZnVuY3Rpb24gQShlKXtyZXR1cm4gaS5zb21lKHQ9PmVbdF0+PTApfWFzeW5jIGZ1bmN0aW9uIEkoZSx0KXtsZXR7cGxhY2VtZW50OnIscGxhdGZvcm06bixlbGVtZW50czppfT1lLHM9YXdhaXQgKG51bGw9PW4uaXNSVEw/dm9pZCAwOm4uaXNSVEwoaS5mbG9hdGluZykpLG89cChyKSxhPWYociksbD0ieSI9PT15KHIpLHU9WyJsZWZ0IiwidG9wIl0uaW5jbHVkZXMobyk/LTE6MSxkPXMmJmw/LTE6MSxjPWgodCxlKSx7bWFpbkF4aXM6bSxjcm9zc0F4aXM6ZyxhbGlnbm1lbnRBeGlzOmJ9PSJudW1iZXIiPT10eXBlb2YgYz97bWFpbkF4aXM6Yyxjcm9zc0F4aXM6MCxhbGlnbm1lbnRBeGlzOm51bGx9OnttYWluQXhpczpjLm1haW5BeGlzfHwwLGNyb3NzQXhpczpjLmNyb3NzQXhpc3x8MCxhbGlnbm1lbnRBeGlzOmMuYWxpZ25tZW50QXhpc307cmV0dXJuIGEmJiJudW1iZXIiPT10eXBlb2YgYiYmKGc9ImVuZCI9PT1hPy0xKmI6YiksbD97eDpnKmQseTptKnV9Ont4Om0qdSx5OmcqZH19ZnVuY3Rpb24gTygpe3JldHVybiJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93fWZ1bmN0aW9uIFIoZSl7cmV0dXJuIEwoZSk/KGUubm9kZU5hbWV8fCIiKS50b0xvd2VyQ2FzZSgpOiIjZG9jdW1lbnQifWZ1bmN0aW9uIE4oZSl7dmFyIHQ7cmV0dXJuKG51bGw9PWV8fG51bGw9PSh0PWUub3duZXJEb2N1bWVudCk/dm9pZCAwOnQuZGVmYXVsdFZpZXcpfHx3aW5kb3d9ZnVuY3Rpb24gQyhlKXt2YXIgdDtyZXR1cm4gbnVsbD09KHQ9KEwoZSk/ZS5vd25lckRvY3VtZW50OmUuZG9jdW1lbnQpfHx3aW5kb3cuZG9jdW1lbnQpP3ZvaWQgMDp0LmRvY3VtZW50RWxlbWVudH1mdW5jdGlvbiBMKGUpe3JldHVybiEhTygpJiYoZSBpbnN0YW5jZW9mIE5vZGV8fGUgaW5zdGFuY2VvZiBOKGUpLk5vZGUpfWZ1bmN0aW9uIEQoZSl7cmV0dXJuISFPKCkmJihlIGluc3RhbmNlb2YgRWxlbWVudHx8ZSBpbnN0YW5jZW9mIE4oZSkuRWxlbWVudCl9ZnVuY3Rpb24gQihlKXtyZXR1cm4hIU8oKSYmKGUgaW5zdGFuY2VvZiBIVE1MRWxlbWVudHx8ZSBpbnN0YW5jZW9mIE4oZSkuSFRNTEVsZW1lbnQpfWZ1bmN0aW9uIGsoZSl7cmV0dXJuISFPKCkmJiJ1bmRlZmluZWQiIT10eXBlb2YgU2hhZG93Um9vdCYmKGUgaW5zdGFuY2VvZiBTaGFkb3dSb290fHxlIGluc3RhbmNlb2YgTihlKS5TaGFkb3dSb290KX1mdW5jdGlvbiBNKGUpe2xldHtvdmVyZmxvdzp0LG92ZXJmbG93WDpyLG92ZXJmbG93WTpuLGRpc3BsYXk6aX09eihlKTtyZXR1cm4vYXV0b3xzY3JvbGx8b3ZlcmxheXxoaWRkZW58Y2xpcC8udGVzdCh0K24rcikmJiFbImlubGluZSIsImNvbnRlbnRzIl0uaW5jbHVkZXMoaSl9ZnVuY3Rpb24gVShlKXtyZXR1cm5bIjpwb3BvdmVyLW9wZW4iLCI6bW9kYWwiXS5zb21lKHQ9Pnt0cnl7cmV0dXJuIGUubWF0Y2hlcyh0KX1jYXRjaChlKXtyZXR1cm4hMX19KX1mdW5jdGlvbiBGKGUpe2xldCB0PVAoKSxyPUQoZSk/eihlKTplO3JldHVyblsidHJhbnNmb3JtIiwidHJhbnNsYXRlIiwic2NhbGUiLCJyb3RhdGUiLCJwZXJzcGVjdGl2ZSJdLnNvbWUoZT0+ISFyW2VdJiYibm9uZSIhPT1yW2VdKXx8ISFyLmNvbnRhaW5lclR5cGUmJiJub3JtYWwiIT09ci5jb250YWluZXJUeXBlfHwhdCYmISFyLmJhY2tkcm9wRmlsdGVyJiYibm9uZSIhPT1yLmJhY2tkcm9wRmlsdGVyfHwhdCYmISFyLmZpbHRlciYmIm5vbmUiIT09ci5maWx0ZXJ8fFsidHJhbnNmb3JtIiwidHJhbnNsYXRlIiwic2NhbGUiLCJyb3RhdGUiLCJwZXJzcGVjdGl2ZSIsImZpbHRlciJdLnNvbWUoZT0+KHIud2lsbENoYW5nZXx8IiIpLmluY2x1ZGVzKGUpKXx8WyJwYWludCIsImxheW91dCIsInN0cmljdCIsImNvbnRlbnQiXS5zb21lKGU9PihyLmNvbnRhaW58fCIiKS5pbmNsdWRlcyhlKSl9ZnVuY3Rpb24gUCgpe3JldHVybiJ1bmRlZmluZWQiIT10eXBlb2YgQ1NTJiYhIUNTUy5zdXBwb3J0cyYmQ1NTLnN1cHBvcnRzKCItd2Via2l0LWJhY2tkcm9wLWZpbHRlciIsIm5vbmUiKX1mdW5jdGlvbiBqKGUpe3JldHVyblsiaHRtbCIsImJvZHkiLCIjZG9jdW1lbnQiXS5pbmNsdWRlcyhSKGUpKX1mdW5jdGlvbiB6KGUpe3JldHVybiBOKGUpLmdldENvbXB1dGVkU3R5bGUoZSl9ZnVuY3Rpb24gJChlKXtyZXR1cm4gRChlKT97c2Nyb2xsTGVmdDplLnNjcm9sbExlZnQsc2Nyb2xsVG9wOmUuc2Nyb2xsVG9wfTp7c2Nyb2xsTGVmdDplLnNjcm9sbFgsc2Nyb2xsVG9wOmUuc2Nyb2xsWX19ZnVuY3Rpb24gSChlKXtpZigiaHRtbCI9PT1SKGUpKXJldHVybiBlO2xldCB0PWUuYXNzaWduZWRTbG90fHxlLnBhcmVudE5vZGV8fGsoZSkmJmUuaG9zdHx8QyhlKTtyZXR1cm4gayh0KT90Lmhvc3Q6dH1mdW5jdGlvbiBaKGUsdCxyKXt2YXIgbjt2b2lkIDA9PT10JiYodD1bXSksdm9pZCAwPT09ciYmKHI9ITApO2xldCBpPWZ1bmN0aW9uIGUodCl7bGV0IHI9SCh0KTtyZXR1cm4gaihyKT90Lm93bmVyRG9jdW1lbnQ/dC5vd25lckRvY3VtZW50LmJvZHk6dC5ib2R5OkIocikmJk0ocik/cjplKHIpfShlKSxzPWk9PT0obnVsbD09KG49ZS5vd25lckRvY3VtZW50KT92b2lkIDA6bi5ib2R5KSxvPU4oaSk7aWYocyl7bGV0IGU9VyhvKTtyZXR1cm4gdC5jb25jYXQobyxvLnZpc3VhbFZpZXdwb3J0fHxbXSxNKGkpP2k6W10sZSYmcj9aKGUpOltdKX1yZXR1cm4gdC5jb25jYXQoaSxaKGksW10scikpfWZ1bmN0aW9uIFcoZSl7cmV0dXJuIGUucGFyZW50JiZPYmplY3QuZ2V0UHJvdG90eXBlT2YoZS5wYXJlbnQpP2UuZnJhbWVFbGVtZW50Om51bGx9ZnVuY3Rpb24gVihlKXtsZXQgdD16KGUpLHI9cGFyc2VGbG9hdCh0LndpZHRoKXx8MCxuPXBhcnNlRmxvYXQodC5oZWlnaHQpfHwwLGk9QihlKSxzPWk/ZS5vZmZzZXRXaWR0aDpyLG89aT9lLm9mZnNldEhlaWdodDpuLGw9YShyKSE9PXN8fGEobikhPT1vO3JldHVybiBsJiYocj1zLG49bykse3dpZHRoOnIsaGVpZ2h0Om4sJDpsfX1mdW5jdGlvbiBZKGUpe3JldHVybiBEKGUpP2U6ZS5jb250ZXh0RWxlbWVudH1mdW5jdGlvbiBHKGUpe2xldCB0PVkoZSk7aWYoIUIodCkpcmV0dXJuIHUoMSk7bGV0IHI9dC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSx7d2lkdGg6bixoZWlnaHQ6aSwkOnN9PVYodCksbz0ocz9hKHIud2lkdGgpOnIud2lkdGgpL24sbD0ocz9hKHIuaGVpZ2h0KTpyLmhlaWdodCkvaTtyZXR1cm4gbyYmTnVtYmVyLmlzRmluaXRlKG8pfHwobz0xKSxsJiZOdW1iZXIuaXNGaW5pdGUobCl8fChsPTEpLHt4Om8seTpsfX1sZXQgWD11KDApO2Z1bmN0aW9uIHEoZSl7bGV0IHQ9TihlKTtyZXR1cm4gUCgpJiZ0LnZpc3VhbFZpZXdwb3J0P3t4OnQudmlzdWFsVmlld3BvcnQub2Zmc2V0TGVmdCx5OnQudmlzdWFsVmlld3BvcnQub2Zmc2V0VG9wfTpYfWZ1bmN0aW9uIEooZSx0LHIsbil7dmFyIGk7dm9pZCAwPT09dCYmKHQ9ITEpLHZvaWQgMD09PXImJihyPSExKTtsZXQgcz1lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLG89WShlKSxhPXUoMSk7dCYmKG4/RChuKSYmKGE9RyhuKSk6YT1HKGUpKTtsZXQgbD0odm9pZCAwPT09KGk9cikmJihpPSExKSxuJiYoIWl8fG49PT1OKG8pKSYmaSk/cShvKTp1KDApLGQ9KHMubGVmdCtsLngpL2EueCxjPShzLnRvcCtsLnkpL2EueSxoPXMud2lkdGgvYS54LHA9cy5oZWlnaHQvYS55O2lmKG8pe2xldCBlPU4obyksdD1uJiZEKG4pP04obik6bixyPWUsaT1XKHIpO2Zvcig7aSYmbiYmdCE9PXI7KXtsZXQgZT1HKGkpLHQ9aS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxuPXooaSkscz10LmxlZnQrKGkuY2xpZW50TGVmdCtwYXJzZUZsb2F0KG4ucGFkZGluZ0xlZnQpKSplLngsbz10LnRvcCsoaS5jbGllbnRUb3ArcGFyc2VGbG9hdChuLnBhZGRpbmdUb3ApKSplLnk7ZCo9ZS54LGMqPWUueSxoKj1lLngscCo9ZS55LGQrPXMsYys9byxpPVcocj1OKGkpKX19cmV0dXJuIHcoe3dpZHRoOmgsaGVpZ2h0OnAseDpkLHk6Y30pfWZ1bmN0aW9uIEsoZSx0KXtsZXQgcj0kKGUpLnNjcm9sbExlZnQ7cmV0dXJuIHQ/dC5sZWZ0K3I6SihDKGUpKS5sZWZ0K3J9ZnVuY3Rpb24gUShlLHQscil7dm9pZCAwPT09ciYmKHI9ITEpO2xldCBuPWUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7cmV0dXJue3g6bi5sZWZ0K3Quc2Nyb2xsTGVmdC0ocj8wOksoZSxuKSkseTpuLnRvcCt0LnNjcm9sbFRvcH19ZnVuY3Rpb24gZWUoZSx0LHIpe2xldCBuO2lmKCJ2aWV3cG9ydCI9PT10KW49ZnVuY3Rpb24oZSx0KXtsZXQgcj1OKGUpLG49QyhlKSxpPXIudmlzdWFsVmlld3BvcnQscz1uLmNsaWVudFdpZHRoLG89bi5jbGllbnRIZWlnaHQsYT0wLGw9MDtpZihpKXtzPWkud2lkdGgsbz1pLmhlaWdodDtsZXQgZT1QKCk7KCFlfHxlJiYiZml4ZWQiPT09dCkmJihhPWkub2Zmc2V0TGVmdCxsPWkub2Zmc2V0VG9wKX1yZXR1cm57d2lkdGg6cyxoZW"
     ""
     ""
     ""
     ""
     ""
     "OihlLHQscik9PnsidXNlIHN0cmljdCI7ci5kKHQse2g6KCk9PmMsbjooKT0+dX0pO3ZhciBuPXIoNjA5NjcpLGk9cigxMTEwMCkscz1yKDkxMTMzKTtsZXR7dXNlRGVidWdWYWx1ZTpvfT1uLHt1c2VTeW5jRXh0ZXJuYWxTdG9yZVdpdGhTZWxlY3RvcjphfT1pLGw9ZT0+ZTtmdW5jdGlvbiB1KGUsdD1sLHIpe2xldCBuPWEoZS5zdWJzY3JpYmUsZS5nZXRTdGF0ZSxlLmdldFNlcnZlclN0YXRlfHxlLmdldEluaXRpYWxTdGF0ZSx0LHIpO3JldHVybiBvKG4pLG59bGV0IGQ9KGUsdCk9PntsZXQgcj0oMCxzLnkpKGUpLG49KGUsbj10KT0+dShyLGUsbik7cmV0dXJuIE9iamVjdC5hc3NpZ24obixyKSxufSxjPShlLHQpPT5lP2QoZSx0KTpkfSw5MTIyOihlLHQscik9PnsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHQuQm9yZGVyTm9kZT12b2lkIDA7bGV0IG49cig0NjIzNCksaT1yKDMwMzYpLHM9cigyODA3NCksbz1yKDcxMTM5KSxhPXIoNDU5NzYpLGw9cigxNDc3MiksdT1yKDM5ODIzKSxkPXIoNDI4OCksYz1yKDY5ODE1KSxoPXIoMjQwNzUpLHA9cig1OTg5Myk7Y2xhc3MgZiBleHRlbmRzIGQuTm9kZXtzdGF0aWMgX2Zyb21Kc29uKGUsdCl7bGV0IHI9bmV3IGYocy5Eb2NrTG9jYXRpb24uZ2V0QnlOYW1lKGUubG9jYXRpb24pLGUsdCk7cmV0dXJuIGUuY2hpbGRyZW4mJihyLl9jaGlsZHJlbj1lLmNoaWxkcmVuLm1hcChlPT57bGV0IG49aC5UYWJOb2RlLl9mcm9tSnNvbihlLHQpO3JldHVybiBuLl9zZXRQYXJlbnQociksbn0pKSxyfXN0YXRpYyBfY3JlYXRlQXR0cmlidXRlRGVmaW5pdGlvbnMoKXtsZXQgZT1uZXcgaS5BdHRyaWJ1dGVEZWZpbml0aW9ucztyZXR1cm4gZS5hZGQoInR5cGUiLGYuVFlQRSwhMCkuc2V0VHlwZShuLkF0dHJpYnV0ZS5TVFJJTkcpLnNldEZpeGVkKCksZS5hZGQoInNlbGVjdGVkIiwtMSkuc2V0VHlwZShuLkF0dHJpYnV0ZS5OVU1CRVIpLGUuYWRkKCJzaG93IiwhMCkuc2V0VHlwZShuLkF0dHJpYnV0ZS5CT09MRUFOKSxlLmFkZCgiY29uZmlnIix2b2lkIDApLnNldFR5cGUoImFueSIpLGUuYWRkSW5oZXJpdGVkKCJiYXJTaXplIiwiYm9yZGVyQmFyU2l6ZSIpLnNldFR5cGUobi5BdHRyaWJ1dGUuTlVNQkVSKSxlLmFkZEluaGVyaXRlZCgiZW5hYmxlRHJvcCIsImJvcmRlckVuYWJsZURyb3AiKS5zZXRUeXBlKG4uQXR0cmlidXRlLkJPT0xFQU4pLGUuYWRkSW5oZXJpdGVkKCJjbGFzc05hbWUiLCJib3JkZXJDbGFzc05hbWUiKS5zZXRUeXBlKG4uQXR0cmlidXRlLlNUUklORyksZS5hZGRJbmhlcml0ZWQoImF1dG9TZWxlY3RUYWJXaGVuT3BlbiIsImJvcmRlckF1dG9TZWxlY3RUYWJXaGVuT3BlbiIpLnNldFR5cGUobi5BdHRyaWJ1dGUuQk9PTEVBTiksZS5hZGRJbmhlcml0ZWQoImF1dG9TZWxlY3RUYWJXaGVuQ2xvc2VkIiwiYm9yZGVyQXV0b1NlbGVjdFRhYldoZW5DbG9zZWQiKS5zZXRUeXBlKG4uQXR0cmlidXRlLkJPT0xFQU4pLGUuYWRkSW5oZXJpdGVkKCJzaXplIiwiYm9yZGVyU2l6ZSIpLnNldFR5cGUobi5BdHRyaWJ1dGUuTlVNQkVSKSxlLmFkZEluaGVyaXRlZCgibWluU2l6ZSIsImJvcmRlck1pblNpemUiKS5zZXRUeXBlKG4uQXR0cmlidXRlLk5VTUJFUiksZS5hZGRJbmhlcml0ZWQoImVuYWJsZUF1dG9IaWRlIiwiYm9yZGVyRW5hYmxlQXV0b0hpZGUiKS5zZXRUeXBlKG4uQXR0cmlidXRlLkJPT0xFQU4pLGV9Y29uc3RydWN0b3IoZSx0LHIpe3N1cGVyKHIpLHRoaXMuX2FkanVzdGVkU2l6ZT0wLHRoaXMuX2NhbGN1bGF0ZWRCb3JkZXJCYXJTaXplPTAsdGhpcy5fbG9jYXRpb249ZSx0aGlzLl9kcmF3Q2hpbGRyZW49W10sdGhpcy5fYXR0cmlidXRlcy5pZD1gYm9yZGVyXyR7ZS5nZXROYW1lKCl9YCxmLl9hdHRyaWJ1dGVEZWZpbml0aW9ucy5mcm9tSnNvbih0LHRoaXMuX2F0dHJpYnV0ZXMpLHIuX2FkZE5vZGUodGhpcyl9Z2V0TG9jYXRpb24oKXtyZXR1cm4gdGhpcy5fbG9jYXRpb259Z2V0VGFiSGVhZGVyUmVjdCgpe3JldHVybiB0aGlzLl90YWJIZWFkZXJSZWN0fWdldFJlY3QoKXtyZXR1cm4gdGhpcy5fdGFiSGVhZGVyUmVjdH1nZXRDb250ZW50UmVjdCgpe3JldHVybiB0aGlzLl9jb250ZW50UmVjdH1pc0VuYWJsZURyb3AoKXtyZXR1cm4gdGhpcy5fZ2V0QXR0cigiZW5hYmxlRHJvcCIpfWlzQXV0b1NlbGVjdFRhYihlKXtyZXR1cm4obnVsbD09ZSYmKGU9LTEhPT10aGlzLmdldFNlbGVjdGVkKCkpLGUpP3RoaXMuX2dldEF0dHIoImF1dG9TZWxlY3RUYWJXaGVuT3BlbiIpOnRoaXMuX2dldEF0dHIoImF1dG9TZWxlY3RUYWJXaGVuQ2xvc2VkIil9Z2V0Q2xhc3NOYW1lKCl7cmV0dXJuIHRoaXMuX2dldEF0dHIoImNsYXNzTmFtZSIpfWNhbGNCb3JkZXJCYXJTaXplKGUpe2xldCB0PXRoaXMuX2dldEF0dHIoImJhclNpemUiKTswIT09dD90aGlzLl9jYWxjdWxhdGVkQm9yZGVyQmFyU2l6ZT10OnRoaXMuX2NhbGN1bGF0ZWRCb3JkZXJCYXJTaXplPWUuYm9yZGVyQmFyU2l6ZX1nZXRCb3JkZXJCYXJTaXplKCl7cmV0dXJuIHRoaXMuX2NhbGN1bGF0ZWRCb3JkZXJCYXJTaXplfWdldFNpemUoKXtsZXQgZT10aGlzLl9nZXRBdHRyKCJzaXplIiksdD10aGlzLmdldFNlbGVjdGVkKCk7aWYoLTE9PT10KXJldHVybiBlO3tsZXQgcj10aGlzLl9jaGlsZHJlblt0XSxuPXRoaXMuX2xvY2F0aW9uLl9vcmllbnRhdGlvbj09PWEuT3JpZW50YXRpb24uSE9SWj9yLl9nZXRBdHRyKCJib3JkZXJXaWR0aCIpOnIuX2dldEF0dHIoImJvcmRlckhlaWdodCIpO3JldHVybiAtMT09PW4/ZTpufX1nZXRNaW5TaXplKCl7cmV0dXJuIHRoaXMuX2dldEF0dHIoIm1pblNpemUiKX1nZXRTZWxlY3RlZCgpe3JldHVybiB0aGlzLl9hdHRyaWJ1dGVzLnNlbGVjdGVkfWdldFNlbGVjdGVkTm9kZSgpe2lmKC0xIT09dGhpcy5nZXRTZWxlY3RlZCgpKXJldHVybiB0aGlzLl9jaGlsZHJlblt0aGlzLmdldFNlbGVjdGVkKCldfWdldE9yaWVudGF0aW9uKCl7cmV0dXJuIHRoaXMuX2xvY2F0aW9uLmdldE9yaWVudGF0aW9uKCl9Z2V0Q29uZmlnKCl7cmV0dXJuIHRoaXMuX2F0dHJpYnV0ZXMuY29uZmlnfWlzTWF4aW1pemVkKCl7cmV0dXJuITF9aXNTaG93aW5nKCl7cmV0dXJuISF0aGlzLl9hdHRyaWJ1dGVzLnNob3cmJighKHRoaXMuX21vZGVsLl9nZXRTaG93SGlkZGVuQm9yZGVyKCkhPT10aGlzLl9sb2NhdGlvbiYmdGhpcy5pc0F1dG9IaWRlKCkpfHwwIT09dGhpcy5fY2hpbGRyZW4ubGVuZ3RoKX1pc0F1dG9IaWRlKCl7cmV0dXJuIHRoaXMuX2dldEF0dHIoImVuYWJsZUF1dG9IaWRlIil9X3NldFNlbGVjdGVkKGUpe3RoaXMuX2F0dHJpYnV0ZXMuc2VsZWN0ZWQ9ZX1fc2V0U2l6ZShlKXtsZXQgdD10aGlzLmdldFNlbGVjdGVkKCk7aWYoLTE9PT10KXRoaXMuX2F0dHJpYnV0ZXMuc2l6ZT1lO2Vsc2V7bGV0IHI9dGhpcy5fY2hpbGRyZW5bdF07LTE9PT0odGhpcy5fbG9jYXRpb24uX29yaWVudGF0aW9uPT09YS5PcmllbnRhdGlvbi5IT1JaP3IuX2dldEF0dHIoImJvcmRlcldpZHRoIik6ci5fZ2V0QXR0cigiYm9yZGVySGVpZ2h0IikpP3RoaXMuX2F0dHJpYnV0ZXMuc2l6ZT1lOnRoaXMuX2xvY2F0aW9uLl9vcmllbnRhdGlvbj09PWEuT3JpZW50YXRpb24uSE9SWj9yLl9zZXRCb3JkZXJXaWR0aChlKTpyLl9zZXRCb3JkZXJIZWlnaHQoZSl9fV91cGRhdGVBdHRycyhlKXtmLl9hdHRyaWJ1dGVEZWZpbml0aW9ucy51cGRhdGUoZSx0aGlzLl9hdHRyaWJ1dGVzKX1fZ2V0RHJhd0NoaWxkcmVuKCl7cmV0dXJuIHRoaXMuX2RyYXdDaGlsZHJlbn1fc2V0QWRqdXN0ZWRTaXplKGUpe3RoaXMuX2FkanVzdGVkU2l6ZT1lfV9nZXRBZGp1c3RlZFNpemUoKXtyZXR1cm4gdGhpcy5fYWRqdXN0ZWRTaXplfV9sYXlvdXRCb3JkZXJPdXRlcihlLHQpe3RoaXMuY2FsY0JvcmRlckJhclNpemUodCk7bGV0IHI9dGhpcy5fbG9jYXRpb24uc3BsaXQoZSx0aGlzLmdldEJvcmRlckJhclNpemUoKSk7cmV0dXJuIHRoaXMuX3RhYkhlYWRlclJlY3Q9ci5zdGFydCxyLmVuZH1fbGF5b3V0Qm9yZGVySW5uZXIoZSx0KXt0aGlzLl9kcmF3Q2hpbGRyZW49W107bGV0IHI9dGhpcy5fbG9jYXRpb24sbj1yLnNwbGl0KGUsdGhpcy5fYWRqdXN0ZWRTaXplK3RoaXMuX21vZGVsLmdldFNwbGl0dGVyU2l6ZSgpKSxpPXIucmVmbGVjdCgpLnNwbGl0KG4uc3RhcnQsdGhpcy5fbW9kZWwuZ2V0U3BsaXR0ZXJTaXplKCkpO3RoaXMuX2NvbnRlbnRSZWN0PWkuZW5kO2ZvcihsZXQgZT0wO2U8dGhpcy5fY2hpbGRyZW4ubGVuZ3RoO2UrKyl7bGV0IHI9dGhpcy5fY2hpbGRyZW5bZV07ci5fbGF5b3V0KHRoaXMuX2NvbnRlbnRSZWN0LHQpLHIuX3NldFZpc2libGUoZT09PXRoaXMuZ2V0U2VsZWN0ZWQoKSksdGhpcy5fZHJhd0NoaWxkcmVuLnB1c2gocil9aWYoLTE9PT10aGlzLmdldFNlbGVjdGVkKCkpcmV0dXJuIGU7e2xldCBlPW5ldyBjLlNwbGl0dGVyTm9kZSh0aGlzLl9tb2RlbCk7cmV0dXJuIGUuX3NldFBhcmVudCh0aGlzKSxlLl9zZXRSZWN0KGkuc3RhcnQpLHRoaXMuX2RyYXdDaGlsZHJlbi5wdXNoKGUpLG4uZW5kfX1fcmVtb3ZlKGUpe2xldCB0PXRoaXMuX3JlbW92ZUNoaWxkKGUpOy0xIT09dGhpcy5nZXRTZWxlY3RlZCgpJiYoMCxwLmFkanVzdFNlbGVjdGVkSW5kZXgpKHRoaXMsdCl9Y2FuRHJvcChlLHQscil7bGV0IG47aWYoZS5nZXRUeXBlKCkhPT1oLlRhYk5vZGUuVFlQRSlyZXR1cm47bGV0IGk9cy5Eb2NrTG9jYXRpb24uQ0VOVEVSO2lmKHRoaXMuX3RhYkhlYWRlclJlY3QuY29udGFpbnModCxyKSl7aWYodGhpcy5fbG9jYXRpb24uX29yaWVudGF0aW9uPT09YS5PcmllbnRhdGlvbi5WRVJUKXtpZih0aGlzLl9jaGlsZHJlbi5sZW5ndGg+MCl7bGV0IGU9dGhpcy5fY2hpbGRyZW5bMF0scj1lLmdldFRhYlJlY3QoKSxzPXIueSxhPXIuaGVpZ2h0LGQ9dGhpcy5fdGFiSGVhZGVyUmVjdC54LGM9MDtmb3IobGV0IGg9MDtoPHRoaXMuX2NoaWxkcmVuLmxlbmd0aDtoKyspe2lmKGM9KHI9KGU9dGhpcy5fY2hpbGRyZW5baF0pLmdldFRhYlJlY3QoKSkueCtyLndpZHRoLzIsdD49ZCYmdDxjKXtsZXQgZT1uZXcgbC5SZWN0KHIueC0yLHMsMyxhKTtuPW5ldyBvLkRyb3BJbmZvKHRoaXMsZSxpLGgsdS5DTEFTU0VTLkZMRVhMQVlPVVRfX09VVExJTkVfUkVDVCk7YnJlYWt9ZD1jfWlmKG51bGw9PW4pe2xldCBlPW5ldyBsLlJlY3Qoci5nZXRSaWdodCgpLTIscywzLGEpO249bmV3IG8uRHJvcEluZm8odGhpcyxlLGksdGhpcy5fY2hpbGRyZW4ubGVuZ3RoLHUuQ0xBU1NFUy5GTEVYTEFZT1VUX19PVVRMSU5FX1JFQ1QpfX1lbHNle2xldCBlPW5ldyBsLlJlY3QodGhpcy5fdGFiSGVhZGVyUmVjdC54KzEsdGhpcy5fdGFiSGVhZGVyUmVjdC55KzIsMywxOCk7bj1uZXcgby5Ecm9wSW5mbyh0aGlzLGUsaSwwLHUuQ0xBU1NFUy5GTEVYTEFZT1VUX19PVVRMSU5FX1JFQ1QpfX1lbHNlIGlmKHRoaXMuX2NoaWxkcmVuLmxlbmd0aD4wKXtsZXQgZT10aGlzLl9jaGlsZHJlblswXSx0PWUuZ2V0VGFiUmVjdCgpLHM9dC54LGE9dC53aWR0aCxkPXRoaXMuX3RhYkhlYWRlclJlY3QueSxjPTA7Zm9yKGxldCBoPTA7aDx0aGlzLl9jaGlsZHJlbi5sZW5ndGg7aCsrKXtpZihjPSh0PShlPXRoaXMuX2NoaWxkcmVuW2hdKS5nZXRUYWJSZWN0KCkpLnkrdC5oZWlnaHQvMixyPj1kJiZyPGMpe2xldCBlPW5ldyBsLlJlY3Qocyx0LnktMixhLDMpO249bmV3IG8uRHJvcEluZm8odGhpcyxlLGksaCx1LkNMQVNTRVMuRkxFWExBWU9VVF9fT1VUTElORV9SRUNUKTticmVha31kPWN9aWYobnVsbD09bil7bGV0IGU9bmV3IGwuUmVjdChzLHQuZ2V0Qm90dG9tKCktMixhLDMpO249bmV3IG8uRHJvcEluZm8odGhpcyxlLGksdGhpcy5fY2hpbGRyZW4ubGVuZ3RoLHUuQ0xBU1NFUy5GTEVYTEFZT1VUX19PVVRMSU5FX1JFQ1QpfX1lbHNle2xldCBlPW5ldyBsLlJlY3QodGhpcy5fdGFiSGVhZGVyUmVjdC54KzIsdGhpcy5fdGFiSGVhZGVyUmVjdC55KzEsMTgsMyk7bj1uZXcgby5Ecm9wSW5mbyh0aGlzLGUsaSwwLHUuQ0xBU1NFUy5GTEVYTEFZT1VUX19PVVRMSU5FX1JFQ1QpfWlmKCFlLl9jYW5Eb2NrSW50byhlLG4pKXJldHVybn1lbHNlIGlmKC0xIT09dGhpcy5nZXRTZWxlY3RlZCgpJiZ0aGlzLl9jb250ZW50UmVjdC5jb250YWlucyh0LHIpKXtsZXQgdD10aGlzLl9jb250ZW50UmVjdDtpZihuPW5ldyBvLkRyb3BJbmZvKHRoaXMsdC"
     ""
     ""
     ""
     "KDUwKSxyLl9zZXRXZWlnaHQoNTApLGUuX2FkZENoaWxkKHIsdC5faW5kZXhQbHVzKSxuLl9yZW1vdmVDaGlsZCh0aGlzKSxuLl9hZGRDaGlsZChlLHMpfXRoaXMuX21vZGVsLl9zZXRBY3RpdmVUYWJzZXQocil9dGhpcy5fbW9kZWwuX3RpZHkoKX10b0pzb24oKXtsZXQgZT17fTtyZXR1cm4gbS5fYXR0cmlidXRlRGVmaW5pdGlvbnMudG9Kc29uKGUsdGhpcy5fYXR0cmlidXRlcyksZS5jaGlsZHJlbj10aGlzLl9jaGlsZHJlbi5tYXAoZT0+ZS50b0pzb24oKSksdGhpcy5pc0FjdGl2ZSgpJiYoZS5hY3RpdmU9ITApLHRoaXMuaXNNYXhpbWl6ZWQoKSYmKGUubWF4aW1pemVkPSEwKSxlfV91cGRhdGVBdHRycyhlKXttLl9hdHRyaWJ1dGVEZWZpbml0aW9ucy51cGRhdGUoZSx0aGlzLl9hdHRyaWJ1dGVzKX1fZ2V0QXR0cmlidXRlRGVmaW5pdGlvbnMoKXtyZXR1cm4gbS5fYXR0cmlidXRlRGVmaW5pdGlvbnN9X2dldFByZWZTaXplKGUpe2xldCB0PXRoaXMuZ2V0V2lkdGgoKTtyZXR1cm4gZT09PWEuT3JpZW50YXRpb24uVkVSVCYmKHQ9dGhpcy5nZXRIZWlnaHQoKSksdH1zdGF0aWMgZ2V0QXR0cmlidXRlRGVmaW5pdGlvbnMoKXtyZXR1cm4gbS5fYXR0cmlidXRlRGVmaW5pdGlvbnN9fXQuVGFiU2V0Tm9kZT1tLG0uVFlQRT0idGFic2V0IixtLl9hdHRyaWJ1dGVEZWZpbml0aW9ucz1tLl9jcmVhdGVBdHRyaWJ1dGVEZWZpbml0aW9ucygpfSwxMjkzNDooZSx0LHIpPT57InVzZSBzdHJpY3QiO3ZhciBuPXIoNjA5NjcpLGk9cigyMzIyMikscz0iZnVuY3Rpb24iPT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpmdW5jdGlvbihlLHQpe3JldHVybiBlPT09dCYmKDAhPT1lfHwxL2U9PTEvdCl8fGUhPWUmJnQhPXR9LG89aS51c2VTeW5jRXh0ZXJuYWxTdG9yZSxhPW4udXNlUmVmLGw9bi51c2VFZmZlY3QsdT1uLnVzZU1lbW8sZD1uLnVzZURlYnVnVmFsdWU7dC51c2VTeW5jRXh0ZXJuYWxTdG9yZVdpdGhTZWxlY3Rvcj1mdW5jdGlvbihlLHQscixuLGkpe3ZhciBjPWEobnVsbCk7aWYobnVsbD09PWMuY3VycmVudCl7dmFyIGg9e2hhc1ZhbHVlOiExLHZhbHVlOm51bGx9O2MuY3VycmVudD1ofWVsc2UgaD1jLmN1cnJlbnQ7dmFyIHA9byhlLChjPXUoZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe2lmKCFsKXtpZihsPSEwLG89ZSxlPW4oZSksdm9pZCAwIT09aSYmaC5oYXNWYWx1ZSl7dmFyIHQ9aC52YWx1ZTtpZihpKHQsZSkpcmV0dXJuIGE9dH1yZXR1cm4gYT1lfWlmKHQ9YSxzKG8sZSkpcmV0dXJuIHQ7dmFyIHI9bihlKTtyZXR1cm4gdm9pZCAwIT09aSYmaSh0LHIpPyhvPWUsdCk6KG89ZSxhPXIpfXZhciBvLGEsbD0hMSx1PXZvaWQgMD09PXI/bnVsbDpyO3JldHVybltmdW5jdGlvbigpe3JldHVybiBlKHQoKSl9LG51bGw9PT11P3ZvaWQgMDpmdW5jdGlvbigpe3JldHVybiBlKHUoKSl9XX0sW3QscixuLGldKSlbMF0sY1sxXSk7cmV0dXJuIGwoZnVuY3Rpb24oKXtoLmhhc1ZhbHVlPSEwLGgudmFsdWU9cH0sW3BdKSxkKHApLHB9fSwxNDc3MjooZSx0LHIpPT57InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSx0LlJlY3Q9dm9pZCAwO2xldCBuPXIoNDU5NzYpO2NsYXNzIGl7c3RhdGljIGVtcHR5KCl7cmV0dXJuIG5ldyBpKDAsMCwwLDApfWNvbnN0cnVjdG9yKGUsdCxyLG4pe3RoaXMueD1lLHRoaXMueT10LHRoaXMud2lkdGg9cix0aGlzLmhlaWdodD1ufXN0YXRpYyBmcm9tRWxlbWVudChlKXtsZXR7eDp0LHk6cix3aWR0aDpuLGhlaWdodDpzfT1lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO3JldHVybiBuZXcgaSh0LHIsbixzKX1jbG9uZSgpe3JldHVybiBuZXcgaSh0aGlzLngsdGhpcy55LHRoaXMud2lkdGgsdGhpcy5oZWlnaHQpfWVxdWFscyhlKXtyZXR1cm4gdGhpcy54PT09KG51bGw9PWU/dm9pZCAwOmUueCkmJnRoaXMueT09PShudWxsPT1lP3ZvaWQgMDplLnkpJiZ0aGlzLndpZHRoPT09KG51bGw9PWU/dm9pZCAwOmUud2lkdGgpJiZ0aGlzLmhlaWdodD09PShudWxsPT1lP3ZvaWQgMDplLmhlaWdodCl9Z2V0Qm90dG9tKCl7cmV0dXJuIHRoaXMueSt0aGlzLmhlaWdodH1nZXRSaWdodCgpe3JldHVybiB0aGlzLngrdGhpcy53aWR0aH1nZXRDZW50ZXIoKXtyZXR1cm57eDp0aGlzLngrdGhpcy53aWR0aC8yLHk6dGhpcy55K3RoaXMuaGVpZ2h0LzJ9fXBvc2l0aW9uRWxlbWVudChlLHQpe3RoaXMuc3R5bGVXaXRoUG9zaXRpb24oZS5zdHlsZSx0KX1zdHlsZVdpdGhQb3NpdGlvbihlLHQ9ImFic29sdXRlIil7cmV0dXJuIGUubGVmdD10aGlzLngrInB4IixlLnRvcD10aGlzLnkrInB4IixlLndpZHRoPU1hdGgubWF4KDAsdGhpcy53aWR0aCkrInB4IixlLmhlaWdodD1NYXRoLm1heCgwLHRoaXMuaGVpZ2h0KSsicHgiLGUucG9zaXRpb249dCxlfWNvbnRhaW5zKGUsdCl7cmV0dXJuISEodGhpcy54PD1lJiZlPD10aGlzLmdldFJpZ2h0KCkmJnRoaXMueTw9dCYmdDw9dGhpcy5nZXRCb3R0b20oKSl9cmVtb3ZlSW5zZXRzKGUpe3JldHVybiBuZXcgaSh0aGlzLngrZS5sZWZ0LHRoaXMueStlLnRvcCxNYXRoLm1heCgwLHRoaXMud2lkdGgtZS5sZWZ0LWUucmlnaHQpLE1hdGgubWF4KDAsdGhpcy5oZWlnaHQtZS50b3AtZS5ib3R0b20pKX1jZW50ZXJJblJlY3QoZSl7dGhpcy54PShlLndpZHRoLXRoaXMud2lkdGgpLzIsdGhpcy55PShlLmhlaWdodC10aGlzLmhlaWdodCkvMn1fZ2V0U2l6ZShlKXtsZXQgdD10aGlzLndpZHRoO3JldHVybiBlPT09bi5PcmllbnRhdGlvbi5WRVJUJiYodD10aGlzLmhlaWdodCksdH10b1N0cmluZygpe3JldHVybiIoUmVjdDogeD0iK3RoaXMueCsiLCB5PSIrdGhpcy55KyIsIHdpZHRoPSIrdGhpcy53aWR0aCsiLCBoZWlnaHQ9Iit0aGlzLmhlaWdodCsiKSJ9fXQuUmVjdD1pfSwxNDk1MTooZSx0LHIpPT57InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSx0LlRhYj12b2lkIDA7bGV0IG49cig2MDk2NyksaT1yKDYwOTY3KSxzPXIoMjE0ODMpLG89cigxMjc5NyksYT1yKDM5ODIzKSxsPXIoOTk3OTIpLHU9cigyMzkyKSxkPXIoOTEyMiksYz1yKDUyMTUzKTt0LlRhYj1lPT57bGV0IHQ7bGV0e2xheW91dDpyLHNlbGVjdGVkOmgsbm9kZTpwLGZhY3Rvcnk6ZixwYXRoOm19PWUsW2cseV09bi51c2VTdGF0ZSghZS5ub2RlLmlzRW5hYmxlUmVuZGVyT25EZW1hbmQoKXx8ZS5zZWxlY3RlZCk7bi51c2VMYXlvdXRFZmZlY3QoKCk9PnshZyYmaCYmeSghMCl9KTtsZXQgYj0oKT0+e2xldCBlPXAuZ2V0UGFyZW50KCk7ZS5nZXRUeXBlKCkhPT1vLlRhYlNldE5vZGUuVFlQRXx8ZS5pc0FjdGl2ZSgpfHxyLmRvQWN0aW9uKHMuQWN0aW9ucy5zZXRBY3RpdmVUYWJzZXQoZS5nZXRJZCgpKSl9LF89ci5nZXRDbGFzc05hbWUsdj1wLmdldE1vZGVsKCkuaXNVc2VWaXNpYmlsaXR5KCksdz1wLmdldFBhcmVudCgpLFQ9cC5fc3R5bGVXaXRoUG9zaXRpb24oKTtofHwoMCxjLmhpZGVFbGVtZW50KShULHYpLHcgaW5zdGFuY2VvZiBvLlRhYlNldE5vZGUmJnZvaWQgMCE9PXAuZ2V0TW9kZWwoKS5nZXRNYXhpbWl6ZWRUYWJzZXQoKSYmIXcuaXNNYXhpbWl6ZWQoKSYmKDAsYy5oaWRlRWxlbWVudCkoVCx2KSxnJiYodD1mKHApKTtsZXQgUz1fKGEuQ0xBU1NFUy5GTEVYTEFZT1VUX19UQUIpO3JldHVybiB3IGluc3RhbmNlb2YgZC5Cb3JkZXJOb2RlJiYoUys9IiAiK18oYS5DTEFTU0VTLkZMRVhMQVlPVVRfX1RBQl9CT1JERVIpLFMrPSIgIitfKGEuQ0xBU1NFUy5GTEVYTEFZT1VUX19UQUJfQk9SREVSXyt3LmdldExvY2F0aW9uKCkuZ2V0TmFtZSgpKSksdm9pZCAwIT09cC5nZXRDb250ZW50Q2xhc3NOYW1lKCkmJihTKz0iICIrcC5nZXRDb250ZW50Q2xhc3NOYW1lKCkpLG4uY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOlMsImRhdGEtbGF5b3V0LXBhdGgiOm0sb25Nb3VzZURvd246YixvblRvdWNoU3RhcnQ6YixzdHlsZTpUfSxuLmNyZWF0ZUVsZW1lbnQobC5FcnJvckJvdW5kYXJ5LHttZXNzYWdlOmUubGF5b3V0LmkxOG5OYW1lKHUuSTE4bkxhYmVsLkVycm9yX3JlbmRlcmluZ19jb21wb25lbnQpfSxuLmNyZWF0ZUVsZW1lbnQoaS5GcmFnbWVudCxudWxsLHQpKSl9fSwxNTI1OTooZSx0LHIpPT57InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSx0LkJvcmRlclRhYlNldD12b2lkIDA7bGV0IG49cig2MDk2NyksaT1yKDI4MDc0KSxzPXIoMTE1MTgpLG89cig4MzQzMiksYT1yKDIxNDgzKSxsPXIoMjM5MiksdT1yKDc0MjgyKSxkPXIoNDU5NzYpLGM9cigzOTgyMyksaD1yKDUyMTUzKTt0LkJvcmRlclRhYlNldD1lPT57bGV0e2JvcmRlcjp0LGxheW91dDpyLGljb25GYWN0b3J5OnAsdGl0bGVGYWN0b3J5OmYsaWNvbnM6bSxwYXRoOmd9PWUseT1uLnVzZVJlZihudWxsKSxiPW4udXNlUmVmKG51bGwpLF89bi51c2VSZWYobnVsbCkse3NlbGZSZWY6dixwb3NpdGlvbjp3LHVzZXJDb250cm9sbGVkTGVmdDpULGhpZGRlblRhYnM6Uyxvbk1vdXNlV2hlZWw6RSx0YWJzVHJ1bmNhdGVkOnh9PSgwLHUudXNlVGFiT3ZlcmZsb3cpKHQsZC5PcmllbnRhdGlvbi5mbGlwKHQuZ2V0T3JpZW50YXRpb24oKSkseSxfKSxBPWU9PnsoMCxoLmlzQXV4TW91c2VFdmVudCkoZSkmJnIuYXV4TW91c2VDbGljayh0LGUpfSxJPWU9PntlLnN0b3BQcm9wYWdhdGlvbigpfSxPPWU9PntyLmRvQWN0aW9uKGEuQWN0aW9ucy5zZWxlY3RUYWIoZS5ub2RlLmdldElkKCkpKSxULmN1cnJlbnQ9ITF9LFI9ci5nZXRDbGFzc05hbWUsTj10LmdldFRhYkhlYWRlclJlY3QoKS5zdHlsZVdpdGhQb3NpdGlvbih7fSksQz1bXSxMPWU9PntsZXQgaT10LmdldFNlbGVjdGVkKCk9PT1lLG89dC5nZXRDaGlsZHJlbigpW2VdO0MucHVzaChuLmNyZWF0ZUVsZW1lbnQocy5Cb3JkZXJCdXR0b24se2xheW91dDpyLGJvcmRlcjp0LmdldExvY2F0aW9uKCkuZ2V0TmFtZSgpLG5vZGU6byxwYXRoOmcrIi90YiIrZSxrZXk6by5nZXRJZCgpLHNlbGVjdGVkOmksaWNvbkZhY3Rvcnk6cCx0aXRsZUZhY3Rvcnk6ZixpY29uczptfSkpLGU8dC5nZXRDaGlsZHJlbigpLmxlbmd0aC0xJiZDLnB1c2gobi5jcmVhdGVFbGVtZW50KCJkaXYiLHtrZXk6ImRpdmlkZXIiK2UsY2xhc3NOYW1lOlIoYy5DTEFTU0VTLkZMRVhMQVlPVVRfX0JPUkRFUl9UQUJfRElWSURFUil9KSl9O2ZvcihsZXQgZT0wO2U8dC5nZXRDaGlsZHJlbigpLmxlbmd0aDtlKyspTChlKTtsZXQgRD1SKGMuQ0xBU1NFUy5GTEVYTEFZT1VUX19CT1JERVIpKyIgIitSKGMuQ0xBU1NFUy5GTEVYTEFZT1VUX19CT1JERVJfK3QuZ2V0TG9jYXRpb24oKS5nZXROYW1lKCkpO3ZvaWQgMCE9PXQuZ2V0Q2xhc3NOYW1lKCkmJihEKz0iICIrdC5nZXRDbGFzc05hbWUoKSk7bGV0IEI9W10saz1bXSxNPXtoZWFkZXJDb250ZW50OnZvaWQgMCxidXR0b25zOkIsc3RpY2t5QnV0dG9uczprLGhlYWRlckJ1dHRvbnM6W10sb3ZlcmZsb3dQb3NpdGlvbjp2b2lkIDB9O2lmKHIuY3VzdG9taXplVGFiU2V0KHQsTSksQj1NLmJ1dHRvbnMsdm9pZCAwPT09TS5vdmVyZmxvd1Bvc2l0aW9uJiYoTS5vdmVyZmxvd1Bvc2l0aW9uPWsubGVuZ3RoKSxrLmxlbmd0aD4wJiYoeD9CPVsuLi5rLC4uLkJdOkMucHVzaChuLmNyZWF0ZUVsZW1lbnQoImRpdiIse3JlZjpfLGtleToic3RpY2t5X2J1dHRvbnNfY29udGFpbmVyIixvbk1vdXNlRG93bjpJLG9uVG91Y2hTdGFydDpJLG9uRHJhZ1N0YXJ0OmU9PntlLnByZXZlbnREZWZhdWx0KCl9LGNsYXNzTmFtZTpSKGMuQ0xBU1NFUy5GTEVYTEFZT1VUX19UQUJfVE9PTEJBUl9TVElDS1lfQlVUVE9OU19DT05UQUlORVIpfSxrKSkpLFMubGVuZ3RoPjApe2xldCBlO2xldCBpPXIuaTE4bk5hbWUobC5JMThuTGFiZWwuT3ZlcmZsb3dfTWVudV9Ub29sdGlwKTtlPSJmdW5jdGlvbiI9PXR5cGVvZiBtLm1vcmU/bS5tb3JlKHQsUyk6bi5jcmVhdGVFbGVtZW50KG4uRnJhZ21lbnQsbnVsbCxtLm1vcmUsbi5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6UihjLkNMQVNTRVMuRkxFWExBWU9VVF9fVEFCX0JVVFRPTl9PVkVSRkxPV19DT1VOVCl9LFMubGVuZ3RoKSksQi5zcGxpY2UoTWF0aC5taW4oTS5vdmVyZmxvd1Bvc2l0aW9uLEIubGVuZ3RoKSwwLG4uY3JlYXRlRWxlbWVudCgiYnV0dG9uIix7a2V5OiJvdmVyZmxvd2J1dHRvbi"
     "IscmVmOmIsY2xhc3NOYW1lOlIoYy5DTEFTU0VTLkZMRVhMQVlPVVRfX0JPUkRFUl9UT09MQkFSX0JVVFRPTikrIiAiK1IoYy5DTEFTU0VTLkZMRVhMQVlPVVRfX0JPUkRFUl9UT09MQkFSX0JVVFRPTl9PVkVSRkxPVykrIiAiK1IoYy5DTEFTU0VTLkZMRVhMQVlPVVRfX0JPUkRFUl9UT09MQkFSX0JVVFRPTl9PVkVSRkxPV18rdC5nZXRMb2NhdGlvbigpLmdldE5hbWUoKSksdGl0bGU6aSxvbkNsaWNrOmU9PntsZXQgbj1yLmdldFNob3dPdmVyZmxvd01lbnUoKTtpZih2b2lkIDAhPT1uKW4odCxlLFMsTyk7ZWxzZXtsZXQgZT1iLmN1cnJlbnQ7KDAsby5zaG93UG9wdXApKGUsUyxPLHIscCxmKX1lLnN0b3BQcm9wYWdhdGlvbigpfSxvbk1vdXNlRG93bjpJLG9uVG91Y2hTdGFydDpJfSxlKSl9bGV0IFU9dC5nZXRTZWxlY3RlZCgpO2lmKC0xIT09VSl7bGV0IGU9dC5nZXRDaGlsZHJlbigpW1VdO2lmKHZvaWQgMCE9PWUmJnIuaXNTdXBwb3J0c1BvcG91dCgpJiZlLmlzRW5hYmxlRmxvYXQoKSYmIWUuaXNGbG9hdGluZygpKXtsZXQgaT1yLmkxOG5OYW1lKGwuSTE4bkxhYmVsLkZsb2F0X1RhYik7Qi5wdXNoKG4uY3JlYXRlRWxlbWVudCgiYnV0dG9uIix7a2V5OiJmbG9hdCIsdGl0bGU6aSxjbGFzc05hbWU6UihjLkNMQVNTRVMuRkxFWExBWU9VVF9fQk9SREVSX1RPT0xCQVJfQlVUVE9OKSsiICIrUihjLkNMQVNTRVMuRkxFWExBWU9VVF9fQk9SREVSX1RPT0xCQVJfQlVUVE9OX0ZMT0FUKSxvbkNsaWNrOmU9PntsZXQgbj10LmdldENoaWxkcmVuKClbdC5nZXRTZWxlY3RlZCgpXTt2b2lkIDAhPT1uJiZyLmRvQWN0aW9uKGEuQWN0aW9ucy5mbG9hdFRhYihuLmdldElkKCkpKSxlLnN0b3BQcm9wYWdhdGlvbigpfSxvbk1vdXNlRG93bjpJLG9uVG91Y2hTdGFydDpJfSwiZnVuY3Rpb24iPT10eXBlb2YgbS5wb3BvdXQ/bS5wb3BvdXQoZSk6bS5wb3BvdXQpKX19bGV0IEY9bi5jcmVhdGVFbGVtZW50KCJkaXYiLHtrZXk6InRvb2xiYXIiLHJlZjp5LGNsYXNzTmFtZTpSKGMuQ0xBU1NFUy5GTEVYTEFZT1VUX19CT1JERVJfVE9PTEJBUikrIiAiK1IoYy5DTEFTU0VTLkZMRVhMQVlPVVRfX0JPUkRFUl9UT09MQkFSXyt0LmdldExvY2F0aW9uKCkuZ2V0TmFtZSgpKX0sQik7Tj1yLnN0eWxlRm9udChOKTtsZXQgUD17fSxqPXQuZ2V0Qm9yZGVyQmFyU2l6ZSgpLTE7cmV0dXJuIFA9dC5nZXRMb2NhdGlvbigpPT09aS5Eb2NrTG9jYXRpb24uTEVGVD97cmlnaHQ6aixoZWlnaHQ6aix0b3A6d306dC5nZXRMb2NhdGlvbigpPT09aS5Eb2NrTG9jYXRpb24uUklHSFQ/e2xlZnQ6aixoZWlnaHQ6aix0b3A6d306e2hlaWdodDpqLGxlZnQ6d30sbi5jcmVhdGVFbGVtZW50KCJkaXYiLHtyZWY6dixkaXI6Imx0ciIsc3R5bGU6TixjbGFzc05hbWU6RCwiZGF0YS1sYXlvdXQtcGF0aCI6ZyxvbkNsaWNrOkEsb25BdXhDbGljazpBLG9uQ29udGV4dE1lbnU6ZT0+e3Iuc2hvd0NvbnRleHRNZW51KHQsZSl9LG9uV2hlZWw6RX0sbi5jcmVhdGVFbGVtZW50KCJkaXYiLHtzdHlsZTp7aGVpZ2h0Omp9LGNsYXNzTmFtZTpSKGMuQ0xBU1NFUy5GTEVYTEFZT1VUX19CT1JERVJfSU5ORVIpKyIgIitSKGMuQ0xBU1NFUy5GTEVYTEFZT1VUX19CT1JERVJfSU5ORVJfK3QuZ2V0TG9jYXRpb24oKS5nZXROYW1lKCkpfSxuLmNyZWF0ZUVsZW1lbnQoImRpdiIse3N0eWxlOlAsY2xhc3NOYW1lOlIoYy5DTEFTU0VTLkZMRVhMQVlPVVRfX0JPUkRFUl9JTk5FUl9UQUJfQ09OVEFJTkVSKSsiICIrUihjLkNMQVNTRVMuRkxFWExBWU9VVF9fQk9SREVSX0lOTkVSX1RBQl9DT05UQUlORVJfK3QuZ2V0TG9jYXRpb24oKS5nZXROYW1lKCkpfSxDKSksRil9fSwxNTczMjooZSx0LHIpPT57InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSx0LlJvd05vZGU9dm9pZCAwO2xldCBuPXIoNDYyMzQpLGk9cigzMDM2KSxzPXIoMjgwNzQpLG89cig3MTEzOSksYT1yKDQ1OTc2KSxsPXIoMTQ3NzIpLHU9cigzOTgyMyksZD1yKDkxMjIpLGM9cig0Mjg4KSxoPXIoNjk4MTUpLHA9cigxMjc5Nyk7Y2xhc3MgZiBleHRlbmRzIGMuTm9kZXtzdGF0aWMgX2Zyb21Kc29uKGUsdCl7bGV0IHI9bmV3IGYodCxlKTtpZihudWxsIT1lLmNoaWxkcmVuKWZvcihsZXQgbiBvZiBlLmNoaWxkcmVuKWlmKG4udHlwZT09PXAuVGFiU2V0Tm9kZS5UWVBFKXtsZXQgZT1wLlRhYlNldE5vZGUuX2Zyb21Kc29uKG4sdCk7ci5fYWRkQ2hpbGQoZSl9ZWxzZXtsZXQgZT1mLl9mcm9tSnNvbihuLHQpO3IuX2FkZENoaWxkKGUpfXJldHVybiByfXN0YXRpYyBfY3JlYXRlQXR0cmlidXRlRGVmaW5pdGlvbnMoKXtsZXQgZT1uZXcgaS5BdHRyaWJ1dGVEZWZpbml0aW9ucztyZXR1cm4gZS5hZGQoInR5cGUiLGYuVFlQRSwhMCkuc2V0VHlwZShuLkF0dHJpYnV0ZS5TVFJJTkcpLnNldEZpeGVkKCksZS5hZGQoImlkIix2b2lkIDApLnNldFR5cGUobi5BdHRyaWJ1dGUuU1RSSU5HKSxlLmFkZCgid2VpZ2h0IiwxMDApLnNldFR5cGUobi5BdHRyaWJ1dGUuTlVNQkVSKSxlLmFkZCgid2lkdGgiLHZvaWQgMCkuc2V0VHlwZShuLkF0dHJpYnV0ZS5OVU1CRVIpLGUuYWRkKCJoZWlnaHQiLHZvaWQgMCkuc2V0VHlwZShuLkF0dHJpYnV0ZS5OVU1CRVIpLGV9Y29uc3RydWN0b3IoZSx0KXtzdXBlcihlKSx0aGlzLl9kaXJ0eT0hMCx0aGlzLl9kcmF3Q2hpbGRyZW49W10sdGhpcy5fbWluSGVpZ2h0PTAsdGhpcy5fbWluV2lkdGg9MCxmLl9hdHRyaWJ1dGVEZWZpbml0aW9ucy5mcm9tSnNvbih0LHRoaXMuX2F0dHJpYnV0ZXMpLGUuX2FkZE5vZGUodGhpcyl9Z2V0V2VpZ2h0KCl7cmV0dXJuIHRoaXMuX2F0dHJpYnV0ZXMud2VpZ2h0fWdldFdpZHRoKCl7cmV0dXJuIHRoaXMuX2dldEF0dHIoIndpZHRoIil9Z2V0SGVpZ2h0KCl7cmV0dXJuIHRoaXMuX2dldEF0dHIoImhlaWdodCIpfV9zZXRXZWlnaHQoZSl7dGhpcy5fYXR0cmlidXRlcy53ZWlnaHQ9ZX1fbGF5b3V0KGUsdCl7c3VwZXIuX2xheW91dChlLHQpO2xldCByPXRoaXMuX3JlY3QuX2dldFNpemUodGhpcy5nZXRPcmllbnRhdGlvbigpKSxuPTAsaT0wLHM9MCxvPTAsdT10aGlzLl9nZXREcmF3Q2hpbGRyZW4oKTtmb3IobGV0IGUgb2YgdSl7bGV0IHQ9ZS5fZ2V0UHJlZlNpemUodGhpcy5nZXRPcmllbnRhdGlvbigpKTtlLl9pc0ZpeGVkKCk/dm9pZCAwIT09dCYmKGkrPXQpOnZvaWQgMD09PXQ/bis9ZS5nZXRXZWlnaHQoKToocys9dCxvKz1lLmdldFdlaWdodCgpKX1sZXQgZD0hMSxjPXItaS1zO2M8MCYmKGM9ci1pLGQ9ITAsbis9byk7bGV0IHA9MCxmPTA7Zm9yKGxldCBlIG9mIHUpe2xldCB0PWUuX2dldFByZWZTaXplKHRoaXMuZ2V0T3JpZW50YXRpb24oKSk7aWYoZS5faXNGaXhlZCgpKXZvaWQgMCE9PXQmJmUuX3NldFRlbXBTaXplKHQpO2Vsc2UgaWYobnVsbD09dHx8ZCl7aWYoMD09PW4pZS5fc2V0VGVtcFNpemUoMCk7ZWxzZXtsZXQgdD1lLmdldE1pblNpemUodGhpcy5nZXRPcmllbnRhdGlvbigpKSxyPU1hdGguZmxvb3IoYyooZS5nZXRXZWlnaHQoKS9uKSk7ZS5fc2V0VGVtcFNpemUoTWF0aC5tYXgodCxyKSl9Zis9ZS5fZ2V0VGVtcFNpemUoKX1lbHNlIGUuX3NldFRlbXBTaXplKHQpO3ArPWUuX2dldFRlbXBTaXplKCl9aWYoZj4wKXtmb3IoO3A8cjspZm9yKGxldCBlIG9mIHUpaWYoIShlIGluc3RhbmNlb2YgaC5TcGxpdHRlck5vZGUpKXtsZXQgdD1lLl9nZXRQcmVmU2l6ZSh0aGlzLmdldE9yaWVudGF0aW9uKCkpOyFlLl9pc0ZpeGVkKCkmJih2b2lkIDA9PT10fHxkKSYmcDxyJiYoZS5fc2V0VGVtcFNpemUoZS5fZ2V0VGVtcFNpemUoKSsxKSxwKyspfWZvcig7cD5yOyl7bGV0IGU9ITE7Zm9yKGxldCB0IG9mIHUpaWYoISh0IGluc3RhbmNlb2YgaC5TcGxpdHRlck5vZGUpKXtsZXQgbj10LmdldE1pblNpemUodGhpcy5nZXRPcmllbnRhdGlvbigpKTt0Ll9nZXRUZW1wU2l6ZSgpPm4mJnA+ciYmKHQuX3NldFRlbXBTaXplKHQuX2dldFRlbXBTaXplKCktMSkscC0tLGU9ITApfWlmKCFlKWJyZWFrfWZvcig7cD5yOyl7bGV0IGU9ITE7Zm9yKGxldCB0IG9mIHUpISh0IGluc3RhbmNlb2YgaC5TcGxpdHRlck5vZGUpJiZ0Ll9nZXRUZW1wU2l6ZSgpPjAmJnA+ciYmKHQuX3NldFRlbXBTaXplKHQuX2dldFRlbXBTaXplKCktMSkscC0tLGU9ITApO2lmKCFlKWJyZWFrfX1sZXQgbT0wO2ZvcihsZXQgZSBvZiB1KXRoaXMuZ2V0T3JpZW50YXRpb24oKT09PWEuT3JpZW50YXRpb24uSE9SWj9lLl9sYXlvdXQobmV3IGwuUmVjdCh0aGlzLl9yZWN0LngrbSx0aGlzLl9yZWN0LnksZS5fZ2V0VGVtcFNpemUoKSx0aGlzLl9yZWN0LmhlaWdodCksdCk6ZS5fbGF5b3V0KG5ldyBsLlJlY3QodGhpcy5fcmVjdC54LHRoaXMuX3JlY3QueSttLHRoaXMuX3JlY3Qud2lkdGgsZS5fZ2V0VGVtcFNpemUoKSksdCksbSs9ZS5fZ2V0VGVtcFNpemUoKTtyZXR1cm4hMH1fZ2V0U3BsaXR0ZXJCb3VuZHMoZSx0PSExKXtsZXQgcj1bMCwwXSxuPXRoaXMuX2dldERyYXdDaGlsZHJlbigpLGk9bi5pbmRleE9mKGUpLHM9bltpLTFdLG89bltpKzFdO2lmKHRoaXMuZ2V0T3JpZW50YXRpb24oKT09PWEuT3JpZW50YXRpb24uSE9SWil7bGV0IG49dD9zLmdldE1pbldpZHRoKCk6MCxpPXQ/by5nZXRNaW5XaWR0aCgpOjA7clswXT1zLmdldFJlY3QoKS54K24sclsxXT1vLmdldFJlY3QoKS5nZXRSaWdodCgpLWUuZ2V0V2lkdGgoKS1pfWVsc2V7bGV0IG49dD9zLmdldE1pbkhlaWdodCgpOjAsaT10P28uZ2V0TWluSGVpZ2h0KCk6MDtyWzBdPXMuZ2V0UmVjdCgpLnkrbixyWzFdPW8uZ2V0UmVjdCgpLmdldEJvdHRvbSgpLWUuZ2V0SGVpZ2h0KCktaX1yZXR1cm4gcn1fY2FsY3VsYXRlU3BsaXQoZSx0KXtsZXQgcjtsZXQgbj10aGlzLl9nZXREcmF3Q2hpbGRyZW4oKSxpPW4uaW5kZXhPZihlKSxzPXRoaXMuX2dldFNwbGl0dGVyQm91bmRzKGUpLG89bltpLTFdLmdldFdlaWdodCgpK25baSsxXS5nZXRXZWlnaHQoKSxhPU1hdGgubWF4KDAsdC1zWzBdKSxsPU1hdGgubWF4KDAsc1sxXS10KTtyZXR1cm4gYStsPjAmJihyPXtub2RlMUlkOm5baS0xXS5nZXRJZCgpLHdlaWdodDE6YSpvLyhhK2wpLHBpeGVsV2lkdGgxOmEsbm9kZTJJZDpuW2krMV0uZ2V0SWQoKSx3ZWlnaHQyOmwqby8oYStsKSxwaXhlbFdpZHRoMjpsfSkscn1fZ2V0RHJhd0NoaWxkcmVuKCl7aWYodGhpcy5fZGlydHkpe3RoaXMuX2RyYXdDaGlsZHJlbj1bXTtmb3IobGV0IGU9MDtlPHRoaXMuX2NoaWxkcmVuLmxlbmd0aDtlKyspe2xldCB0PXRoaXMuX2NoaWxkcmVuW2VdO2lmKDAhPT1lKXtsZXQgZT1uZXcgaC5TcGxpdHRlck5vZGUodGhpcy5fbW9kZWwpO2UuX3NldFBhcmVudCh0aGlzKSx0aGlzLl9kcmF3Q2hpbGRyZW4ucHVzaChlKX10aGlzLl9kcmF3Q2hpbGRyZW4ucHVzaCh0KX10aGlzLl9kaXJ0eT0hMX1yZXR1cm4gdGhpcy5fZHJhd0NoaWxkcmVufWdldE1pblNpemUoZSl7cmV0dXJuIGU9PT1hLk9yaWVudGF0aW9uLkhPUlo/dGhpcy5nZXRNaW5XaWR0aCgpOnRoaXMuZ2V0TWluSGVpZ2h0KCl9Z2V0TWluV2lkdGgoKXtyZXR1cm4gdGhpcy5fbWluV2lkdGh9Z2V0TWluSGVpZ2h0KCl7cmV0dXJuIHRoaXMuX21pbkhlaWdodH1jYWxjTWluU2l6ZSgpe3RoaXMuX21pbkhlaWdodD0wLHRoaXMuX21pbldpZHRoPTA7bGV0IGU9ITA7Zm9yKGxldCB0IG9mIHRoaXMuX2NoaWxkcmVuKXQgaW5zdGFuY2VvZiBmJiZ0LmNhbGNNaW5TaXplKCksdGhpcy5nZXRPcmllbnRhdGlvbigpPT09YS5PcmllbnRhdGlvbi5WRVJUPyh0aGlzLl9taW5IZWlnaHQrPXQuZ2V0TWluSGVpZ2h0KCksZXx8KHRoaXMuX21pbkhlaWdodCs9dGhpcy5fbW9kZWwuZ2V0U3BsaXR0ZXJTaXplKCkpLHRoaXMuX21pbldpZHRoPU1hdGgubWF4KHRoaXMuX21pbldpZHRoLHQuZ2V0TWluV2lkdGgoKSkpOih0aGlzLl9taW5XaWR0aCs9dC5nZXRNaW5XaWR0aCgpLGV8fCh0aGlzLl9taW5XaWR0aCs9dGhpcy5fbW9kZWwuZ2V0U3BsaXR0ZXJTaXplKCkpLHRoaXMuX21pbkhlaWdodD1NYXRoLm1heCh0aGlzLl9taW5IZWlnaHQsdC5nZXRNaW5IZWlnaHQoKSkpLGU9ITF9X3RpZHkoKXtsZXQgZT0wO2Zvcig7ZTx0aGlzLl9jaGlsZHJlbi5sZW5ndGg7KXtsZXQgdD10aGlzLl9jaGlsZHJlbltlXTtpZih0IGluc3RhbmNlb2YgZil7dC5fdGlkeSgpO2xldCByPXQuZ2V0Q2hpbGRyZW4oKTtpZigwPT09ci5sZW5ndGgpdGhpcy5fcmVtb3Zl"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "bmFyaWVzTGVuZ3RoKCl9Y29uc3RydWN0b3IoZSx0KXtzdXBlcihlLHQudmVyc2lvbigpKSx0aGlzLl9mb290ZXI9dH1nZXRSZWNvcmRCYXRjaChlKXtpZihlPj0wJiZlPHRoaXMubnVtUmVjb3JkQmF0Y2hlcyl7bGV0IHQ9dGhpcy5fZm9vdGVyLnJlY29yZEJhdGNoZXMoZSk7aWYodClyZXR1cm4gcmcuZGVjb2RlKHQpfXJldHVybiBudWxsfWdldERpY3Rpb25hcnlCYXRjaChlKXtpZihlPj0wJiZlPHRoaXMubnVtRGljdGlvbmFyaWVzKXtsZXQgdD10aGlzLl9mb290ZXIuZGljdGlvbmFyaWVzKGUpO2lmKHQpcmV0dXJuIHJnLmRlY29kZSh0KX1yZXR1cm4gbnVsbH19Y2xhc3Mgcmd7c3RhdGljIGRlY29kZShlKXtyZXR1cm4gbmV3IHJnKGUubWV0YURhdGFMZW5ndGgoKSxlLmJvZHlMZW5ndGgoKSxlLm9mZnNldCgpKX1zdGF0aWMgZW5jb2RlKGUsdCl7bGV0e21ldGFEYXRhTGVuZ3RoOnJ9PXQsbj1CaWdJbnQodC5vZmZzZXQpLGk9QmlnSW50KHQuYm9keUxlbmd0aCk7cmV0dXJuIHQ1LmNyZWF0ZUJsb2NrKGUsbixyLGkpfWNvbnN0cnVjdG9yKGUsdCxyKXt0aGlzLm1ldGFEYXRhTGVuZ3RoPWUsdGhpcy5vZmZzZXQ9KDAsRy5pKShyKSx0aGlzLmJvZHlMZW5ndGg9KDAsRy5pKSh0KX19bGV0IHJ5PXtmcm9tSXRlcmFibGU6ZT0+cmIoZnVuY3Rpb24qKGUpe2xldCB0LHI9ITEsbj1bXSxpLHMsbyxhPTA7KHtjbWQ6cyxzaXplOm99PSh5aWVsZCBudWxsKXx8e2NtZDoicmVhZCIsc2l6ZTowfSk7bGV0IGw9VyhlKVtTeW1ib2wuaXRlcmF0b3JdKCk7dHJ5e2RvIGlmKHtkb25lOnQsdmFsdWU6aX09TnVtYmVyLmlzTmFOKG8tYSk/bC5uZXh0KCk6bC5uZXh0KG8tYSksIXQmJmkuYnl0ZUxlbmd0aD4wJiYobi5wdXNoKGkpLGErPWkuYnl0ZUxlbmd0aCksdHx8bzw9YSlkbyh7Y21kOnMsc2l6ZTpvfT15aWVsZCJwZWVrIj09PXM/UChuLG8pWzBdOihbaSxuLGFdPVAobixvKSxpKSk7d2hpbGUobzxhKTt3aGlsZSghdCl9Y2F0Y2goZSl7cj0hMCwiZnVuY3Rpb24iPT10eXBlb2YgbC50aHJvdyYmbC50aHJvdyhlKX1maW5hbGx5eyExPT09ciYmImZ1bmN0aW9uIj09dHlwZW9mIGwucmV0dXJuJiZsLnJldHVybihudWxsKX1yZXR1cm4gbnVsbH0oZSkpLGZyb21Bc3luY0l0ZXJhYmxlOmU9PnJiKGZ1bmN0aW9uKGUpe3JldHVybigwLGguQVEpKHRoaXMsYXJndW1lbnRzLGZ1bmN0aW9uKigpe2xldCB0LHI9ITEsbj1bXSxpLHMsbyxhPTA7KHtjbWQ6cyxzaXplOm99PSh5aWVsZCB5aWVsZCgwLGguTjMpKG51bGwpKXx8e2NtZDoicmVhZCIsc2l6ZTowfSk7bGV0IGw9VihlKVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTt0cnl7ZG8gaWYoe2RvbmU6dCx2YWx1ZTppfT1OdW1iZXIuaXNOYU4oby1hKT95aWVsZCgwLGguTjMpKGwubmV4dCgpKTp5aWVsZCgwLGguTjMpKGwubmV4dChvLWEpKSwhdCYmaS5ieXRlTGVuZ3RoPjAmJihuLnB1c2goaSksYSs9aS5ieXRlTGVuZ3RoKSx0fHxvPD1hKWRvKHtjbWQ6cyxzaXplOm99PXlpZWxkIHlpZWxkKDAsaC5OMykoInBlZWsiPT09cz9QKG4sbylbMF06KFtpLG4sYV09UChuLG8pLGkpKSk7d2hpbGUobzxhKTt3aGlsZSghdCl9Y2F0Y2goZSl7cj0hMCwiZnVuY3Rpb24iPT10eXBlb2YgbC50aHJvdyYmKHlpZWxkKDAsaC5OMykobC50aHJvdyhlKSkpfWZpbmFsbHl7ITE9PT1yJiYiZnVuY3Rpb24iPT10eXBlb2YgbC5yZXR1cm4mJih5aWVsZCgwLGguTjMpKGwucmV0dXJuKG5ldyBVaW50OEFycmF5KDApKSkpfXJldHVybiB5aWVsZCgwLGguTjMpKG51bGwpfSl9KGUpKSxmcm9tRE9NU3RyZWFtOmU9PnJiKGZ1bmN0aW9uKGUpe3JldHVybigwLGguQVEpKHRoaXMsYXJndW1lbnRzLGZ1bmN0aW9uKigpe2xldCB0PSExLHI9ITEsbj1bXSxpLHMsbyxhPTA7KHtjbWQ6cyxzaXplOm99PSh5aWVsZCB5aWVsZCgwLGguTjMpKG51bGwpKXx8e2NtZDoicmVhZCIsc2l6ZTowfSk7bGV0IGw9bmV3IHJfKGUpO3RyeXtkbyBpZih7ZG9uZTp0LHZhbHVlOml9PU51bWJlci5pc05hTihvLWEpP3lpZWxkKDAsaC5OMykobC5yZWFkKCkpOnlpZWxkKDAsaC5OMykobC5yZWFkKG8tYSkpLCF0JiZpLmJ5dGVMZW5ndGg+MCYmKG4ucHVzaChIKGkpKSxhKz1pLmJ5dGVMZW5ndGgpLHR8fG88PWEpZG8oe2NtZDpzLHNpemU6b309eWllbGQgeWllbGQoMCxoLk4zKSgicGVlayI9PT1zP1AobixvKVswXTooW2ksbixhXT1QKG4sbyksaSkpKTt3aGlsZShvPGEpO3doaWxlKCF0KX1jYXRjaChlKXtyPSEwLHlpZWxkKDAsaC5OMykobC5jYW5jZWwoZSkpfWZpbmFsbHl7ITE9PT1yP3lpZWxkKDAsaC5OMykobC5jYW5jZWwoKSk6ZS5sb2NrZWQmJmwucmVsZWFzZUxvY2soKX1yZXR1cm4geWllbGQoMCxoLk4zKShudWxsKX0pfShlKSksZnJvbU5vZGVTdHJlYW06ZT0+cmIoZnVuY3Rpb24oZSl7cmV0dXJuKDAsaC5BUSkodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24qKCl7bGV0IHQ9W10scj0iZXJyb3IiLG49ITEsaT1udWxsLHMsbyxhPTAsbD1bXSx1O2lmKHtjbWQ6cyxzaXplOm99PSh5aWVsZCB5aWVsZCgwLGguTjMpKG51bGwpKXx8e2NtZDoicmVhZCIsc2l6ZTowfSxlLmlzVFRZKXJldHVybiB5aWVsZCB5aWVsZCgwLGguTjMpKG5ldyBVaW50OEFycmF5KDApKSx5aWVsZCgwLGguTjMpKG51bGwpO3RyeXt0WzBdPXJ2KGUsImVuZCIpLHRbMV09cnYoZSwiZXJyb3IiKTtkb3tpZih0WzJdPXJ2KGUsInJlYWRhYmxlIiksW3IsaV09eWllbGQoMCxoLk4zKShQcm9taXNlLnJhY2UodC5tYXAoZT0+ZVsyXSkpKSwiZXJyb3IiPT09cilicmVhaztpZigobj0iZW5kIj09PXIpfHwoTnVtYmVyLmlzRmluaXRlKG8tYSk/KHU9SChlLnJlYWQoby1hKSkpLmJ5dGVMZW5ndGg8by1hJiYodT1IKGUucmVhZCgpKSk6dT1IKGUucmVhZCgpKSx1LmJ5dGVMZW5ndGg+MCYmKGwucHVzaCh1KSxhKz11LmJ5dGVMZW5ndGgpKSxufHxvPD1hKWRvKHtjbWQ6cyxzaXplOm99PXlpZWxkIHlpZWxkKDAsaC5OMykoInBlZWsiPT09cz9QKGwsbylbMF06KFt1LGwsYV09UChsLG8pLHUpKSk7d2hpbGUobzxhKX13aGlsZSghbil9ZmluYWxseXt2YXIgZCxjO3lpZWxkKDAsaC5OMykoKGQ9dCxjPSJlcnJvciI9PT1yP2k6bnVsbCx1PWw9bnVsbCxuZXcgUHJvbWlzZSgodCxyKT0+e2ZvcihsZXRbdCxyXW9mIGQpZS5vZmYodCxyKTt0cnl7bGV0IHQ9ZS5kZXN0cm95O3QmJnQuY2FsbChlLGMpLGM9dm9pZCAwfWNhdGNoKGUpe2M9ZXx8Y31maW5hbGx5e251bGwhPWM/cihjKTp0KCl9fSkpKX1yZXR1cm4geWllbGQoMCxoLk4zKShudWxsKX0pfShlKSksdG9ET01TdHJlYW0oZSx0KXt0aHJvdyBFcnJvcignInRvRE9NU3RyZWFtIiBub3QgYXZhaWxhYmxlIGluIHRoaXMgZW52aXJvbm1lbnQnKX0sdG9Ob2RlU3RyZWFtKGUsdCl7dGhyb3cgRXJyb3IoJyJ0b05vZGVTdHJlYW0iIG5vdCBhdmFpbGFibGUgaW4gdGhpcyBlbnZpcm9ubWVudCcpfX0scmI9ZT0+KGUubmV4dCgpLGUpO2NsYXNzIHJfe2NvbnN0cnVjdG9yKGUpe3RoaXMuc291cmNlPWUsdGhpcy5yZWFkZXI9bnVsbCx0aGlzLnJlYWRlcj10aGlzLnNvdXJjZS5nZXRSZWFkZXIoKSx0aGlzLnJlYWRlci5jbG9zZWQuY2F0Y2goKCk9Pnt9KX1nZXQgY2xvc2VkKCl7cmV0dXJuIHRoaXMucmVhZGVyP3RoaXMucmVhZGVyLmNsb3NlZC5jYXRjaCgoKT0+e30pOlByb21pc2UucmVzb2x2ZSgpfXJlbGVhc2VMb2NrKCl7dGhpcy5yZWFkZXImJnRoaXMucmVhZGVyLnJlbGVhc2VMb2NrKCksdGhpcy5yZWFkZXI9bnVsbH1jYW5jZWwoZSl7cmV0dXJuKDAsaC5zSCkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKigpe2xldHtyZWFkZXI6dCxzb3VyY2U6cn09dGhpczt0JiYoeWllbGQgdC5jYW5jZWwoZSkuY2F0Y2goKCk9Pnt9KSksciYmci5sb2NrZWQmJnRoaXMucmVsZWFzZUxvY2soKX0pfXJlYWQoZSl7cmV0dXJuKDAsaC5zSCkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKigpe2lmKDA9PT1lKXJldHVybntkb25lOm51bGw9PXRoaXMucmVhZGVyLHZhbHVlOm5ldyBVaW50OEFycmF5KDApfTtsZXQgdD15aWVsZCB0aGlzLnJlYWRlci5yZWFkKCk7cmV0dXJuIHQuZG9uZXx8KHQudmFsdWU9SCh0KSksdH0pfX1sZXQgcnY9KGUsdCk9PntsZXQgcjtsZXQgbj1lPT5yKFt0LGVdKTtyZXR1cm5bdCxuLG5ldyBQcm9taXNlKGk9PihyPWkpJiZlLm9uY2UodCxuKSldfSxydz1PYmplY3QuZnJlZXplKHtkb25lOiEwLHZhbHVlOnZvaWQgMH0pO2NsYXNzIHJUe2NvbnN0cnVjdG9yKGUpe3RoaXMuX2pzb249ZX1nZXQgc2NoZW1hKCl7cmV0dXJuIHRoaXMuX2pzb24uc2NoZW1hfWdldCBiYXRjaGVzKCl7cmV0dXJuIHRoaXMuX2pzb24uYmF0Y2hlc3x8W119Z2V0IGRpY3Rpb25hcmllcygpe3JldHVybiB0aGlzLl9qc29uLmRpY3Rpb25hcmllc3x8W119fWNsYXNzIHJTe3RlZSgpe3JldHVybiB0aGlzLl9nZXRET01TdHJlYW0oKS50ZWUoKX1waXBlKGUsdCl7cmV0dXJuIHRoaXMuX2dldE5vZGVTdHJlYW0oKS5waXBlKGUsdCl9cGlwZVRvKGUsdCl7cmV0dXJuIHRoaXMuX2dldERPTVN0cmVhbSgpLnBpcGVUbyhlLHQpfXBpcGVUaHJvdWdoKGUsdCl7cmV0dXJuIHRoaXMuX2dldERPTVN0cmVhbSgpLnBpcGVUaHJvdWdoKGUsdCl9X2dldERPTVN0cmVhbSgpe3JldHVybiB0aGlzLl9ET01TdHJlYW18fCh0aGlzLl9ET01TdHJlYW09dGhpcy50b0RPTVN0cmVhbSgpKX1fZ2V0Tm9kZVN0cmVhbSgpe3JldHVybiB0aGlzLl9ub2RlU3RyZWFtfHwodGhpcy5fbm9kZVN0cmVhbT10aGlzLnRvTm9kZVN0cmVhbSgpKX19Y2xhc3MgckUgZXh0ZW5kcyByU3tjb25zdHJ1Y3Rvcigpe3N1cGVyKCksdGhpcy5fdmFsdWVzPVtdLHRoaXMucmVzb2x2ZXJzPVtdLHRoaXMuX2Nsb3NlZFByb21pc2U9bmV3IFByb21pc2UoZT0+dGhpcy5fY2xvc2VkUHJvbWlzZVJlc29sdmU9ZSl9Z2V0IGNsb3NlZCgpe3JldHVybiB0aGlzLl9jbG9zZWRQcm9taXNlfWNhbmNlbChlKXtyZXR1cm4oMCxoLnNIKSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24qKCl7eWllbGQgdGhpcy5yZXR1cm4oZSl9KX13cml0ZShlKXt0aGlzLl9lbnN1cmVPcGVuKCkmJih0aGlzLnJlc29sdmVycy5sZW5ndGg8PTA/dGhpcy5fdmFsdWVzLnB1c2goZSk6dGhpcy5yZXNvbHZlcnMuc2hpZnQoKS5yZXNvbHZlKHtkb25lOiExLHZhbHVlOmV9KSl9YWJvcnQoZSl7dGhpcy5fY2xvc2VkUHJvbWlzZVJlc29sdmUmJih0aGlzLnJlc29sdmVycy5sZW5ndGg8PTA/dGhpcy5fZXJyb3I9e2Vycm9yOmV9OnRoaXMucmVzb2x2ZXJzLnNoaWZ0KCkucmVqZWN0KHtkb25lOiEwLHZhbHVlOmV9KSl9Y2xvc2UoKXtpZih0aGlzLl9jbG9zZWRQcm9taXNlUmVzb2x2ZSl7bGV0e3Jlc29sdmVyczplfT10aGlzO2Zvcig7ZS5sZW5ndGg+MDspZS5zaGlmdCgpLnJlc29sdmUocncpO3RoaXMuX2Nsb3NlZFByb21pc2VSZXNvbHZlKCksdGhpcy5fY2xvc2VkUHJvbWlzZVJlc29sdmU9dm9pZCAwfX1bU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCl7cmV0dXJuIHRoaXN9dG9ET01TdHJlYW0oZSl7cmV0dXJuIHJ5LnRvRE9NU3RyZWFtKHRoaXMuX2Nsb3NlZFByb21pc2VSZXNvbHZlfHx0aGlzLl9lcnJvcj90aGlzOnRoaXMuX3ZhbHVlcyxlKX10b05vZGVTdHJlYW0oZSl7cmV0dXJuIHJ5LnRvTm9kZVN0cmVhbSh0aGlzLl9jbG9zZWRQcm9taXNlUmVzb2x2ZXx8dGhpcy5fZXJyb3I/dGhpczp0aGlzLl92YWx1ZXMsZSl9dGhyb3coZSl7cmV0dXJuKDAsaC5zSCkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKigpe3JldHVybiB5aWVsZCB0aGlzLmFib3J0KGUpLHJ3fSl9cmV0dXJuKGUpe3JldHVybigwLGguc0gpKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbiooKXtyZXR1cm4geWllbGQgdGhpcy5jbG9zZSgpLHJ3fSl9cmVhZChlKXtyZXR1cm4oMCxoLnNIKSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24qKCl7cmV0dXJuKHlpZWxkIHRoaXMubmV4dChlLCJyZWFkIikpLnZhbHVlfSl9cGVlayhlKXtyZXR1cm4oMCxoLnNIKSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24qKCl7cmV0dXJuKHlpZWxkIHRoaXMubmV4dChlLCJwZWVrIikpLnZhbHVlfSl9bmV4dCguLi5lKXtyZXR1cm4gdGhpcy5fdmFsdWVzLmxlbmd0aD4wP1Byb21pc2UucmVzb2x2ZSh7ZG9uZTohMSx2YWx1ZTp0aGlzLl92YWx1ZXMuc2hpZnQoKX0pOnRoaXMuX2Vycm9yP1Byb21pc2UucmVqZWN0KHtkb25lOiEwLHZhbHVlOnRoaXMuX2Vycm9yLmVycm9yfS"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "VuLHIpfXJldHVybiByfShlLmNvbHVtbnMpKX1mdW5jdGlvbiBuVChlLHQpe3JldHVybihlLmNoaWxkcmVufHxbXSkuZmlsdGVyKEJvb2xlYW4pLm1hcChlPT5yYy5mcm9tSlNPTihlLHQpKX1mdW5jdGlvbiBuUyhlPVtdKXtyZXR1cm4gbmV3IE1hcChlLm1hcCgoe2tleTplLHZhbHVlOnR9KT0+W2UsdF0pKX1mdW5jdGlvbiBuRShlKXtyZXR1cm4gbmV3IGVkLkFpKGUuaXNTaWduZWQsZS5iaXRXaWR0aCl9ZnVuY3Rpb24gbngoZSx0KXtsZXQgcj1lLnR5cGUubmFtZTtzd2l0Y2gocil7Y2FzZSJOT05FIjpjYXNlIm51bGwiOnJldHVybiBuZXcgZWQuVXY7Y2FzZSJiaW5hcnkiOnJldHVybiBuZXcgZWQueUk7Y2FzZSJsYXJnZWJpbmFyeSI6cmV0dXJuIG5ldyBlZC5CUztjYXNlInV0ZjgiOnJldHVybiBuZXcgZWQuWUU7Y2FzZSJsYXJnZXV0ZjgiOnJldHVybiBuZXcgZWQuSmI7Y2FzZSJib29sIjpyZXR1cm4gbmV3IGVkLng7Y2FzZSJsaXN0IjpyZXR1cm4gbmV3IGVkLkI4KCh0fHxbXSlbMF0pO2Nhc2Uic3RydWN0IjpjYXNlInN0cnVjdF8iOnJldHVybiBuZXcgZWQuX2sodHx8W10pfXN3aXRjaChyKXtjYXNlImludCI6e2xldCB0PWUudHlwZTtyZXR1cm4gbmV3IGVkLkFpKHQuaXNTaWduZWQsdC5iaXRXaWR0aCl9Y2FzZSJmbG9hdGluZ3BvaW50Ijp7bGV0IHQ9ZS50eXBlO3JldHVybiBuZXcgZWQubnQoZXMualt0LnByZWNpc2lvbl0pfWNhc2UiZGVjaW1hbCI6e2xldCB0PWUudHlwZTtyZXR1cm4gbmV3IGVkLld3KHQuc2NhbGUsdC5wcmVjaXNpb24sdC5iaXRXaWR0aCl9Y2FzZSJkYXRlIjp7bGV0IHQ9ZS50eXBlO3JldHVybiBuZXcgZWQuT0QoZWEuZlt0LnVuaXRdKX1jYXNlInRpbWUiOntsZXQgdD1lLnR5cGU7cmV0dXJuIG5ldyBlZC5nWChlby55W3QudW5pdF0sdC5iaXRXaWR0aCl9Y2FzZSJ0aW1lc3RhbXAiOntsZXQgdD1lLnR5cGU7cmV0dXJuIG5ldyBlZC5EYyhlby55W3QudW5pdF0sdC50aW1lem9uZSl9Y2FzZSJpbnRlcnZhbCI6e2xldCB0PWUudHlwZTtyZXR1cm4gbmV3IGVkLklYKGVsLmFbdC51bml0XSl9Y2FzZSJkdXJhdGlvbiI6e2xldCB0PWUudHlwZTtyZXR1cm4gbmV3IGVkLmR3KGVvLnlbdC51bml0XSl9Y2FzZSJ1bmlvbiI6e2xldCByPWUudHlwZSxbbiwuLi5pXT0oci5tb2RlKyIiKS50b0xvd2VyQ2FzZSgpLHM9bi50b1VwcGVyQ2FzZSgpK2kuam9pbigiIik7cmV0dXJuIG5ldyBlZC5nUChldS5SW3NdLHIudHlwZUlkc3x8W10sdHx8W10pfWNhc2UiZml4ZWRzaXplYmluYXJ5Ijp7bGV0IHQ9ZS50eXBlO3JldHVybiBuZXcgZWQuUHYodC5ieXRlV2lkdGgpfWNhc2UiZml4ZWRzaXplbGlzdCI6e2xldCByPWUudHlwZTtyZXR1cm4gbmV3IGVkLlkxKHIubGlzdFNpemUsKHR8fFtdKVswXSl9Y2FzZSJtYXAiOntsZXQgcj1lLnR5cGU7cmV0dXJuIG5ldyBlZC5XRCgodHx8W10pWzBdLHIua2V5c1NvcnRlZCl9fXRocm93IEVycm9yKGBVbnJlY29nbml6ZWQgdHlwZTogIiR7cn0iYCl9Y2xhc3MgbkF7c3RhdGljIGZyb21KU09OKGUsdCl7dmFyIHIsbjtsZXQgcz1uZXcgbkEoMCxvLlY1LHQpO3JldHVybiByPWUsbj10LHMuX2NyZWF0ZUhlYWRlcj0oKT0+e3N3aXRjaChuKXtjYXNlIGkuU2NoZW1hOnJldHVybiByZC5mcm9tSlNPTihyKTtjYXNlIGkuUmVjb3JkQmF0Y2g6cmV0dXJuIG5JLmZyb21KU09OKHIpO2Nhc2UgaS5EaWN0aW9uYXJ5QmF0Y2g6cmV0dXJuIG5PLmZyb21KU09OKHIpfXRocm93IEVycm9yKGBVbnJlY29nbml6ZWQgTWVzc2FnZSB0eXBlOiB7IG5hbWU6ICR7aVtuXX0sIHR5cGU6ICR7bn0gfWApfSxzfXN0YXRpYyBkZWNvZGUoZSl7dmFyIHQscjtlPW5ldyBycihIKGUpKTtsZXQgbj1uZC5nZXRSb290QXNNZXNzYWdlKGUpLHM9bi5ib2R5TGVuZ3RoKCksbz1uLnZlcnNpb24oKSxhPW4uaGVhZGVyVHlwZSgpLGw9bmV3IG5BKHMsbyxhKTtyZXR1cm4gdD1uLHI9YSxsLl9jcmVhdGVIZWFkZXI9KCk9Pntzd2l0Y2gocil7Y2FzZSBpLlNjaGVtYTpyZXR1cm4gcmQuZGVjb2RlKHQuaGVhZGVyKG5ldyBybCksbmV3IE1hcCx0LnZlcnNpb24oKSk7Y2FzZSBpLlJlY29yZEJhdGNoOnJldHVybiBuSS5kZWNvZGUodC5oZWFkZXIobmV3IHI1KSx0LnZlcnNpb24oKSk7Y2FzZSBpLkRpY3Rpb25hcnlCYXRjaDpyZXR1cm4gbk8uZGVjb2RlKHQuaGVhZGVyKG5ldyByOSksdC52ZXJzaW9uKCkpfXRocm93IEVycm9yKGBVbnJlY29nbml6ZWQgTWVzc2FnZSB0eXBlOiB7IG5hbWU6ICR7aVtyXX0sIHR5cGU6ICR7cn0gfWApfSxsfXN0YXRpYyBlbmNvZGUoZSl7bGV0IHQ9bmV3IHJuLHI9LTE7cmV0dXJuIGUuaXNTY2hlbWEoKT9yPXJkLmVuY29kZSh0LGUuaGVhZGVyKCkpOmUuaXNSZWNvcmRCYXRjaCgpP3I9bkkuZW5jb2RlKHQsZS5oZWFkZXIoKSk6ZS5pc0RpY3Rpb25hcnlCYXRjaCgpJiYocj1uTy5lbmNvZGUodCxlLmhlYWRlcigpKSksbmQuc3RhcnRNZXNzYWdlKHQpLG5kLmFkZFZlcnNpb24odCxvLlY1KSxuZC5hZGRIZWFkZXIodCxyKSxuZC5hZGRIZWFkZXJUeXBlKHQsZS5oZWFkZXJUeXBlKSxuZC5hZGRCb2R5TGVuZ3RoKHQsQmlnSW50KGUuYm9keUxlbmd0aCkpLG5kLmZpbmlzaE1lc3NhZ2VCdWZmZXIodCxuZC5lbmRNZXNzYWdlKHQpKSx0LmFzVWludDhBcnJheSgpfXN0YXRpYyBmcm9tKGUsdD0wKXtpZihlIGluc3RhbmNlb2YgcmQpcmV0dXJuIG5ldyBuQSgwLG8uVjUsaS5TY2hlbWEsZSk7aWYoZSBpbnN0YW5jZW9mIG5JKXJldHVybiBuZXcgbkEodCxvLlY1LGkuUmVjb3JkQmF0Y2gsZSk7aWYoZSBpbnN0YW5jZW9mIG5PKXJldHVybiBuZXcgbkEodCxvLlY1LGkuRGljdGlvbmFyeUJhdGNoLGUpO3Rocm93IEVycm9yKGBVbnJlY29nbml6ZWQgTWVzc2FnZSBoZWFkZXI6ICR7ZX1gKX1nZXQgdHlwZSgpe3JldHVybiB0aGlzLmhlYWRlclR5cGV9Z2V0IHZlcnNpb24oKXtyZXR1cm4gdGhpcy5fdmVyc2lvbn1nZXQgaGVhZGVyVHlwZSgpe3JldHVybiB0aGlzLl9oZWFkZXJUeXBlfWdldCBib2R5TGVuZ3RoKCl7cmV0dXJuIHRoaXMuX2JvZHlMZW5ndGh9aGVhZGVyKCl7cmV0dXJuIHRoaXMuX2NyZWF0ZUhlYWRlcigpfWlzU2NoZW1hKCl7cmV0dXJuIHRoaXMuaGVhZGVyVHlwZT09PWkuU2NoZW1hfWlzUmVjb3JkQmF0Y2goKXtyZXR1cm4gdGhpcy5oZWFkZXJUeXBlPT09aS5SZWNvcmRCYXRjaH1pc0RpY3Rpb25hcnlCYXRjaCgpe3JldHVybiB0aGlzLmhlYWRlclR5cGU9PT1pLkRpY3Rpb25hcnlCYXRjaH1jb25zdHJ1Y3RvcihlLHQscixuKXt0aGlzLl92ZXJzaW9uPXQsdGhpcy5faGVhZGVyVHlwZT1yLHRoaXMuYm9keT1uZXcgVWludDhBcnJheSgwKSxuJiYodGhpcy5fY3JlYXRlSGVhZGVyPSgpPT5uKSx0aGlzLl9ib2R5TGVuZ3RoPSgwLEcuaSkoZSl9fWNsYXNzIG5Je2dldCBub2Rlcygpe3JldHVybiB0aGlzLl9ub2Rlc31nZXQgbGVuZ3RoKCl7cmV0dXJuIHRoaXMuX2xlbmd0aH1nZXQgYnVmZmVycygpe3JldHVybiB0aGlzLl9idWZmZXJzfWNvbnN0cnVjdG9yKGUsdCxyKXt0aGlzLl9ub2Rlcz10LHRoaXMuX2J1ZmZlcnM9cix0aGlzLl9sZW5ndGg9KDAsRy5pKShlKX19Y2xhc3Mgbk97Z2V0IGlkKCl7cmV0dXJuIHRoaXMuX2lkfWdldCBkYXRhKCl7cmV0dXJuIHRoaXMuX2RhdGF9Z2V0IGlzRGVsdGEoKXtyZXR1cm4gdGhpcy5faXNEZWx0YX1nZXQgbGVuZ3RoKCl7cmV0dXJuIHRoaXMuZGF0YS5sZW5ndGh9Z2V0IG5vZGVzKCl7cmV0dXJuIHRoaXMuZGF0YS5ub2Rlc31nZXQgYnVmZmVycygpe3JldHVybiB0aGlzLmRhdGEuYnVmZmVyc31jb25zdHJ1Y3RvcihlLHQscj0hMSl7dGhpcy5fZGF0YT1lLHRoaXMuX2lzRGVsdGE9cix0aGlzLl9pZD0oMCxHLmkpKHQpfX1jbGFzcyBuUntjb25zdHJ1Y3RvcihlLHQpe3RoaXMub2Zmc2V0PSgwLEcuaSkoZSksdGhpcy5sZW5ndGg9KDAsRy5pKSh0KX19Y2xhc3Mgbk57Y29uc3RydWN0b3IoZSx0KXt0aGlzLmxlbmd0aD0oMCxHLmkpKGUpLHRoaXMubnVsbENvdW50PSgwLEcuaSkodCl9fWZ1bmN0aW9uIG5DKGUsdCl7bGV0IHI9W107Zm9yKGxldCBuLGk9LTEscz0tMSxvPWUuY2hpbGRyZW5MZW5ndGgoKTsrK2k8bzspKG49ZS5jaGlsZHJlbihpKSkmJihyWysrc109cmMuZGVjb2RlKG4sdCkpO3JldHVybiByfWZ1bmN0aW9uIG5MKGUpe2xldCB0PW5ldyBNYXA7aWYoZSlmb3IobGV0IHIsbixpPS0xLHM9TWF0aC50cnVuYyhlLmN1c3RvbU1ldGFkYXRhTGVuZ3RoKCkpOysraTxzOykocj1lLmN1c3RvbU1ldGFkYXRhKGkpKSYmbnVsbCE9KG49ci5rZXkoKSkmJnQuc2V0KG4sci52YWx1ZSgpKTtyZXR1cm4gdH1mdW5jdGlvbiBuRChlKXtyZXR1cm4gbmV3IGVkLkFpKGUuaXNTaWduZWQoKSxlLmJpdFdpZHRoKCkpfWZ1bmN0aW9uIG5CKGUsdCl7bGV0IHI9ZS50eXBlVHlwZSgpO3N3aXRjaChyKXtjYXNlIHUuTk9ORTpjYXNlIHUuTnVsbDpyZXR1cm4gbmV3IGVkLlV2O2Nhc2UgdS5CaW5hcnk6cmV0dXJuIG5ldyBlZC55STtjYXNlIHUuTGFyZ2VCaW5hcnk6cmV0dXJuIG5ldyBlZC5CUztjYXNlIHUuVXRmODpyZXR1cm4gbmV3IGVkLllFO2Nhc2UgdS5MYXJnZVV0Zjg6cmV0dXJuIG5ldyBlZC5KYjtjYXNlIHUuQm9vbDpyZXR1cm4gbmV3IGVkLng7Y2FzZSB1Lkxpc3Q6cmV0dXJuIG5ldyBlZC5COCgodHx8W10pWzBdKTtjYXNlIHUuU3RydWN0XzpyZXR1cm4gbmV3IGVkLl9rKHR8fFtdKX1zd2l0Y2gocil7Y2FzZSB1LkludDp7bGV0IHQ9ZS50eXBlKG5ldyBycyk7cmV0dXJuIG5ldyBlZC5BaSh0LmlzU2lnbmVkKCksdC5iaXRXaWR0aCgpKX1jYXNlIHUuRmxvYXRpbmdQb2ludDp7bGV0IHQ9ZS50eXBlKG5ldyByNyk7cmV0dXJuIG5ldyBlZC5udCh0LnByZWNpc2lvbigpKX1jYXNlIHUuRGVjaW1hbDp7bGV0IHQ9ZS50eXBlKG5ldyBuZSk7cmV0dXJuIG5ldyBlZC5Xdyh0LnNjYWxlKCksdC5wcmVjaXNpb24oKSx0LmJpdFdpZHRoKCkpfWNhc2UgdS5EYXRlOntsZXQgdD1lLnR5cGUobmV3IG50KTtyZXR1cm4gbmV3IGVkLk9EKHQudW5pdCgpKX1jYXNlIHUuVGltZTp7bGV0IHQ9ZS50eXBlKG5ldyBucik7cmV0dXJuIG5ldyBlZC5nWCh0LnVuaXQoKSx0LmJpdFdpZHRoKCkpfWNhc2UgdS5UaW1lc3RhbXA6e2xldCB0PWUudHlwZShuZXcgbm4pO3JldHVybiBuZXcgZWQuRGModC51bml0KCksdC50aW1lem9uZSgpKX1jYXNlIHUuSW50ZXJ2YWw6e2xldCB0PWUudHlwZShuZXcgbmkpO3JldHVybiBuZXcgZWQuSVgodC51bml0KCkpfWNhc2UgdS5EdXJhdGlvbjp7bGV0IHQ9ZS50eXBlKG5ldyBucyk7cmV0dXJuIG5ldyBlZC5kdyh0LnVuaXQoKSl9Y2FzZSB1LlVuaW9uOntsZXQgcj1lLnR5cGUobmV3IG5vKTtyZXR1cm4gbmV3IGVkLmdQKHIubW9kZSgpLHIudHlwZUlkc0FycmF5KCl8fFtdLHR8fFtdKX1jYXNlIHUuRml4ZWRTaXplQmluYXJ5OntsZXQgdD1lLnR5cGUobmV3IG5hKTtyZXR1cm4gbmV3IGVkLlB2KHQuYnl0ZVdpZHRoKCkpfWNhc2UgdS5GaXhlZFNpemVMaXN0OntsZXQgcj1lLnR5cGUobmV3IG5sKTtyZXR1cm4gbmV3IGVkLlkxKHIubGlzdFNpemUoKSwodHx8W10pWzBdKX1jYXNlIHUuTWFwOntsZXQgcj1lLnR5cGUobmV3IG51KTtyZXR1cm4gbmV3IGVkLldEKCh0fHxbXSlbMF0sci5rZXlzU29ydGVkKCkpfX10aHJvdyBFcnJvcihgVW5yZWNvZ25pemVkIHR5cGU6ICIke3Vbcl19IiAoJHtyfSlgKX1yYy5lbmNvZGU9ZnVuY3Rpb24oZSx0KXtsZXQgcj0tMSxuPS0xLGk9LTEscz10LnR5cGUsbz10LnR5cGVJZDtlZC5wZS5pc0RpY3Rpb25hcnkocyk/KG89cy5kaWN0aW9uYXJ5LnR5cGVJZCxpPW52LnZpc2l0KHMsZSksbj1udi52aXNpdChzLmRpY3Rpb25hcnksZSkpOm49bnYudmlzaXQocyxlKTtsZXQgYT0ocy5jaGlsZHJlbnx8W10pLm1hcCh0PT5yYy5lbmNvZGUoZSx0KSksbD1yYS5jcmVhdGVDaGlsZHJlblZlY3RvcihlLGEpLHU9dC5tZXRhZGF0YSYmdC5tZXRhZGF0YS5zaXplPjA/cmEuY3JlYXRlQ3VzdG9tTWV0YWRhdGFWZWN0b3IoZSxbLi4udC5tZXRhZGF0YV0ubWFwKChbdCxyXSk9PntsZXQgbj1lLmNyZWF0ZVN0cmluZyhgJHt0fWApLGk9ZS5jcmVhdGVTdHJpbmcoYCR7cn1gKTtyZXR1cm4gcmkuc3RhcnRLZXlWYWx1ZShlKSxyaS5hZGRLZXkoZSxuKSxyaS5hZGRWYWx1ZShlLGkpLHJpLmVuZEtleVZhbHVlKGUpfSkpOi0xO3JldHVybiB0Lm5hbWUmJihyPWUuY3JlYXRlU3RyaW5nKHQubmFtZSkpLHJhLnN0YXJ0RmllbGQo"
     ""
     ""
     ""
     ""
     ""
     "JPUj0yNTVdPSJNQVhfQVJST1dfRVJST1IiLGVbZS5EVUNLREJfV0FTTV9SRVRSWT0yNTZdPSJEVUNLREJfV0FTTV9SRVRSWSIsZSkpKGlDfHx7fSksaUw9Y2xhc3N7Y29uc3RydWN0b3IoZSx0KXt0aGlzLl9iaW5kaW5ncz1lLHRoaXMuX2Nvbm49dH1nZXQgYmluZGluZ3MoKXtyZXR1cm4gdGhpcy5fYmluZGluZ3N9YXN5bmMgY2xvc2UoKXtyZXR1cm4gdGhpcy5fYmluZGluZ3MuZGlzY29ubmVjdCh0aGlzLl9jb25uKX11c2VVbnNhZmUoZSl7cmV0dXJuIGUodGhpcy5fYmluZGluZ3MsdGhpcy5fY29ubil9YXN5bmMgcXVlcnkoZSl7dGhpcy5fYmluZGluZ3MubG9nZ2VyLmxvZyh7dGltZXN0YW1wOm5ldyBEYXRlLGxldmVsOjIsb3JpZ2luOjQsdG9waWM6NCxldmVudDo0LHZhbHVlOmV9KTtsZXQgdD1hd2FpdCB0aGlzLl9iaW5kaW5ncy5ydW5RdWVyeSh0aGlzLl9jb25uLGUpLHI9bnEuZnJvbSh0KTtyZXR1cm4gY29uc29sZS5hc3NlcnQoci5pc1N5bmMoKSwiUmVhZGVyIGlzIG5vdCBzeW5jIiksY29uc29sZS5hc3NlcnQoci5pc0ZpbGUoKSwiUmVhZGVyIGlzIG5vdCBmaWxlIiksbmV3IHIwKHIpfWFzeW5jIHNlbmQoZSx0PSExKXt0aGlzLl9iaW5kaW5ncy5sb2dnZXIubG9nKHt0aW1lc3RhbXA6bmV3IERhdGUsbGV2ZWw6MixvcmlnaW46NCx0b3BpYzo0LGV2ZW50OjQsdmFsdWU6ZX0pO2xldCByPWF3YWl0IHRoaXMuX2JpbmRpbmdzLnN0YXJ0UGVuZGluZ1F1ZXJ5KHRoaXMuX2Nvbm4sZSx0KTtmb3IoO251bGw9PXI7KXI9YXdhaXQgdGhpcy5fYmluZGluZ3MucG9sbFBlbmRpbmdRdWVyeSh0aGlzLl9jb25uKTtsZXQgbj1uZXcgaUQodGhpcy5fYmluZGluZ3MsdGhpcy5fY29ubixyKSxpPWF3YWl0IG5xLmZyb20obik7cmV0dXJuIGNvbnNvbGUuYXNzZXJ0KGkuaXNBc3luYygpKSxjb25zb2xlLmFzc2VydChpLmlzU3RyZWFtKCkpLGl9YXN5bmMgY2FuY2VsU2VudCgpe3JldHVybiBhd2FpdCB0aGlzLl9iaW5kaW5ncy5jYW5jZWxQZW5kaW5nUXVlcnkodGhpcy5fY29ubil9YXN5bmMgZ2V0VGFibGVOYW1lcyhlKXtyZXR1cm4gYXdhaXQgdGhpcy5fYmluZGluZ3MuZ2V0VGFibGVOYW1lcyh0aGlzLl9jb25uLGUpfWFzeW5jIHByZXBhcmUoZSl7bGV0IHQ9YXdhaXQgdGhpcy5fYmluZGluZ3MuY3JlYXRlUHJlcGFyZWQodGhpcy5fY29ubixlKTtyZXR1cm4gbmV3IGlCKHRoaXMuX2JpbmRpbmdzLHRoaXMuX2Nvbm4sdCl9YXN5bmMgaW5zZXJ0QXJyb3dUYWJsZShlLHQpe2xldCByPWZ1bmN0aW9uKGUsdD0ic3RyZWFtIil7cmV0dXJuKCJzdHJlYW0iPT09dD9pYzppaCkud3JpdGVBbGwoZSkudG9VaW50OEFycmF5KCEwKX0oZSwic3RyZWFtIik7YXdhaXQgdGhpcy5pbnNlcnRBcnJvd0Zyb21JUENTdHJlYW0ocix0KX1hc3luYyBpbnNlcnRBcnJvd0Zyb21JUENTdHJlYW0oZSx0KXthd2FpdCB0aGlzLl9iaW5kaW5ncy5pbnNlcnRBcnJvd0Zyb21JUENTdHJlYW0odGhpcy5fY29ubixlLHQpfWFzeW5jIGluc2VydENTVkZyb21QYXRoKGUsdCl7YXdhaXQgdGhpcy5fYmluZGluZ3MuaW5zZXJ0Q1NWRnJvbVBhdGgodGhpcy5fY29ubixlLHQpfWFzeW5jIGluc2VydEpTT05Gcm9tUGF0aChlLHQpe2F3YWl0IHRoaXMuX2JpbmRpbmdzLmluc2VydEpTT05Gcm9tUGF0aCh0aGlzLl9jb25uLGUsdCl9fSxpRD1jbGFzc3tjb25zdHJ1Y3RvcihlLHQscil7dGhpcy5kYj1lLHRoaXMuY29ubj10LHRoaXMuaGVhZGVyPXIsdGhpcy5fZmlyc3Q9ITAsdGhpcy5fZGVwbGV0ZWQ9ITEsdGhpcy5faW5GbGlnaHQ9bnVsbH1hc3luYyBuZXh0KCl7aWYodGhpcy5fZmlyc3QpcmV0dXJuIHRoaXMuX2ZpcnN0PSExLHtkb25lOiExLHZhbHVlOnRoaXMuaGVhZGVyfTtpZih0aGlzLl9kZXBsZXRlZClyZXR1cm57ZG9uZTohMCx2YWx1ZTpudWxsfTtsZXQgZT1udWxsO2ZvcihudWxsIT10aGlzLl9pbkZsaWdodCYmKGU9YXdhaXQgdGhpcy5faW5GbGlnaHQsdGhpcy5faW5GbGlnaHQ9bnVsbCk7bnVsbD09ZTspZT1hd2FpdCB0aGlzLmRiLmZldGNoUXVlcnlSZXN1bHRzKHRoaXMuY29ubik7cmV0dXJuIHRoaXMuX2RlcGxldGVkPTA9PWUubGVuZ3RoLHRoaXMuX2RlcGxldGVkfHwodGhpcy5faW5GbGlnaHQ9dGhpcy5kYi5mZXRjaFF1ZXJ5UmVzdWx0cyh0aGlzLmNvbm4pKSx7ZG9uZTp0aGlzLl9kZXBsZXRlZCx2YWx1ZTplfX1bU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCl7cmV0dXJuIHRoaXN9fSxpQj1jbGFzc3tjb25zdHJ1Y3RvcihlLHQscil7dGhpcy5iaW5kaW5ncz1lLHRoaXMuY29ubmVjdGlvbklkPXQsdGhpcy5zdGF0ZW1lbnRJZD1yfWFzeW5jIGNsb3NlKCl7YXdhaXQgdGhpcy5iaW5kaW5ncy5jbG9zZVByZXBhcmVkKHRoaXMuY29ubmVjdGlvbklkLHRoaXMuc3RhdGVtZW50SWQpfWFzeW5jIHF1ZXJ5KC4uLmUpe2xldCB0PWF3YWl0IHRoaXMuYmluZGluZ3MucnVuUHJlcGFyZWQodGhpcy5jb25uZWN0aW9uSWQsdGhpcy5zdGF0ZW1lbnRJZCxlKSxyPW5xLmZyb20odCk7cmV0dXJuIGNvbnNvbGUuYXNzZXJ0KHIuaXNTeW5jKCkpLGNvbnNvbGUuYXNzZXJ0KHIuaXNGaWxlKCkpLG5ldyByMChyKX1hc3luYyBzZW5kKC4uLmUpe2xldCB0PWF3YWl0IHRoaXMuYmluZGluZ3Muc2VuZFByZXBhcmVkKHRoaXMuY29ubmVjdGlvbklkLHRoaXMuc3RhdGVtZW50SWQsZSkscj1uZXcgaUQodGhpcy5iaW5kaW5ncyx0aGlzLmNvbm5lY3Rpb25JZCx0KSxuPWF3YWl0IG5xLmZyb20ocik7cmV0dXJuIGNvbnNvbGUuYXNzZXJ0KG4uaXNBc3luYygpKSxjb25zb2xlLmFzc2VydChuLmlzU3RyZWFtKCkpLG59fSxpaz0oZT0+KGUuQ0FOQ0VMX1BFTkRJTkdfUVVFUlk9IkNBTkNFTF9QRU5ESU5HX1FVRVJZIixlLkNMT1NFX1BSRVBBUkVEPSJDTE9TRV9QUkVQQVJFRCIsZS5DT0xMRUNUX0ZJTEVfU1RBVElTVElDUz0iQ09MTEVDVF9GSUxFX1NUQVRJU1RJQ1MiLGUuUkVHSVNURVJfT1BGU19GSUxFX05BTUU9IlJFR0lTVEVSX09QRlNfRklMRV9OQU1FIixlLkNPTk5FQ1Q9IkNPTk5FQ1QiLGUuQ09QWV9GSUxFX1RPX0JVRkZFUj0iQ09QWV9GSUxFX1RPX0JVRkZFUiIsZS5DT1BZX0ZJTEVfVE9fUEFUSD0iQ09QWV9GSUxFX1RPX1BBVEgiLGUuQ1JFQVRFX1BSRVBBUkVEPSJDUkVBVEVfUFJFUEFSRUQiLGUuRElTQ09OTkVDVD0iRElTQ09OTkVDVCIsZS5EUk9QX0ZJTEU9IkRST1BfRklMRSIsZS5EUk9QX0ZJTEVTPSJEUk9QX0ZJTEVTIixlLkVYUE9SVF9GSUxFX1NUQVRJU1RJQ1M9IkVYUE9SVF9GSUxFX1NUQVRJU1RJQ1MiLGUuRkVUQ0hfUVVFUllfUkVTVUxUUz0iRkVUQ0hfUVVFUllfUkVTVUxUUyIsZS5GTFVTSF9GSUxFUz0iRkxVU0hfRklMRVMiLGUuR0VUX0ZFQVRVUkVfRkxBR1M9IkdFVF9GRUFUVVJFX0ZMQUdTIixlLkdFVF9UQUJMRV9OQU1FUz0iR0VUX1RBQkxFX05BTUVTIixlLkdFVF9WRVJTSU9OPSJHRVRfVkVSU0lPTiIsZS5HTE9CX0ZJTEVfSU5GT1M9IkdMT0JfRklMRV9JTkZPUyIsZS5JTlNFUlRfQVJST1dfRlJPTV9JUENfU1RSRUFNPSJJTlNFUlRfQVJST1dfRlJPTV9JUENfU1RSRUFNIixlLklOU0VSVF9DU1ZfRlJPTV9QQVRIPSJJTVBPUlRfQ1NWX0ZST01fUEFUSCIsZS5JTlNFUlRfSlNPTl9GUk9NX1BBVEg9IklNUE9SVF9KU09OX0ZST01fUEFUSCIsZS5JTlNUQU5USUFURT0iSU5TVEFOVElBVEUiLGUuT1BFTj0iT1BFTiIsZS5QSU5HPSJQSU5HIixlLlBPTExfUEVORElOR19RVUVSWT0iUE9MTF9QRU5ESU5HX1FVRVJZIixlLlJFR0lTVEVSX0ZJTEVfQlVGRkVSPSJSRUdJU1RFUl9GSUxFX0JVRkZFUiIsZS5SRUdJU1RFUl9GSUxFX0hBTkRMRT0iUkVHSVNURVJfRklMRV9IQU5ETEUiLGUuUkVHSVNURVJfRklMRV9VUkw9IlJFR0lTVEVSX0ZJTEVfVVJMIixlLlJFU0VUPSJSRVNFVCIsZS5SVU5fUFJFUEFSRUQ9IlJVTl9QUkVQQVJFRCIsZS5SVU5fUVVFUlk9IlJVTl9RVUVSWSIsZS5TRU5EX1BSRVBBUkVEPSJTRU5EX1BSRVBBUkVEIixlLlNUQVJUX1BFTkRJTkdfUVVFUlk9IlNUQVJUX1BFTkRJTkdfUVVFUlkiLGUuVE9LRU5JWkU9IlRPS0VOSVpFIixlKSkoaWt8fHt9KSxpTT0oZT0+KGUuQ09OTkVDVElPTl9JTkZPPSJDT05ORUNUSU9OX0lORk8iLGUuRVJST1I9IkVSUk9SIixlLkZFQVRVUkVfRkxBR1M9IkZFQVRVUkVfRkxBR1MiLGUuRklMRV9CVUZGRVI9IkZJTEVfQlVGRkVSIixlLkZJTEVfSU5GT1M9IkZJTEVfSU5GT1MiLGUuRklMRV9TSVpFPSJGSUxFX1NJWkUiLGUuRklMRV9TVEFUSVNUSUNTPSJGSUxFX1NUQVRJU1RJQ1MiLGUuSU5TVEFOVElBVEVfUFJPR1JFU1M9IklOU1RBTlRJQVRFX1BST0dSRVNTIixlLkxPRz0iTE9HIixlLlBST0dSRVNTX1VQREFURT0iUFJPR1JFU1NfVVBEQVRFIixlLk9LPSJPSyIsZS5QUkVQQVJFRF9TVEFURU1FTlRfSUQ9IlBSRVBBUkVEX1NUQVRFTUVOVF9JRCIsZS5RVUVSWV9QTEFOPSJRVUVSWV9QTEFOIixlLlFVRVJZX1JFU1VMVD0iUVVFUllfUkVTVUxUIixlLlFVRVJZX1JFU1VMVF9DSFVOSz0iUVVFUllfUkVTVUxUX0NIVU5LIixlLlFVRVJZX1JFU1VMVF9IRUFERVI9IlFVRVJZX1JFU1VMVF9IRUFERVIiLGUuUVVFUllfUkVTVUxUX0hFQURFUl9PUl9OVUxMPSJRVUVSWV9SRVNVTFRfSEVBREVSX09SX05VTEwiLGUuUkVHSVNURVJFRF9GSUxFPSJSRUdJU1RFUkVEX0ZJTEUiLGUuU0NSSVBUX1RPS0VOUz0iU0NSSVBUX1RPS0VOUyIsZS5TVUNDRVNTPSJTVUNDRVNTIixlLlRBQkxFX05BTUVTPSJUQUJMRV9OQU1FUyIsZS5WRVJTSU9OX1NUUklORz0iVkVSU0lPTl9TVFJJTkciLGUpKShpTXx8e30pLGlVPWNsYXNze2NvbnN0cnVjdG9yKGUsdCl7dGhpcy5wcm9taXNlUmVzb2x2ZXI9KCk9Pnt9LHRoaXMucHJvbWlzZVJlamVjdGVyPSgpPT57fSx0aGlzLnR5cGU9ZSx0aGlzLmRhdGE9dCx0aGlzLnByb21pc2U9bmV3IFByb21pc2UoKGUsdCk9Pnt0aGlzLnByb21pc2VSZXNvbHZlcj1lLHRoaXMucHJvbWlzZVJlamVjdGVyPXR9KX19O2Z1bmN0aW9uIGlGKGUsdCl7bGV0IHI9ZnVuY3Rpb24gZSh0KXtzd2l0Y2godC50eXBlSWQpe2Nhc2UgcC5aVS5CaW5hcnk6cmV0dXJue3NxbFR5cGU6ImJpbmFyeSJ9O2Nhc2UgcC5aVS5Cb29sOnJldHVybntzcWxUeXBlOiJib29sIn07Y2FzZSBwLlpVLkRhdGU6cmV0dXJue3NxbFR5cGU6ImRhdGUifTtjYXNlIHAuWlUuRGF0ZURheTpyZXR1cm57c3FsVHlwZToiZGF0ZTMyW2RdIn07Y2FzZSBwLlpVLkRhdGVNaWxsaXNlY29uZDpyZXR1cm57c3FsVHlwZToiZGF0ZTY0W21zXSJ9O2Nhc2UgcC5aVS5EZWNpbWFsOnJldHVybntzcWxUeXBlOiJkZWNpbWFsIixwcmVjaXNpb246dC5wcmVjaXNpb24sc2NhbGU6dC5zY2FsZX07Y2FzZSBwLlpVLkZsb2F0OnJldHVybntzcWxUeXBlOiJmbG9hdCJ9O2Nhc2UgcC5aVS5GbG9hdDE2OnJldHVybntzcWxUeXBlOiJmbG9hdDE2In07Y2FzZSBwLlpVLkZsb2F0MzI6cmV0dXJue3NxbFR5cGU6ImZsb2F0MzIifTtjYXNlIHAuWlUuRmxvYXQ2NDpyZXR1cm57c3FsVHlwZToiZmxvYXQ2NCJ9O2Nhc2UgcC5aVS5JbnQ6cmV0dXJue3NxbFR5cGU6ImludDMyIn07Y2FzZSBwLlpVLkludDE2OnJldHVybntzcWxUeXBlOiJpbnQxNiJ9O2Nhc2UgcC5aVS5JbnQzMjpyZXR1cm57c3FsVHlwZToiaW50MzIifTtjYXNlIHAuWlUuSW50NjQ6cmV0dXJue3NxbFR5cGU6ImludDY0In07Y2FzZSBwLlpVLlVpbnQxNjpyZXR1cm57c3FsVHlwZToidWludDE2In07Y2FzZSBwLlpVLlVpbnQzMjpyZXR1cm57c3FsVHlwZToidWludDMyIn07Y2FzZSBwLlpVLlVpbnQ2NDpyZXR1cm57c3FsVHlwZToidWludDY0In07Y2FzZSBwLlpVLlVpbnQ4OnJldHVybntzcWxUeXBlOiJ1aW50OCJ9O2Nhc2UgcC5aVS5JbnRlcnZhbERheVRpbWU6cmV0dXJue3NxbFR5cGU6ImludGVydmFsW2R0XSJ9O2Nhc2UgcC5aVS5JbnRlcnZhbFllYXJNb250aDpyZXR1cm57c3FsVHlwZToiaW50ZXJ2YWxbbV0ifTtjYXNlIHAuWlUuTGlzdDpyZXR1cm57c3FsVHlwZToibGlzdCIsdmFsdWVUeXBlOmUodC52YWx1ZVR5cGUpfTtjYXNlIHAuWlUuRml4ZWRTaXplQmluYXJ5OnJldHVybntzcWxUeXBlOiJmaXhlZHNpemViaW5hcnkiLGJ5dGVXaWR0aDp0LmJ5dGVXaWR0aH07Y2FzZSBwLlpVLk51bGw6cmV0dXJue3NxbFR5cGU6Im51bGwifTtjYXNlIHAuWlUuVXRmODpyZXR1cm57c3FsVHlwZToidXRmOCJ9O2Nhc2UgcC5aVS5TdHJ1Y3Q6cmV0dXJue3NxbFR5cGU6InN0cnVjdCIsZmllbGRzOnQuY2hp"
     ""
     ""
     ""
     ""
     "b24oKXt1KGkpJiZkKHtpbnN0Oml9KX0pfSxbZV0pLGwocikscn07dC51c2VTeW5jRXh0ZXJuYWxTdG9yZT12b2lkIDAhPT1uLnVzZVN5bmNFeHRlcm5hbFN0b3JlP24udXNlU3luY0V4dGVybmFsU3RvcmU6ZH0sMjI4NjI6KGUsdCxyKT0+eyJ1c2Ugc3RyaWN0IjtyLmQodCx7QTooKT0+bn0pO2xldCBuPSgwLHIoNjE1NjEpLkEpKCJUcmFzaCIsW1sicGF0aCIse2Q6Ik0zIDZoMTgiLGtleToiZDB3bTBqIn1dLFsicGF0aCIse2Q6Ik0xOSA2djE0YzAgMS0xIDItMiAySDdjLTEgMC0yLTEtMi0yVjYiLGtleToiNGFscnQ0In1dLFsicGF0aCIse2Q6Ik04IDZWNGMwLTEgMS0yIDItMmg0YzEgMCAyIDEgMiAydjIiLGtleToidjA3czBlIn1dXSl9LDIzMjIyOihlLHQscik9PnsidXNlIHN0cmljdCI7ZS5leHBvcnRzPXIoMjE5NjUpfSwyMzgyMjooZSx0LHIpPT57InVzZSBzdHJpY3QiO2xldCBuLGkscyxvLGEsbCx1LGQsYyxoO3IuZCh0LHt6NDooKT0+blJ9KTtsZXQgcD0iUkZDMzk4NiIsZj17UkZDMTczODplPT5TdHJpbmcoZSkucmVwbGFjZSgvJTIwL2csIisiKSxSRkMzOTg2OmU9PlN0cmluZyhlKX0sbT0oT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxBcnJheS5pc0FycmF5KSxnPSgoKT0+e2xldCBlPVtdO2ZvcihsZXQgdD0wO3Q8MjU2OysrdCllLnB1c2goIiUiKygodDwxNj8iMCI6IiIpK3QudG9TdHJpbmcoMTYpKS50b1VwcGVyQ2FzZSgpKTtyZXR1cm4gZX0pKCk7ZnVuY3Rpb24geShlLHQpe2lmKG0oZSkpe2xldCByPVtdO2ZvcihsZXQgbj0wO248ZS5sZW5ndGg7bis9MSlyLnB1c2godChlW25dKSk7cmV0dXJuIHJ9cmV0dXJuIHQoZSl9bGV0IGI9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxfPXticmFja2V0czplPT5TdHJpbmcoZSkrIltdIixjb21tYToiY29tbWEiLGluZGljZXM6KGUsdCk9PlN0cmluZyhlKSsiWyIrdCsiXSIscmVwZWF0OmU9PlN0cmluZyhlKX0sdj1BcnJheS5pc0FycmF5LHc9QXJyYXkucHJvdG90eXBlLnB1c2gsVD1mdW5jdGlvbihlLHQpe3cuYXBwbHkoZSx2KHQpP3Q6W3RdKX0sUz1EYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZyxFPXthZGRRdWVyeVByZWZpeDohMSxhbGxvd0RvdHM6ITEsYWxsb3dFbXB0eUFycmF5czohMSxhcnJheUZvcm1hdDoiaW5kaWNlcyIsY2hhcnNldDoidXRmLTgiLGNoYXJzZXRTZW50aW5lbDohMSxkZWxpbWl0ZXI6IiYiLGVuY29kZTohMCxlbmNvZGVEb3RJbktleXM6ITEsZW5jb2RlcjooZSx0LHIsbixpKT0+e2lmKDA9PT1lLmxlbmd0aClyZXR1cm4gZTtsZXQgcz1lO2lmKCJzeW1ib2wiPT10eXBlb2YgZT9zPVN5bWJvbC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKToic3RyaW5nIiE9dHlwZW9mIGUmJihzPVN0cmluZyhlKSksImlzby04ODU5LTEiPT09cilyZXR1cm4gZXNjYXBlKHMpLnJlcGxhY2UoLyV1WzAtOWEtZl17NH0vZ2ksZnVuY3Rpb24oZSl7cmV0dXJuIiUyNiUyMyIrcGFyc2VJbnQoZS5zbGljZSgyKSwxNikrIiUzQiJ9KTtsZXQgbz0iIjtmb3IobGV0IGU9MDtlPHMubGVuZ3RoO2UrPTEwMjQpe2xldCB0PXMubGVuZ3RoPj0xMDI0P3Muc2xpY2UoZSxlKzEwMjQpOnMscj1bXTtmb3IobGV0IGU9MDtlPHQubGVuZ3RoOysrZSl7bGV0IG49dC5jaGFyQ29kZUF0KGUpO2lmKDQ1PT09bnx8NDY9PT1ufHw5NT09PW58fDEyNj09PW58fG4+PTQ4JiZuPD01N3x8bj49NjUmJm48PTkwfHxuPj05NyYmbjw9MTIyfHwiUkZDMTczOCI9PT1pJiYoNDA9PT1ufHw0MT09PW4pKXtyW3IubGVuZ3RoXT10LmNoYXJBdChlKTtjb250aW51ZX1pZihuPDEyOCl7cltyLmxlbmd0aF09Z1tuXTtjb250aW51ZX1pZihuPDIwNDgpe3Jbci5sZW5ndGhdPWdbMTkyfG4+PjZdK2dbMTI4fDYzJm5dO2NvbnRpbnVlfWlmKG48NTUyOTZ8fG4+PTU3MzQ0KXtyW3IubGVuZ3RoXT1nWzIyNHxuPj4xMl0rZ1sxMjh8bj4+NiY2M10rZ1sxMjh8NjMmbl07Y29udGludWV9ZSs9MSxuPTY1NTM2KygoMTAyMyZuKTw8MTB8MTAyMyZ0LmNoYXJDb2RlQXQoZSkpLHJbci5sZW5ndGhdPWdbMjQwfG4+PjE4XStnWzEyOHxuPj4xMiY2M10rZ1sxMjh8bj4+NiY2M10rZ1sxMjh8NjMmbl19bys9ci5qb2luKCIiKX1yZXR1cm4gb30sZW5jb2RlVmFsdWVzT25seTohMSxmb3JtYXQ6cCxmb3JtYXR0ZXI6ZltwXSxpbmRpY2VzOiExLHNlcmlhbGl6ZURhdGU6ZT0+Uy5jYWxsKGUpLHNraXBOdWxsczohMSxzdHJpY3ROdWxsSGFuZGxpbmc6ITF9LHg9e30sQT0iNC4xMDQuMCIsST0hMTtjbGFzcyBPe2NvbnN0cnVjdG9yKGUpe3RoaXMuYm9keT1lfWdldFtTeW1ib2wudG9TdHJpbmdUYWddKCl7cmV0dXJuIk11bHRpcGFydEJvZHkifX1sZXQgUj0oKT0+e2l8fGZ1bmN0aW9uKGUsdD17YXV0bzohMX0pe2lmKEkpdGhyb3cgRXJyb3IoYHlvdSBtdXN0IFxgaW1wb3J0ICdvcGVuYWkvc2hpbXMvJHtlLmtpbmR9J1xgIGJlZm9yZSBpbXBvcnRpbmcgYW55dGhpbmcgZWxzZSBmcm9tIG9wZW5haWApO2lmKGkpdGhyb3cgRXJyb3IoYGNhbid0IFxgaW1wb3J0ICdvcGVuYWkvc2hpbXMvJHtlLmtpbmR9J1xgIGFmdGVyIFxgaW1wb3J0ICdvcGVuYWkvc2hpbXMvJHtpfSdcYGApO0k9dC5hdXRvLGk9ZS5raW5kLHM9ZS5mZXRjaCxlLlJlcXVlc3QsZS5SZXNwb25zZSxlLkhlYWRlcnMsbz1lLkZvcm1EYXRhLGUuQmxvYixhPWUuRmlsZSxsPWUuUmVhZGFibGVTdHJlYW0sdT1lLmdldE11bHRpcGFydFJlcXVlc3RPcHRpb25zLGQ9ZS5nZXREZWZhdWx0QWdlbnQsYz1lLmZpbGVGcm9tUGF0aCxoPWUuaXNGc1JlYWRTdHJlYW19KGZ1bmN0aW9uKHttYW51YWxseUltcG9ydGVkOmV9PXt9KXtsZXQgdCxyLG4saTtsZXQgcz1lPyJZb3UgbWF5IG5lZWQgdG8gdXNlIHBvbHlmaWxscyI6YEFkZCBvbmUgb2YgdGhlc2UgaW1wb3J0cyBiZWZvcmUgeW91ciBmaXJzdCBcYGltcG9ydCDigKYgZnJvbSAnb3BlbmFpJ1xgOgotIFxgaW1wb3J0ICdvcGVuYWkvc2hpbXMvbm9kZSdcYCAoaWYgeW91J3JlIHJ1bm5pbmcgb24gTm9kZSkKLSBcYGltcG9ydCAnb3BlbmFpL3NoaW1zL3dlYidcYCAob3RoZXJ3aXNlKQpgO3RyeXt0PWZldGNoLHI9UmVxdWVzdCxuPVJlc3BvbnNlLGk9SGVhZGVyc31jYXRjaChlKXt0aHJvdyBFcnJvcihgdGhpcyBlbnZpcm9ubWVudCBpcyBtaXNzaW5nIHRoZSBmb2xsb3dpbmcgV2ViIEZldGNoIEFQSSB0eXBlOiAke2UubWVzc2FnZX0uICR7c31gKX1yZXR1cm57a2luZDoid2ViIixmZXRjaDp0LFJlcXVlc3Q6cixSZXNwb25zZTpuLEhlYWRlcnM6aSxGb3JtRGF0YToidW5kZWZpbmVkIiE9dHlwZW9mIEZvcm1EYXRhP0Zvcm1EYXRhOmNsYXNze2NvbnN0cnVjdG9yKCl7dGhyb3cgRXJyb3IoYGZpbGUgdXBsb2FkcyBhcmVuJ3Qgc3VwcG9ydGVkIGluIHRoaXMgZW52aXJvbm1lbnQgeWV0IGFzICdGb3JtRGF0YScgaXMgdW5kZWZpbmVkLiAke3N9YCl9fSxCbG9iOiJ1bmRlZmluZWQiIT10eXBlb2YgQmxvYj9CbG9iOmNsYXNze2NvbnN0cnVjdG9yKCl7dGhyb3cgRXJyb3IoYGZpbGUgdXBsb2FkcyBhcmVuJ3Qgc3VwcG9ydGVkIGluIHRoaXMgZW52aXJvbm1lbnQgeWV0IGFzICdCbG9iJyBpcyB1bmRlZmluZWQuICR7c31gKX19LEZpbGU6InVuZGVmaW5lZCIhPXR5cGVvZiBGaWxlP0ZpbGU6Y2xhc3N7Y29uc3RydWN0b3IoKXt0aHJvdyBFcnJvcihgZmlsZSB1cGxvYWRzIGFyZW4ndCBzdXBwb3J0ZWQgaW4gdGhpcyBlbnZpcm9ubWVudCB5ZXQgYXMgJ0ZpbGUnIGlzIHVuZGVmaW5lZC4gJHtzfWApfX0sUmVhZGFibGVTdHJlYW06InVuZGVmaW5lZCIhPXR5cGVvZiBSZWFkYWJsZVN0cmVhbT9SZWFkYWJsZVN0cmVhbTpjbGFzc3tjb25zdHJ1Y3Rvcigpe3Rocm93IEVycm9yKGBzdHJlYW1pbmcgaXNuJ3Qgc3VwcG9ydGVkIGluIHRoaXMgZW52aXJvbm1lbnQgeWV0IGFzICdSZWFkYWJsZVN0cmVhbScgaXMgdW5kZWZpbmVkLiAke3N9YCl9fSxnZXRNdWx0aXBhcnRSZXF1ZXN0T3B0aW9uczphc3luYyhlLHQpPT4oey4uLnQsYm9keTpuZXcgTyhlKX0pLGdldERlZmF1bHRBZ2VudDplPT52b2lkIDAsZmlsZUZyb21QYXRoOigpPT57dGhyb3cgRXJyb3IoIlRoZSBgZmlsZUZyb21QYXRoYCBmdW5jdGlvbiBpcyBvbmx5IHN1cHBvcnRlZCBpbiBOb2RlLiBTZWUgdGhlIFJFQURNRSBmb3IgbW9yZSBkZXRhaWxzOiBodHRwczovL3d3dy5naXRodWIuY29tL29wZW5haS9vcGVuYWktbm9kZSNmaWxlLXVwbG9hZHMiKX0saXNGc1JlYWRTdHJlYW06ZT0+ITF9fSgpLHthdXRvOiEwfSl9O1IoKTtjbGFzcyBOIGV4dGVuZHMgRXJyb3J7fWNsYXNzIEMgZXh0ZW5kcyBOe2NvbnN0cnVjdG9yKGUsdCxyLG4pe3N1cGVyKGAke0MubWFrZU1lc3NhZ2UoZSx0LHIpfWApLHRoaXMuc3RhdHVzPWUsdGhpcy5oZWFkZXJzPW4sdGhpcy5yZXF1ZXN0X2lkPW4/LlsieC1yZXF1ZXN0LWlkIl0sdGhpcy5lcnJvcj10LHRoaXMuY29kZT10Py5jb2RlLHRoaXMucGFyYW09dD8ucGFyYW0sdGhpcy50eXBlPXQ/LnR5cGV9c3RhdGljIG1ha2VNZXNzYWdlKGUsdCxyKXtsZXQgbj10Py5tZXNzYWdlPyJzdHJpbmciPT10eXBlb2YgdC5tZXNzYWdlP3QubWVzc2FnZTpKU09OLnN0cmluZ2lmeSh0Lm1lc3NhZ2UpOnQ/SlNPTi5zdHJpbmdpZnkodCk6cjtyZXR1cm4gZSYmbj9gJHtlfSAke259YDplP2Ake2V9IHN0YXR1cyBjb2RlIChubyBib2R5KWA6bnx8IihubyBzdGF0dXMgY29kZSBvciBib2R5KSJ9c3RhdGljIGdlbmVyYXRlKGUsdCxyLG4pe2lmKCFlfHwhbilyZXR1cm4gbmV3IEQoe21lc3NhZ2U6cixjYXVzZTp0VSh0KX0pO2xldCBpPXQ/LmVycm9yO3JldHVybiA0MDA9PT1lP25ldyBrKGUsaSxyLG4pOjQwMT09PWU/bmV3IE0oZSxpLHIsbik6NDAzPT09ZT9uZXcgVShlLGkscixuKTo0MDQ9PT1lP25ldyBGKGUsaSxyLG4pOjQwOT09PWU/bmV3IFAoZSxpLHIsbik6NDIyPT09ZT9uZXcgaihlLGkscixuKTo0Mjk9PT1lP25ldyB6KGUsaSxyLG4pOmU+PTUwMD9uZXcgJChlLGkscixuKTpuZXcgQyhlLGkscixuKX19Y2xhc3MgTCBleHRlbmRzIEN7Y29uc3RydWN0b3Ioe21lc3NhZ2U6ZX09e30pe3N1cGVyKHZvaWQgMCx2b2lkIDAsZXx8IlJlcXVlc3Qgd2FzIGFib3J0ZWQuIix2b2lkIDApfX1jbGFzcyBEIGV4dGVuZHMgQ3tjb25zdHJ1Y3Rvcih7bWVzc2FnZTplLGNhdXNlOnR9KXtzdXBlcih2b2lkIDAsdm9pZCAwLGV8fCJDb25uZWN0aW9uIGVycm9yLiIsdm9pZCAwKSx0JiYodGhpcy5jYXVzZT10KX19Y2xhc3MgQiBleHRlbmRzIER7Y29uc3RydWN0b3Ioe21lc3NhZ2U6ZX09e30pe3N1cGVyKHttZXNzYWdlOmU/PyJSZXF1ZXN0IHRpbWVkIG91dC4ifSl9fWNsYXNzIGsgZXh0ZW5kcyBDe31jbGFzcyBNIGV4dGVuZHMgQ3t9Y2xhc3MgVSBleHRlbmRzIEN7fWNsYXNzIEYgZXh0ZW5kcyBDe31jbGFzcyBQIGV4dGVuZHMgQ3t9Y2xhc3MgaiBleHRlbmRzIEN7fWNsYXNzIHogZXh0ZW5kcyBDe31jbGFzcyAkIGV4dGVuZHMgQ3t9Y2xhc3MgSCBleHRlbmRzIE57Y29uc3RydWN0b3IoKXtzdXBlcigiQ291bGQgbm90IHBhcnNlIHJlc3BvbnNlIGNvbnRlbnQgYXMgdGhlIGxlbmd0aCBsaW1pdCB3YXMgcmVhY2hlZCIpfX1jbGFzcyBaIGV4dGVuZHMgTntjb25zdHJ1Y3Rvcigpe3N1cGVyKCJDb3VsZCBub3QgcGFyc2UgcmVzcG9uc2UgY29udGVudCBhcyB0aGUgcmVxdWVzdCB3YXMgcmVqZWN0ZWQgYnkgdGhlIGNvbnRlbnQgZmlsdGVyIil9fXZhciBXLFYsWSxHLFgscSxKLEssUSxlZSxldCxlcixlbixlaSxlcyxlbyxlYSxlbCxldSxlZCxlYyxlaCxlcCxlZixlbSxlZyxleSxlYixlXyxldixldyxlVCxlUyxlRSxleCxlQSxlSSxlTyxlUixlTixlQyxlTCxlRCxlQixlayxlTSxlVSxlRixlUCxlaixleixlJCxlSCxlWixlVyxlVixlWSxlRyxlWCxlcSxlSixlSyxlUSxlMCxlMSxlMj1yKDY3MzQ1KS5CdWZmZXIsZTM9ZnVuY3Rpb24oZSx0LHIsbixpKXtpZigibSI9PT1uKXRocm93IFR5cGVFcnJvcigiUHJpdmF0ZSBtZXRob2QgaXMgbm90IHdyaXRhYmxlIik7aWYoImEiPT09biYmIWkpdGhyb3cgVHlwZUVycm9yKCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBzZXR0ZXIiKTtpZigiZnVuY3Rpb24iPT10eXBlb2YgdD9lIT09dHx8IWk6IXQuaGFzKGUpKXRocm93IFR5cGVFcnJvcigiQ2Fubm90IHdyaXRlIHByaXZhdGUgbWVtYmVyIHRvIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXQiKTtyZX"
     ""
     ""
     ""
     ""
     ""
     "YC92ZWN0b3Jfc3RvcmVzLyR7ZX0vZmlsZV9iYXRjaGVzYCx7Ym9keTp0LC4uLnIsaGVhZGVyczp7Ik9wZW5BSS1CZXRhIjoiYXNzaXN0YW50cz12MiIsLi4ucj8uaGVhZGVyc319KX1yZXRyaWV2ZShlLHQscil7cmV0dXJuIHRoaXMuX2NsaWVudC5nZXQoYC92ZWN0b3Jfc3RvcmVzLyR7ZX0vZmlsZV9iYXRjaGVzLyR7dH1gLHsuLi5yLGhlYWRlcnM6eyJPcGVuQUktQmV0YSI6ImFzc2lzdGFudHM9djIiLC4uLnI/LmhlYWRlcnN9fSl9Y2FuY2VsKGUsdCxyKXtyZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoYC92ZWN0b3Jfc3RvcmVzLyR7ZX0vZmlsZV9iYXRjaGVzLyR7dH0vY2FuY2VsYCx7Li4ucixoZWFkZXJzOnsiT3BlbkFJLUJldGEiOiJhc3Npc3RhbnRzPXYyIiwuLi5yPy5oZWFkZXJzfX0pfWFzeW5jIGNyZWF0ZUFuZFBvbGwoZSx0LHIpe2xldCBuPWF3YWl0IHRoaXMuY3JlYXRlKGUsdCk7cmV0dXJuIGF3YWl0IHRoaXMucG9sbChlLG4uaWQscil9bGlzdEZpbGVzKGUsdCxyPXt9LG4pe3JldHVybiB0SShyKT90aGlzLmxpc3RGaWxlcyhlLHQse30scik6dGhpcy5fY2xpZW50LmdldEFQSUxpc3QoYC92ZWN0b3Jfc3RvcmVzLyR7ZX0vZmlsZV9iYXRjaGVzLyR7dH0vZmlsZXNgLHJULHtxdWVyeTpyLC4uLm4saGVhZGVyczp7Ik9wZW5BSS1CZXRhIjoiYXNzaXN0YW50cz12MiIsLi4ubj8uaGVhZGVyc319KX1hc3luYyBwb2xsKGUsdCxyKXtsZXQgbj17Li4ucj8uaGVhZGVycywiWC1TdGFpbmxlc3MtUG9sbC1IZWxwZXIiOiJ0cnVlIn07Zm9yKHI/LnBvbGxJbnRlcnZhbE1zJiYoblsiWC1TdGFpbmxlc3MtQ3VzdG9tLVBvbGwtSW50ZXJ2YWwiXT1yLnBvbGxJbnRlcnZhbE1zLnRvU3RyaW5nKCkpOzspe2xldHtkYXRhOmkscmVzcG9uc2U6c309YXdhaXQgdGhpcy5yZXRyaWV2ZShlLHQsey4uLnIsaGVhZGVyczpufSkud2l0aFJlc3BvbnNlKCk7c3dpdGNoKGkuc3RhdHVzKXtjYXNlImluX3Byb2dyZXNzIjpsZXQgbz01ZTM7aWYocj8ucG9sbEludGVydmFsTXMpbz1yLnBvbGxJbnRlcnZhbE1zO2Vsc2V7bGV0IGU9cy5oZWFkZXJzLmdldCgib3BlbmFpLXBvbGwtYWZ0ZXItbXMiKTtpZihlKXtsZXQgdD1wYXJzZUludChlKTtpc05hTih0KXx8KG89dCl9fWF3YWl0IHRrKG8pO2JyZWFrO2Nhc2UiZmFpbGVkIjpjYXNlImNhbmNlbGxlZCI6Y2FzZSJjb21wbGV0ZWQiOnJldHVybiBpfX19YXN5bmMgdXBsb2FkQW5kUG9sbChlLHtmaWxlczp0LGZpbGVJZHM6cj1bXX0sbil7aWYobnVsbD09dHx8MD09dC5sZW5ndGgpdGhyb3cgRXJyb3IoIk5vIGBmaWxlc2AgcHJvdmlkZWQgdG8gcHJvY2Vzcy4gSWYgeW91J3ZlIGFscmVhZHkgdXBsb2FkZWQgZmlsZXMgeW91IHNob3VsZCB1c2UgYC5jcmVhdGVBbmRQb2xsKClgIGluc3RlYWQiKTtsZXQgaT1NYXRoLm1pbihuPy5tYXhDb25jdXJyZW5jeT8/NSx0Lmxlbmd0aCkscz10aGlzLl9jbGllbnQsbz10LnZhbHVlcygpLGE9Wy4uLnJdO2FzeW5jIGZ1bmN0aW9uIGwoZSl7Zm9yKGxldCB0IG9mIGUpe2xldCBlPWF3YWl0IHMuZmlsZXMuY3JlYXRlKHtmaWxlOnQscHVycG9zZToiYXNzaXN0YW50cyJ9LG4pO2EucHVzaChlLmlkKX19bGV0IHU9QXJyYXkoaSkuZmlsbChvKS5tYXAobCk7cmV0dXJuIGF3YWl0IHJ2KHUpLGF3YWl0IHRoaXMuY3JlYXRlQW5kUG9sbChlLHtmaWxlX2lkczphfSl9fWNsYXNzIHJ4IGV4dGVuZHMgdHF7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMuZmlsZXM9bmV3IHJ3KHRoaXMuX2NsaWVudCksdGhpcy5maWxlQmF0Y2hlcz1uZXcgckUodGhpcy5fY2xpZW50KX1jcmVhdGUoZSx0KXtyZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoIi92ZWN0b3Jfc3RvcmVzIix7Ym9keTplLC4uLnQsaGVhZGVyczp7Ik9wZW5BSS1CZXRhIjoiYXNzaXN0YW50cz12MiIsLi4udD8uaGVhZGVyc319KX1yZXRyaWV2ZShlLHQpe3JldHVybiB0aGlzLl9jbGllbnQuZ2V0KGAvdmVjdG9yX3N0b3Jlcy8ke2V9YCx7Li4udCxoZWFkZXJzOnsiT3BlbkFJLUJldGEiOiJhc3Npc3RhbnRzPXYyIiwuLi50Py5oZWFkZXJzfX0pfXVwZGF0ZShlLHQscil7cmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KGAvdmVjdG9yX3N0b3Jlcy8ke2V9YCx7Ym9keTp0LC4uLnIsaGVhZGVyczp7Ik9wZW5BSS1CZXRhIjoiYXNzaXN0YW50cz12MiIsLi4ucj8uaGVhZGVyc319KX1saXN0KGU9e30sdCl7cmV0dXJuIHRJKGUpP3RoaXMubGlzdCh7fSxlKTp0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgiL3ZlY3Rvcl9zdG9yZXMiLHJBLHtxdWVyeTplLC4uLnQsaGVhZGVyczp7Ik9wZW5BSS1CZXRhIjoiYXNzaXN0YW50cz12MiIsLi4udD8uaGVhZGVyc319KX1kZWwoZSx0KXtyZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShgL3ZlY3Rvcl9zdG9yZXMvJHtlfWAsey4uLnQsaGVhZGVyczp7Ik9wZW5BSS1CZXRhIjoiYXNzaXN0YW50cz12MiIsLi4udD8uaGVhZGVyc319KX1zZWFyY2goZSx0LHIpe3JldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChgL3ZlY3Rvcl9zdG9yZXMvJHtlfS9zZWFyY2hgLHJJLHtib2R5OnQsbWV0aG9kOiJwb3N0IiwuLi5yLGhlYWRlcnM6eyJPcGVuQUktQmV0YSI6ImFzc2lzdGFudHM9djIiLC4uLnI/LmhlYWRlcnN9fSl9fWNsYXNzIHJBIGV4dGVuZHMgdDB7fWNsYXNzIHJJIGV4dGVuZHMgdFF7fXJ4LlZlY3RvclN0b3Jlc1BhZ2U9ckEscnguVmVjdG9yU3RvcmVTZWFyY2hSZXNwb25zZXNQYWdlPXJJLHJ4LkZpbGVzPXJ3LHJ4LlZlY3RvclN0b3JlRmlsZXNQYWdlPXJULHJ4LkZpbGVDb250ZW50UmVzcG9uc2VzUGFnZT1yUyxyeC5GaWxlQmF0Y2hlcz1yRTtjbGFzcyByTyBleHRlbmRzIHRxe2NyZWF0ZShlLHQpe3JldHVybiB0aGlzLl9jbGllbnQucG9zdCgiL2Fzc2lzdGFudHMiLHtib2R5OmUsLi4udCxoZWFkZXJzOnsiT3BlbkFJLUJldGEiOiJhc3Npc3RhbnRzPXYyIiwuLi50Py5oZWFkZXJzfX0pfXJldHJpZXZlKGUsdCl7cmV0dXJuIHRoaXMuX2NsaWVudC5nZXQoYC9hc3Npc3RhbnRzLyR7ZX1gLHsuLi50LGhlYWRlcnM6eyJPcGVuQUktQmV0YSI6ImFzc2lzdGFudHM9djIiLC4uLnQ/LmhlYWRlcnN9fSl9dXBkYXRlKGUsdCxyKXtyZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoYC9hc3Npc3RhbnRzLyR7ZX1gLHtib2R5OnQsLi4ucixoZWFkZXJzOnsiT3BlbkFJLUJldGEiOiJhc3Npc3RhbnRzPXYyIiwuLi5yPy5oZWFkZXJzfX0pfWxpc3QoZT17fSx0KXtyZXR1cm4gdEkoZSk/dGhpcy5saXN0KHt9LGUpOnRoaXMuX2NsaWVudC5nZXRBUElMaXN0KCIvYXNzaXN0YW50cyIsclIse3F1ZXJ5OmUsLi4udCxoZWFkZXJzOnsiT3BlbkFJLUJldGEiOiJhc3Npc3RhbnRzPXYyIiwuLi50Py5oZWFkZXJzfX0pfWRlbChlLHQpe3JldHVybiB0aGlzLl9jbGllbnQuZGVsZXRlKGAvYXNzaXN0YW50cy8ke2V9YCx7Li4udCxoZWFkZXJzOnsiT3BlbkFJLUJldGEiOiJhc3Npc3RhbnRzPXYyIiwuLi50Py5oZWFkZXJzfX0pfX1jbGFzcyByUiBleHRlbmRzIHQwe31mdW5jdGlvbiByTihlKXtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgZS5wYXJzZX1yTy5Bc3Npc3RhbnRzUGFnZT1yUjtsZXQgckM9ZT0+ZT8ucm9sZT09PSJhc3Npc3RhbnQiLHJMPWU9PmU/LnJvbGU9PT0iZnVuY3Rpb24iLHJEPWU9PmU/LnJvbGU9PT0idG9vbCI7dmFyIHJCPWZ1bmN0aW9uKGUsdCxyLG4saSl7aWYoIm0iPT09bil0aHJvdyBUeXBlRXJyb3IoIlByaXZhdGUgbWV0aG9kIGlzIG5vdCB3cml0YWJsZSIpO2lmKCJhIj09PW4mJiFpKXRocm93IFR5cGVFcnJvcigiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgc2V0dGVyIik7aWYoImZ1bmN0aW9uIj09dHlwZW9mIHQ/ZSE9PXR8fCFpOiF0LmhhcyhlKSl0aHJvdyBUeXBlRXJyb3IoIkNhbm5vdCB3cml0ZSBwcml2YXRlIG1lbWJlciB0byBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0Iik7cmV0dXJuImEiPT09bj9pLmNhbGwoZSxyKTppP2kudmFsdWU9cjp0LnNldChlLHIpLHJ9LHJrPWZ1bmN0aW9uKGUsdCxyLG4pe2lmKCJhIj09PXImJiFuKXRocm93IFR5cGVFcnJvcigiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgZ2V0dGVyIik7aWYoImZ1bmN0aW9uIj09dHlwZW9mIHQ/ZSE9PXR8fCFuOiF0LmhhcyhlKSl0aHJvdyBUeXBlRXJyb3IoIkNhbm5vdCByZWFkIHByaXZhdGUgbWVtYmVyIGZyb20gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdCIpO3JldHVybiJtIj09PXI/bjoiYSI9PT1yP24uY2FsbChlKTpuP24udmFsdWU6dC5nZXQoZSl9O2NsYXNzIHJNe2NvbnN0cnVjdG9yKCl7WS5hZGQodGhpcyksdGhpcy5jb250cm9sbGVyPW5ldyBBYm9ydENvbnRyb2xsZXIsRy5zZXQodGhpcyx2b2lkIDApLFguc2V0KHRoaXMsKCk9Pnt9KSxxLnNldCh0aGlzLCgpPT57fSksSi5zZXQodGhpcyx2b2lkIDApLEsuc2V0KHRoaXMsKCk9Pnt9KSxRLnNldCh0aGlzLCgpPT57fSksZWUuc2V0KHRoaXMse30pLGV0LnNldCh0aGlzLCExKSxlci5zZXQodGhpcywhMSksZW4uc2V0KHRoaXMsITEpLGVpLnNldCh0aGlzLCExKSxyQih0aGlzLEcsbmV3IFByb21pc2UoKGUsdCk9PntyQih0aGlzLFgsZSwiZiIpLHJCKHRoaXMscSx0LCJmIil9KSwiZiIpLHJCKHRoaXMsSixuZXcgUHJvbWlzZSgoZSx0KT0+e3JCKHRoaXMsSyxlLCJmIiksckIodGhpcyxRLHQsImYiKX0pLCJmIikscmsodGhpcyxHLCJmIikuY2F0Y2goKCk9Pnt9KSxyayh0aGlzLEosImYiKS5jYXRjaCgoKT0+e30pfV9ydW4oZSl7c2V0VGltZW91dCgoKT0+e2UoKS50aGVuKCgpPT57dGhpcy5fZW1pdEZpbmFsKCksdGhpcy5fZW1pdCgiZW5kIil9LHJrKHRoaXMsWSwibSIsZXMpLmJpbmQodGhpcykpfSwwKX1fY29ubmVjdGVkKCl7dGhpcy5lbmRlZHx8KHJrKHRoaXMsWCwiZiIpLmNhbGwodGhpcyksdGhpcy5fZW1pdCgiY29ubmVjdCIpKX1nZXQgZW5kZWQoKXtyZXR1cm4gcmsodGhpcyxldCwiZiIpfWdldCBlcnJvcmVkKCl7cmV0dXJuIHJrKHRoaXMsZXIsImYiKX1nZXQgYWJvcnRlZCgpe3JldHVybiByayh0aGlzLGVuLCJmIil9YWJvcnQoKXt0aGlzLmNvbnRyb2xsZXIuYWJvcnQoKX1vbihlLHQpe3JldHVybihyayh0aGlzLGVlLCJmIilbZV18fChyayh0aGlzLGVlLCJmIilbZV09W10pKS5wdXNoKHtsaXN0ZW5lcjp0fSksdGhpc31vZmYoZSx0KXtsZXQgcj1yayh0aGlzLGVlLCJmIilbZV07aWYoIXIpcmV0dXJuIHRoaXM7bGV0IG49ci5maW5kSW5kZXgoZT0+ZS5saXN0ZW5lcj09PXQpO3JldHVybiBuPj0wJiZyLnNwbGljZShuLDEpLHRoaXN9b25jZShlLHQpe3JldHVybihyayh0aGlzLGVlLCJmIilbZV18fChyayh0aGlzLGVlLCJmIilbZV09W10pKS5wdXNoKHtsaXN0ZW5lcjp0LG9uY2U6ITB9KSx0aGlzfWVtaXR0ZWQoZSl7cmV0dXJuIG5ldyBQcm9taXNlKCh0LHIpPT57ckIodGhpcyxlaSwhMCwiZiIpLCJlcnJvciIhPT1lJiZ0aGlzLm9uY2UoImVycm9yIixyKSx0aGlzLm9uY2UoZSx0KX0pfWFzeW5jIGRvbmUoKXtyQih0aGlzLGVpLCEwLCJmIiksYXdhaXQgcmsodGhpcyxKLCJmIil9X2VtaXQoZSwuLi50KXtpZihyayh0aGlzLGV0LCJmIikpcmV0dXJuOyJlbmQiPT09ZSYmKHJCKHRoaXMsZXQsITAsImYiKSxyayh0aGlzLEssImYiKS5jYWxsKHRoaXMpKTtsZXQgcj1yayh0aGlzLGVlLCJmIilbZV07aWYociYmKHJrKHRoaXMsZWUsImYiKVtlXT1yLmZpbHRlcihlPT4hZS5vbmNlKSxyLmZvckVhY2goKHtsaXN0ZW5lcjplfSk9PmUoLi4udCkpKSwiYWJvcnQiPT09ZSl7bGV0IGU9dFswXTtyayh0aGlzLGVpLCJmIil8fHI/Lmxlbmd0aHx8UHJvbWlzZS5yZWplY3QoZSkscmsodGhpcyxxLCJmIikuY2FsbCh0aGlzLGUpLHJrKHRoaXMsUSwiZiIpLmNhbGwodGhpcyxlKSx0aGlzLl9lbWl0KCJlbmQiKTtyZXR1cm59aWYoImVycm9yIj09PWUpe2xldCBlPXRbMF07cmsodGhpcyxlaSwiZiIpfHxyPy5sZW5ndGh8fFByb21pc2UucmVqZWN0KGUpLHJrKHRoaXMscSwiZiIpLmNhbGwodGhpcyxlKSxyayh0aGlzLFEsImYiKS5jYWxsKHRoaXMsZSksdGhpcy5fZW1pdCgiZW5kIil9fV9lbWl0RmluYWwoKXt9fWZ1bmN0aW9uIHJVKGUpe3JldHVybiBlPy4kYnJhbmQ9PT0iYXV0by1wYXJzZWFibGUtcmVzcG9uc2UtZm9ybWF0In1mdW5jdGlvbiByRihlKXtyZXR1cm4gZT8uJGJyYW5kPT09ImF1dG8tcGFyc2"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "xyKSxzPVkoWCxyKTtyZXR1cm4oMCxhLmpzeCkoZC5zRy5oMyx7ImRhdGEtb3JpZW50YXRpb24iOmkub3JpZW50YXRpb24sImRhdGEtc3RhdGUiOmV0KHMub3BlbiksImRhdGEtZGlzYWJsZWQiOnMuZGlzYWJsZWQ/IiI6dm9pZCAwLC4uLm4scmVmOnR9KX0pO3EuZGlzcGxheU5hbWU9WDt2YXIgSj0iQWNjb3JkaW9uVHJpZ2dlciIsSz1uLmZvcndhcmRSZWYoKGUsdCk9PntsZXR7X19zY29wZUFjY29yZGlvbjpyLC4uLm59PWUsaT1IKEkscikscz1ZKEosciksbz1QKEosciksbD1CKHIpO3JldHVybigwLGEuanN4KShSLkl0ZW1TbG90LHtzY29wZTpyLGNoaWxkcmVuOigwLGEuanN4KSh3LHsiYXJpYS1kaXNhYmxlZCI6cy5vcGVuJiYhby5jb2xsYXBzaWJsZXx8dm9pZCAwLCJkYXRhLW9yaWVudGF0aW9uIjppLm9yaWVudGF0aW9uLGlkOnMudHJpZ2dlcklkLC4uLmwsLi4ubixyZWY6dH0pfSl9KTtLLmRpc3BsYXlOYW1lPUo7dmFyIFE9IkFjY29yZGlvbkNvbnRlbnQiLGVlPW4uZm9yd2FyZFJlZigoZSx0KT0+e2xldHtfX3Njb3BlQWNjb3JkaW9uOnIsLi4ubn09ZSxpPUgoSSxyKSxzPVkoUSxyKSxvPUIocik7cmV0dXJuKDAsYS5qc3gpKFMse3JvbGU6InJlZ2lvbiIsImFyaWEtbGFiZWxsZWRieSI6cy50cmlnZ2VySWQsImRhdGEtb3JpZW50YXRpb24iOmkub3JpZW50YXRpb24sLi4ubywuLi5uLHJlZjp0LHN0eWxlOnsiLS1yYWRpeC1hY2NvcmRpb24tY29udGVudC1oZWlnaHQiOiJ2YXIoLS1yYWRpeC1jb2xsYXBzaWJsZS1jb250ZW50LWhlaWdodCkiLCItLXJhZGl4LWFjY29yZGlvbi1jb250ZW50LXdpZHRoIjoidmFyKC0tcmFkaXgtY29sbGFwc2libGUtY29udGVudC13aWR0aCkiLC4uLmUuc3R5bGV9fSl9KTtmdW5jdGlvbiBldChlKXtyZXR1cm4gZT8ib3BlbiI6ImNsb3NlZCJ9ZWUuZGlzcGxheU5hbWU9UTt2YXIgZXI9ayxlbj1HLGVpPXEsZXM9Syxlbz1lZX0sMjgwNzQ6KGUsdCxyKT0+eyJ1c2Ugc3RyaWN0IjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksdC5Eb2NrTG9jYXRpb249dm9pZCAwO2xldCBuPXIoNDU5NzYpLGk9cigxNDc3Mik7Y2xhc3Mgc3tzdGF0aWMgZ2V0QnlOYW1lKGUpe3JldHVybiBzLnZhbHVlc1tlXX1zdGF0aWMgZ2V0TG9jYXRpb24oZSx0LHIpe2lmKHQ9KHQtZS54KS9lLndpZHRoLHI9KHItZS55KS9lLmhlaWdodCx0Pj0uMjUmJnQ8Ljc1JiZyPj0uMjUmJnI8Ljc1KXJldHVybiBzLkNFTlRFUjtsZXQgbj1yPj10LGk9cj49MS10O3JldHVybiBuP2k/cy5CT1RUT006cy5MRUZUOmk/cy5SSUdIVDpzLlRPUH1jb25zdHJ1Y3RvcihlLHQscil7dGhpcy5fbmFtZT1lLHRoaXMuX29yaWVudGF0aW9uPXQsdGhpcy5faW5kZXhQbHVzPXIscy52YWx1ZXNbdGhpcy5fbmFtZV09dGhpc31nZXROYW1lKCl7cmV0dXJuIHRoaXMuX25hbWV9Z2V0T3JpZW50YXRpb24oKXtyZXR1cm4gdGhpcy5fb3JpZW50YXRpb259Z2V0RG9ja1JlY3QoZSl7cmV0dXJuIHRoaXM9PT1zLlRPUD9uZXcgaS5SZWN0KGUueCxlLnksZS53aWR0aCxlLmhlaWdodC8yKTp0aGlzPT09cy5CT1RUT00/bmV3IGkuUmVjdChlLngsZS5nZXRCb3R0b20oKS1lLmhlaWdodC8yLGUud2lkdGgsZS5oZWlnaHQvMik6dGhpcz09PXMuTEVGVD9uZXcgaS5SZWN0KGUueCxlLnksZS53aWR0aC8yLGUuaGVpZ2h0KTp0aGlzPT09cy5SSUdIVD9uZXcgaS5SZWN0KGUuZ2V0UmlnaHQoKS1lLndpZHRoLzIsZS55LGUud2lkdGgvMixlLmhlaWdodCk6ZS5jbG9uZSgpfXNwbGl0KGUsdCl7cmV0dXJuIHRoaXM9PT1zLlRPUD97c3RhcnQ6bmV3IGkuUmVjdChlLngsZS55LGUud2lkdGgsdCksZW5kOm5ldyBpLlJlY3QoZS54LGUueSt0LGUud2lkdGgsZS5oZWlnaHQtdCl9OnRoaXM9PT1zLkxFRlQ/e3N0YXJ0Om5ldyBpLlJlY3QoZS54LGUueSx0LGUuaGVpZ2h0KSxlbmQ6bmV3IGkuUmVjdChlLngrdCxlLnksZS53aWR0aC10LGUuaGVpZ2h0KX06dGhpcz09PXMuUklHSFQ/e3N0YXJ0Om5ldyBpLlJlY3QoZS5nZXRSaWdodCgpLXQsZS55LHQsZS5oZWlnaHQpLGVuZDpuZXcgaS5SZWN0KGUueCxlLnksZS53aWR0aC10LGUuaGVpZ2h0KX06e3N0YXJ0Om5ldyBpLlJlY3QoZS54LGUuZ2V0Qm90dG9tKCktdCxlLndpZHRoLHQpLGVuZDpuZXcgaS5SZWN0KGUueCxlLnksZS53aWR0aCxlLmhlaWdodC10KX19cmVmbGVjdCgpe3JldHVybiB0aGlzPT09cy5UT1A/cy5CT1RUT006dGhpcz09PXMuTEVGVD9zLlJJR0hUOnRoaXM9PT1zLlJJR0hUP3MuTEVGVDpzLlRPUH10b1N0cmluZygpe3JldHVybiIoRG9ja0xvY2F0aW9uOiBuYW1lPSIrdGhpcy5fbmFtZSsiLCBvcmllbnRhdGlvbj0iK3RoaXMuX29yaWVudGF0aW9uKyIpIn19dC5Eb2NrTG9jYXRpb249cyxzLnZhbHVlcz17fSxzLlRPUD1uZXcgcygidG9wIixuLk9yaWVudGF0aW9uLlZFUlQsMCkscy5CT1RUT009bmV3IHMoImJvdHRvbSIsbi5PcmllbnRhdGlvbi5WRVJULDEpLHMuTEVGVD1uZXcgcygibGVmdCIsbi5PcmllbnRhdGlvbi5IT1JaLDApLHMuUklHSFQ9bmV3IHMoInJpZ2h0IixuLk9yaWVudGF0aW9uLkhPUlosMSkscy5DRU5URVI9bmV3IHMoImNlbnRlciIsbi5PcmllbnRhdGlvbi5WRVJULDApfSwyODI2MDooZSx0LHIpPT57InVzZSBzdHJpY3QiO3IuZCh0LHtBOigpPT5ufSk7bGV0IG49KDAscig2MTU2MSkuQSkoIlN0YXIiLFtbInBvbHlnb24iLHtwb2ludHM6IjEyIDIgMTUuMDkgOC4yNiAyMiA5LjI3IDE3IDE0LjE0IDE4LjE4IDIxLjAyIDEyIDE3Ljc3IDUuODIgMjEuMDIgNyAxNC4xNCAyIDkuMjcgOC45MSA4LjI2IDEyIDIiLGtleToiOGY2NnA2In1dXSl9LDMwMzM4OihlLHQscik9PnsidXNlIHN0cmljdCI7dmFyIG47ci5kKHQse2E6KCk9Pm59KSxmdW5jdGlvbihlKXtlW2UuWUVBUl9NT05USD0wXT0iWUVBUl9NT05USCIsZVtlLkRBWV9USU1FPTFdPSJEQVlfVElNRSIsZVtlLk1PTlRIX0RBWV9OQU5PPTJdPSJNT05USF9EQVlfTkFOTyJ9KG58fChuPXt9KSl9LDMwNTA1OihlLHQscik9PnsidXNlIHN0cmljdCI7ci5kKHQse0E6KCk9Pm59KTtsZXQgbj0oMCxyKDYxNTYxKS5BKSgiQnJhY2tldHMiLFtbInBhdGgiLHtkOiJNMTYgM2gzdjE4aC0zIixrZXk6IjF5b3IxZiJ9XSxbInBhdGgiLHtkOiJNOCAyMUg1VjNoMyIsa2V5OiIxcXJmd28ifV1dKX0sMzEwNTk6KGUsdCxyKT0+eyJ1c2Ugc3RyaWN0IjtyLmQodCx7S3E6KCk9PiQsVUM6KCk9PlYsWkw6KCk9PlcsYkw6KCk9PkgsbDk6KCk9Plp9KTt2YXIgbj1yKDYwOTY3KSxpPXIoNjI1NjkpLHM9cigyNjUxNyksbz1yKDU2MjEzKSxhPXIoMTk2NCksbD1yKDY3ODMwKSx1PXIoMzQ0NSksZD1yKDQyNjApLGM9cigxNzkxMiksaD1yKDQ4NDUpLHA9cigxMTI3NyksZj1yKDE3ODk4KSxtPXIoOTM5OSksZz1yKDc2NDk1KSxbeSxiXT0oMCxvLkEpKCJUb29sdGlwIixbdS5Ca10pLF89KDAsdS5CaykoKSx2PSJUb29sdGlwUHJvdmlkZXIiLHc9InRvb2x0aXAub3BlbiIsW1QsU109eSh2KSxFPWU9PntsZXR7X19zY29wZVRvb2x0aXA6dCxkZWxheUR1cmF0aW9uOnI9NzAwLHNraXBEZWxheUR1cmF0aW9uOmk9MzAwLGRpc2FibGVIb3ZlcmFibGVDb250ZW50OnM9ITEsY2hpbGRyZW46b309ZSxbYSxsXT1uLnVzZVN0YXRlKCEwKSx1PW4udXNlUmVmKCExKSxkPW4udXNlUmVmKDApO3JldHVybiBuLnVzZUVmZmVjdCgoKT0+e2xldCBlPWQuY3VycmVudDtyZXR1cm4oKT0+d2luZG93LmNsZWFyVGltZW91dChlKX0sW10pLCgwLGcuanN4KShULHtzY29wZTp0LGlzT3BlbkRlbGF5ZWQ6YSxkZWxheUR1cmF0aW9uOnIsb25PcGVuOm4udXNlQ2FsbGJhY2soKCk9Pnt3aW5kb3cuY2xlYXJUaW1lb3V0KGQuY3VycmVudCksbCghMSl9LFtdKSxvbkNsb3NlOm4udXNlQ2FsbGJhY2soKCk9Pnt3aW5kb3cuY2xlYXJUaW1lb3V0KGQuY3VycmVudCksZC5jdXJyZW50PXdpbmRvdy5zZXRUaW1lb3V0KCgpPT5sKCEwKSxpKX0sW2ldKSxpc1BvaW50ZXJJblRyYW5zaXRSZWY6dSxvblBvaW50ZXJJblRyYW5zaXRDaGFuZ2U6bi51c2VDYWxsYmFjayhlPT57dS5jdXJyZW50PWV9LFtdKSxkaXNhYmxlSG92ZXJhYmxlQ29udGVudDpzLGNoaWxkcmVuOm99KX07RS5kaXNwbGF5TmFtZT12O3ZhciB4PSJUb29sdGlwIixbQSxJXT15KHgpLE89ZT0+e2xldHtfX3Njb3BlVG9vbHRpcDp0LGNoaWxkcmVuOnIsb3BlbjppLGRlZmF1bHRPcGVuOnM9ITEsb25PcGVuQ2hhbmdlOm8sZGlzYWJsZUhvdmVyYWJsZUNvbnRlbnQ6YSxkZWxheUR1cmF0aW9uOmR9PWUsYz1TKHgsZS5fX3Njb3BlVG9vbHRpcCksaD1fKHQpLFtwLG1dPW4udXNlU3RhdGUobnVsbCkseT0oMCxsLkIpKCksYj1uLnVzZVJlZigwKSx2PW51bGwhPWE/YTpjLmRpc2FibGVIb3ZlcmFibGVDb250ZW50LFQ9bnVsbCE9ZD9kOmMuZGVsYXlEdXJhdGlvbixFPW4udXNlUmVmKCExKSxbST0hMSxPXT0oMCxmLmkpKHtwcm9wOmksZGVmYXVsdFByb3A6cyxvbkNoYW5nZTplPT57ZT8oYy5vbk9wZW4oKSxkb2N1bWVudC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCh3KSkpOmMub25DbG9zZSgpLG51bGw9PW98fG8oZSl9fSksUj1uLnVzZU1lbW8oKCk9Pkk/RS5jdXJyZW50PyJkZWxheWVkLW9wZW4iOiJpbnN0YW50LW9wZW4iOiJjbG9zZWQiLFtJXSksTj1uLnVzZUNhbGxiYWNrKCgpPT57d2luZG93LmNsZWFyVGltZW91dChiLmN1cnJlbnQpLGIuY3VycmVudD0wLEUuY3VycmVudD0hMSxPKCEwKX0sW09dKSxDPW4udXNlQ2FsbGJhY2soKCk9Pnt3aW5kb3cuY2xlYXJUaW1lb3V0KGIuY3VycmVudCksYi5jdXJyZW50PTAsTyghMSl9LFtPXSksTD1uLnVzZUNhbGxiYWNrKCgpPT57d2luZG93LmNsZWFyVGltZW91dChiLmN1cnJlbnQpLGIuY3VycmVudD13aW5kb3cuc2V0VGltZW91dCgoKT0+e0UuY3VycmVudD0hMCxPKCEwKSxiLmN1cnJlbnQ9MH0sVCl9LFtULE9dKTtyZXR1cm4gbi51c2VFZmZlY3QoKCk9PigpPT57Yi5jdXJyZW50JiYod2luZG93LmNsZWFyVGltZW91dChiLmN1cnJlbnQpLGIuY3VycmVudD0wKX0sW10pLCgwLGcuanN4KSh1LmJMLHsuLi5oLGNoaWxkcmVuOigwLGcuanN4KShBLHtzY29wZTp0LGNvbnRlbnRJZDp5LG9wZW46SSxzdGF0ZUF0dHJpYnV0ZTpSLHRyaWdnZXI6cCxvblRyaWdnZXJDaGFuZ2U6bSxvblRyaWdnZXJFbnRlcjpuLnVzZUNhbGxiYWNrKCgpPT57Yy5pc09wZW5EZWxheWVkP0woKTpOKCl9LFtjLmlzT3BlbkRlbGF5ZWQsTCxOXSksb25UcmlnZ2VyTGVhdmU6bi51c2VDYWxsYmFjaygoKT0+e3Y/QygpOih3aW5kb3cuY2xlYXJUaW1lb3V0KGIuY3VycmVudCksYi5jdXJyZW50PTApfSxbQyx2XSksb25PcGVuOk4sb25DbG9zZTpDLGRpc2FibGVIb3ZlcmFibGVDb250ZW50OnYsY2hpbGRyZW46cn0pfSl9O08uZGlzcGxheU5hbWU9eDt2YXIgUj0iVG9vbHRpcFRyaWdnZXIiLE49bi5mb3J3YXJkUmVmKChlLHQpPT57bGV0e19fc2NvcGVUb29sdGlwOnIsLi4ub309ZSxhPUkoUixyKSxsPVMoUixyKSxkPV8ociksYz1uLnVzZVJlZihudWxsKSxwPSgwLHMucykodCxjLGEub25UcmlnZ2VyQ2hhbmdlKSxmPW4udXNlUmVmKCExKSxtPW4udXNlUmVmKCExKSx5PW4udXNlQ2FsbGJhY2soKCk9PmYuY3VycmVudD0hMSxbXSk7cmV0dXJuIG4udXNlRWZmZWN0KCgpPT4oKT0+ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigicG9pbnRlcnVwIix5KSxbeV0pLCgwLGcuanN4KSh1Lk16LHthc0NoaWxkOiEwLC4uLmQsY2hpbGRyZW46KDAsZy5qc3gpKGguc0cuYnV0dG9uLHsiYXJpYS1kZXNjcmliZWRieSI6YS5vcGVuP2EuY29udGVudElkOnZvaWQgMCwiZGF0YS1zdGF0ZSI6YS5zdGF0ZUF0dHJpYnV0ZSwuLi5vLHJlZjpwLG9uUG9pbnRlck1vdmU6KDAsaS5tKShlLm9uUG9pbnRlck1vdmUsZT0+eyJ0b3VjaCI9PT1lLnBvaW50ZXJUeXBlfHxtLmN1cnJlbnR8fGwuaXNQb2ludGVySW5UcmFuc2l0UmVmLmN1cnJlbnR8fChhLm9uVHJpZ2dlckVudGVyKCksbS5jdXJyZW50PSEwKX0pLG9uUG9pbnRlckxlYXZlOigwLGkubSkoZS5vblBvaW50ZXJMZWF2ZSwoKT0+e2Eub25UcmlnZ2VyTGVhdmUoKSxtLmN1cnJlbnQ9ITF9KSxvblBvaW50ZXJEb3duOigwLGkubSkoZS5vblBvaW50ZXJEb3duLCgpPT57Zi5jdXJyZW50PSEwLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoInBvaW50ZXJ1cCIseSx7b25jZTohMH0pfSksb25Gb2N1czooMCxpLm0pKGUub25Gb2N1"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "UgbC5BY3Rpb25zLlNFVF9BQ1RJVkVfVEFCU0VUOmlmKHZvaWQgMD09PWUuZGF0YS50YWJzZXROb2RlKXRoaXMuX2FjdGl2ZVRhYlNldD12b2lkIDA7ZWxzZXtsZXQgdD10aGlzLl9pZE1hcFtlLmRhdGEudGFic2V0Tm9kZV07dCBpbnN0YW5jZW9mIHAuVGFiU2V0Tm9kZSYmKHRoaXMuX2FjdGl2ZVRhYlNldD10KX1icmVhaztjYXNlIGwuQWN0aW9ucy5BREpVU1RfU1BMSVQ6e2xldCB0PXRoaXMuX2lkTWFwW2UuZGF0YS5ub2RlMV0scj10aGlzLl9pZE1hcFtlLmRhdGEubm9kZTJdOyh0IGluc3RhbmNlb2YgcC5UYWJTZXROb2RlfHx0IGluc3RhbmNlb2YgYy5Sb3dOb2RlKSYmKHIgaW5zdGFuY2VvZiBwLlRhYlNldE5vZGV8fHIgaW5zdGFuY2VvZiBjLlJvd05vZGUpJiYodGhpcy5fYWRqdXN0U3BsaXRTaWRlKHQsZS5kYXRhLndlaWdodDEsZS5kYXRhLnBpeGVsV2lkdGgxKSx0aGlzLl9hZGp1c3RTcGxpdFNpZGUocixlLmRhdGEud2VpZ2h0MixlLmRhdGEucGl4ZWxXaWR0aDIpKTticmVha31jYXNlIGwuQWN0aW9ucy5BREpVU1RfQk9SREVSX1NQTElUOntsZXQgdD10aGlzLl9pZE1hcFtlLmRhdGEubm9kZV07dCBpbnN0YW5jZW9mIHUuQm9yZGVyTm9kZSYmdC5fc2V0U2l6ZShlLmRhdGEucG9zKTticmVha31jYXNlIGwuQWN0aW9ucy5NQVhJTUlaRV9UT0dHTEU6e2xldCB0PXRoaXMuX2lkTWFwW2UuZGF0YS5ub2RlXTt0IGluc3RhbmNlb2YgcC5UYWJTZXROb2RlJiYodD09PXRoaXMuX21heGltaXplZFRhYlNldD90aGlzLl9tYXhpbWl6ZWRUYWJTZXQ9dm9pZCAwOih0aGlzLl9tYXhpbWl6ZWRUYWJTZXQ9dCx0aGlzLl9hY3RpdmVUYWJTZXQ9dCkpO2JyZWFrfWNhc2UgbC5BY3Rpb25zLlVQREFURV9NT0RFTF9BVFRSSUJVVEVTOnRoaXMuX3VwZGF0ZUF0dHJzKGUuZGF0YS5qc29uKTticmVhaztjYXNlIGwuQWN0aW9ucy5VUERBVEVfTk9ERV9BVFRSSUJVVEVTOnRoaXMuX2lkTWFwW2UuZGF0YS5ub2RlXS5fdXBkYXRlQXR0cnMoZS5kYXRhLmpzb24pfXJldHVybiB0aGlzLl91cGRhdGVJZE1hcCgpLHZvaWQgMCE9PXRoaXMuX2NoYW5nZUxpc3RlbmVyJiZ0aGlzLl9jaGFuZ2VMaXN0ZW5lcihlKSx0fV91cGRhdGVJZE1hcCgpe3RoaXMuX2lkTWFwPXt9LHRoaXMudmlzaXROb2RlcyhlPT50aGlzLl9pZE1hcFtlLmdldElkKCldPWUpfV9hZGp1c3RTcGxpdFNpZGUoZSx0LHIpe2UuX3NldFdlaWdodCh0KSxudWxsIT1lLmdldFdpZHRoKCkmJmUuZ2V0T3JpZW50YXRpb24oKT09PW8uT3JpZW50YXRpb24uVkVSVD9lLl91cGRhdGVBdHRycyh7d2lkdGg6cn0pOm51bGwhPWUuZ2V0SGVpZ2h0KCkmJmUuZ2V0T3JpZW50YXRpb24oKT09PW8uT3JpZW50YXRpb24uSE9SWiYmZS5fdXBkYXRlQXR0cnMoe2hlaWdodDpyfSl9dG9Kc29uKCl7bGV0IGU9e307cmV0dXJuIG0uX2F0dHJpYnV0ZURlZmluaXRpb25zLnRvSnNvbihlLHRoaXMuX2F0dHJpYnV0ZXMpLHRoaXMudmlzaXROb2RlcyhlPT57ZS5fZmlyZUV2ZW50KCJzYXZlIix2b2lkIDApfSkse2dsb2JhbDplLGJvcmRlcnM6dGhpcy5fYm9yZGVycy5fdG9Kc29uKCksbGF5b3V0OnRoaXMuX3Jvb3QudG9Kc29uKCl9fWdldFNwbGl0dGVyU2l6ZSgpe2xldCBlPXRoaXMuX2F0dHJpYnV0ZXMuc3BsaXR0ZXJTaXplO3JldHVybiAtMT09PWUmJihlPXRoaXMuX3BvaW50ZXJGaW5lPzg6MTIpLGV9aXNMZWdhY3lPdmVyZmxvd01lbnUoKXtyZXR1cm4gdGhpcy5fYXR0cmlidXRlcy5sZWdhY3lPdmVyZmxvd01lbnV9Z2V0U3BsaXR0ZXJFeHRyYSgpe3JldHVybiB0aGlzLl9hdHRyaWJ1dGVzLnNwbGl0dGVyRXh0cmF9aXNFbmFibGVFZGdlRG9jaygpe3JldHVybiB0aGlzLl9hdHRyaWJ1dGVzLmVuYWJsZUVkZ2VEb2NrfV9hZGROb2RlKGUpe2xldCB0PWUuZ2V0SWQoKTtpZih2b2lkIDAhPT10aGlzLl9pZE1hcFt0XSl0aHJvdyBFcnJvcihgRXJyb3I6IGVhY2ggbm9kZSBtdXN0IGhhdmUgYSB1bmlxdWUgaWQsIGR1cGxpY2F0ZSBpZDoke2UuZ2V0SWQoKX1gKTsic3BsaXR0ZXIiIT09ZS5nZXRUeXBlKCkmJih0aGlzLl9pZE1hcFt0XT1lKX1fbGF5b3V0KGUsdCl7dmFyIHI7cmV0dXJuIHRoaXMuX2JvcmRlclJlY3RzPXRoaXMuX2JvcmRlcnMuX2xheW91dEJvcmRlcih7b3V0ZXI6ZSxpbm5lcjplfSx0KSxlPXRoaXMuX2JvcmRlclJlY3RzLmlubmVyLnJlbW92ZUluc2V0cyh0aGlzLl9nZXRBdHRyaWJ1dGUoIm1hcmdpbkluc2V0cyIpKSxudWxsPT09KHI9dGhpcy5fcm9vdCl8fHZvaWQgMD09PXJ8fHIuY2FsY01pblNpemUoKSx0aGlzLl9yb290Ll9sYXlvdXQoZSx0KSxlfV9maW5kRHJvcFRhcmdldE5vZGUoZSx0LHIpe2xldCBuPXRoaXMuX3Jvb3QuX2ZpbmREcm9wVGFyZ2V0Tm9kZShlLHQscik7cmV0dXJuIHZvaWQgMD09PW4mJihuPXRoaXMuX2JvcmRlcnMuX2ZpbmREcm9wVGFyZ2V0Tm9kZShlLHQscikpLG59X3RpZHkoKXt0aGlzLl9yb290Ll90aWR5KCl9X3VwZGF0ZUF0dHJzKGUpe20uX2F0dHJpYnV0ZURlZmluaXRpb25zLnVwZGF0ZShlLHRoaXMuX2F0dHJpYnV0ZXMpfV9uZXh0VW5pcXVlSWQoKXtyZXR1cm4iIyIrKDAsZi5yYW5kb21VVUlEKSgpfV9nZXRBdHRyaWJ1dGUoZSl7cmV0dXJuIHRoaXMuX2F0dHJpYnV0ZXNbZV19c2V0T25BbGxvd0Ryb3AoZSl7dGhpcy5fb25BbGxvd0Ryb3A9ZX1fZ2V0T25BbGxvd0Ryb3AoKXtyZXR1cm4gdGhpcy5fb25BbGxvd0Ryb3B9c2V0T25DcmVhdGVUYWJTZXQoZSl7dGhpcy5fb25DcmVhdGVUYWJTZXQ9ZX1fZ2V0T25DcmVhdGVUYWJTZXQoKXtyZXR1cm4gdGhpcy5fb25DcmVhdGVUYWJTZXR9c3RhdGljIHRvVHlwZXNjcmlwdEludGVyZmFjZXMoKXtjb25zb2xlLmxvZyhtLl9hdHRyaWJ1dGVEZWZpbml0aW9ucy50b1R5cGVzY3JpcHRJbnRlcmZhY2UoIkdsb2JhbCIsdm9pZCAwKSksY29uc29sZS5sb2coYy5Sb3dOb2RlLmdldEF0dHJpYnV0ZURlZmluaXRpb25zKCkudG9UeXBlc2NyaXB0SW50ZXJmYWNlKCJSb3ciLG0uX2F0dHJpYnV0ZURlZmluaXRpb25zKSksY29uc29sZS5sb2cocC5UYWJTZXROb2RlLmdldEF0dHJpYnV0ZURlZmluaXRpb25zKCkudG9UeXBlc2NyaXB0SW50ZXJmYWNlKCJUYWJTZXQiLG0uX2F0dHJpYnV0ZURlZmluaXRpb25zKSksY29uc29sZS5sb2coaC5UYWJOb2RlLmdldEF0dHJpYnV0ZURlZmluaXRpb25zKCkudG9UeXBlc2NyaXB0SW50ZXJmYWNlKCJUYWIiLG0uX2F0dHJpYnV0ZURlZmluaXRpb25zKSksY29uc29sZS5sb2codS5Cb3JkZXJOb2RlLmdldEF0dHJpYnV0ZURlZmluaXRpb25zKCkudG9UeXBlc2NyaXB0SW50ZXJmYWNlKCJCb3JkZXIiLG0uX2F0dHJpYnV0ZURlZmluaXRpb25zKSl9dG9TdHJpbmcoKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkodGhpcy50b0pzb24oKSl9fXQuTW9kZWw9bSxtLl9hdHRyaWJ1dGVEZWZpbml0aW9ucz1tLl9jcmVhdGVBdHRyaWJ1dGVEZWZpbml0aW9ucygpfSw1NDI1MDooZSx0LHIpPT57InVzZSBzdHJpY3QiO3IuZCh0LHtBOigpPT5ufSk7bGV0IG49KDAscig2MTU2MSkuQSkoIkNoZXZyb25Eb3duIixbWyJwYXRoIix7ZDoibTYgOSA2IDYgNi02IixrZXk6InFydW5zbCJ9XV0pfSw1NDM2NjooZSx0LHIpPT57InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSx0LkxheW91dD12b2lkIDA7bGV0IG49cig2MDk2NyksaT1yKDcyODcwKSxzPXIoMjgwNzQpLG89cig3MzQ3MyksYT1yKDIxNDgzKSxsPXIoOTEyMiksdT1yKDY5ODE1KSxkPXIoMjQwNzUpLGM9cigxMjc5NyksaD1yKDE0NzcyKSxwPXIoMzk4MjMpLGY9cigxNTI1OSksbT1yKDk1MTM5KSxnPXIoMTQ5NTEpLHk9cig1NDUyMSksYj1yKDkwODYyKSxfPXIoOTA5MDkpLHY9cig0OTg0MSksdz1yKDQ1OTc2KSxUPXIoOTczMTApLFM9cigyNTQzMCksRT17Y2xvc2U6bi5jcmVhdGVFbGVtZW50KFQuQ2xvc2VJY29uLG51bGwpLGNsb3NlVGFic2V0Om4uY3JlYXRlRWxlbWVudChULkNsb3NlSWNvbixudWxsKSxwb3BvdXQ6bi5jcmVhdGVFbGVtZW50KFQuUG9wb3V0SWNvbixudWxsKSxtYXhpbWl6ZTpuLmNyZWF0ZUVsZW1lbnQoVC5NYXhpbWl6ZUljb24sbnVsbCkscmVzdG9yZTpuLmNyZWF0ZUVsZW1lbnQoVC5SZXN0b3JlSWNvbixudWxsKSxtb3JlOm4uY3JlYXRlRWxlbWVudChULk92ZXJmbG93SWNvbixudWxsKSxlZGdlQXJyb3c6bi5jcmVhdGVFbGVtZW50KFQuRWRnZUljb24sbnVsbCl9LHg9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cmJih3aW5kb3cuZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHwvRWRnZVwvLy50ZXN0KHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50KSksQT0idW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdyYmd2luZG93Lm1hdGNoTWVkaWEmJndpbmRvdy5tYXRjaE1lZGlhKCIoaG92ZXI6IGhvdmVyKSBhbmQgKHBvaW50ZXI6IGZpbmUpIikubWF0Y2hlcyYmIXg7Y2xhc3MgSSBleHRlbmRzIG4uQ29tcG9uZW50e2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUpLHRoaXMuZmlyc3RNb3ZlPSExLHRoaXMuZHJhZ1JlY3RSZW5kZXJlZD0hMCx0aGlzLmRyYWdEaXZUZXh0PXZvaWQgMCx0aGlzLmVkZ2VSZWN0TGVuZ3RoPTEwMCx0aGlzLmVkZ2VSZWN0V2lkdGg9MTAsdGhpcy5vbk1vZGVsQ2hhbmdlPWU9Pnt0aGlzLmZvcmNlVXBkYXRlKCksdGhpcy5wcm9wcy5vbk1vZGVsQ2hhbmdlJiZ0aGlzLnByb3BzLm9uTW9kZWxDaGFuZ2UodGhpcy5wcm9wcy5tb2RlbCxlKX0sdGhpcy51cGRhdGVSZWN0PWU9PntpZihlfHwoZT10aGlzLmdldERvbVJlY3QoKSksIWUpcmV0dXJuO2xldCB0PW5ldyBoLlJlY3QoMCwwLGUud2lkdGgsZS5oZWlnaHQpO3QuZXF1YWxzKHRoaXMuc3RhdGUucmVjdCl8fDA9PT10LndpZHRofHwwPT09dC5oZWlnaHR8fHRoaXMuc2V0U3RhdGUoe3JlY3Q6dH0pfSx0aGlzLnVwZGF0ZUxheW91dE1ldHJpY3M9KCk9PntpZih0aGlzLmZpbmRIZWFkZXJCYXJTaXplUmVmLmN1cnJlbnQpe2xldCBlPXRoaXMuZmluZEhlYWRlckJhclNpemVSZWYuY3VycmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ7ZSE9PXRoaXMuc3RhdGUuY2FsY3VsYXRlZEhlYWRlckJhclNpemUmJnRoaXMuc2V0U3RhdGUoe2NhbGN1bGF0ZWRIZWFkZXJCYXJTaXplOmV9KX1pZih0aGlzLmZpbmRUYWJCYXJTaXplUmVmLmN1cnJlbnQpe2xldCBlPXRoaXMuZmluZFRhYkJhclNpemVSZWYuY3VycmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ7ZSE9PXRoaXMuc3RhdGUuY2FsY3VsYXRlZFRhYkJhclNpemUmJnRoaXMuc2V0U3RhdGUoe2NhbGN1bGF0ZWRUYWJCYXJTaXplOmV9KX1pZih0aGlzLmZpbmRCb3JkZXJCYXJTaXplUmVmLmN1cnJlbnQpe2xldCBlPXRoaXMuZmluZEJvcmRlckJhclNpemVSZWYuY3VycmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ7ZSE9PXRoaXMuc3RhdGUuY2FsY3VsYXRlZEJvcmRlckJhclNpemUmJnRoaXMuc2V0U3RhdGUoe2NhbGN1bGF0ZWRCb3JkZXJCYXJTaXplOmV9KX19LHRoaXMuZ2V0Q2xhc3NOYW1lPWU9PnZvaWQgMD09PXRoaXMucHJvcHMuY2xhc3NOYW1lTWFwcGVyP2U6dGhpcy5wcm9wcy5jbGFzc05hbWVNYXBwZXIoZSksdGhpcy5vbkNsb3NlV2luZG93PWU9Pnt0aGlzLmRvQWN0aW9uKGEuQWN0aW9ucy51bkZsb2F0VGFiKGUpKTt0cnl7dGhpcy5wcm9wcy5tb2RlbC5nZXROb2RlQnlJZChlKS5fc2V0V2luZG93KHZvaWQgMCl9Y2F0Y2goZSl7fX0sdGhpcy5vblNldFdpbmRvdz0oZSx0KT0+e3RoaXMucHJvcHMubW9kZWwuZ2V0Tm9kZUJ5SWQoZSkuX3NldFdpbmRvdyh0KX0sdGhpcy5vbkNhbmNlbEFkZD0oKT0+e3ZhciBlLHQ7bGV0IHI9dGhpcy5zZWxmUmVmLmN1cnJlbnQ7ciYmdGhpcy5kcmFnRGl2JiZyLnJlbW92ZUNoaWxkKHRoaXMuZHJhZ0RpdiksdGhpcy5kcmFnRGl2PXZvaWQgMCx0aGlzLmhpZGVQb3J0YWwoKSxudWxsIT10aGlzLmZuTmV3Tm9kZURyb3BwZWQmJih0aGlzLmZuTmV3Tm9kZURyb3BwZWQoKSx0aGlzLmZuTmV3Tm9kZURyb3BwZWQ9dm9pZCAwKTt0cnl7bnVsbD09PSh0PW51bGw9PT0oZT10aGlzLmN1c3RvbURyb3ApfHx2b2lkIDA9PT1lP3ZvaWQgMDplLmludmFsaWRhdGVkKXx8dm9pZCAwPT09dHx8dC5jYWxsKGUpfWNhdGNoKGUpe2NvbnNvbGUuZXJyb3IoZSl9by5EcmFnRHJvcC5pbnN0YW5jZS5oaWRlR2xhc3MoKSx0aGlzLm5ld1RhYkpzb249dm9pZCAwLHRoaXMuY3VzdG9t"
     ""
     ""
     ""
     ""
     ""
     "R1cm4gdTtpZih2b2lkIDAhPT1zKXJldHVybiBzO3Rocm93IEVycm9yKGBcYCR7cn1cYCBtdXN0IGJlIHVzZWQgd2l0aGluIFxgJHt0fVxgYCl9XX0sZnVuY3Rpb24oLi4uZSl7bGV0IHQ9ZVswXTtpZigxPT09ZS5sZW5ndGgpcmV0dXJuIHQ7bGV0IHI9KCk9PntsZXQgcj1lLm1hcChlPT4oe3VzZVNjb3BlOmUoKSxzY29wZU5hbWU6ZS5zY29wZU5hbWV9KSk7cmV0dXJuIGZ1bmN0aW9uKGUpe2xldCBpPXIucmVkdWNlKCh0LHt1c2VTY29wZTpyLHNjb3BlTmFtZTpufSk9PntsZXQgaT1yKGUpW2BfX3Njb3BlJHtufWBdO3JldHVybnsuLi50LC4uLml9fSx7fSk7cmV0dXJuIG4udXNlTWVtbygoKT0+KHtbYF9fc2NvcGUke3Quc2NvcGVOYW1lfWBdOml9KSxbaV0pfX07cmV0dXJuIHIuc2NvcGVOYW1lPXQuc2NvcGVOYW1lLHJ9KHMsLi4udCldfX0sNTc2NTQ6KGUsdCxyKT0+eyJ1c2Ugc3RyaWN0IjtyLmQodCx7RTk6KCk9PnMsTWk6KCk9Pm4scE46KCk9PmkseGk6KCk9Pm99KTt2YXIgbj0icmlnaHQtc2Nyb2xsLWJhci1wb3NpdGlvbiIsaT0id2lkdGgtYmVmb3JlLXNjcm9sbC1iYXIiLHM9IndpdGgtc2Nyb2xsLWJhcnMtaGlkZGVuIixvPSItLXJlbW92ZWQtYm9keS1zY3JvbGwtYmFyLXNpemUifSw1OTg5MzooZSx0LHIpPT57InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSx0LnJhbmRvbVVVSUQ9dC5hZGp1c3RTZWxlY3RlZEluZGV4PXQuYWRqdXN0U2VsZWN0ZWRJbmRleEFmdGVyRG9jaz10LmFkanVzdFNlbGVjdGVkSW5kZXhBZnRlckZsb2F0PXZvaWQgMDtsZXQgbj1yKDEyNzk3KSxpPXIoOTEyMik7dC5hZGp1c3RTZWxlY3RlZEluZGV4QWZ0ZXJGbG9hdD1mdW5jdGlvbihlKXtsZXQgdD1lLmdldFBhcmVudCgpO2lmKG51bGwhPT10KXtpZih0IGluc3RhbmNlb2Ygbi5UYWJTZXROb2RlKXtsZXQgcj0hMSxuPTAsaT10LmdldENoaWxkcmVuKCk7Zm9yKGxldCB0PTA7dDxpLmxlbmd0aDt0Kyspe2xldCBzPWlbdF07aWYocz09PWUpcj0hMDtlbHNlIGlmKCFzLmlzRmxvYXRpbmcoKSYmKG49dCxyKSlicmVha310Ll9zZXRTZWxlY3RlZChuKX1lbHNlIHQgaW5zdGFuY2VvZiBpLkJvcmRlck5vZGUmJnQuX3NldFNlbGVjdGVkKC0xKX19LHQuYWRqdXN0U2VsZWN0ZWRJbmRleEFmdGVyRG9jaz1mdW5jdGlvbihlKXtsZXQgdD1lLmdldFBhcmVudCgpO2lmKG51bGwhPT10JiYodCBpbnN0YW5jZW9mIG4uVGFiU2V0Tm9kZXx8dCBpbnN0YW5jZW9mIGkuQm9yZGVyTm9kZSkpe2xldCByPXQuZ2V0Q2hpbGRyZW4oKTtmb3IobGV0IG49MDtuPHIubGVuZ3RoO24rKylpZihyW25dPT09ZSl7dC5fc2V0U2VsZWN0ZWQobik7cmV0dXJufX19LHQuYWRqdXN0U2VsZWN0ZWRJbmRleD1mdW5jdGlvbihlLHQpe2lmKHZvaWQgMCE9PWUmJihlLmdldFR5cGUoKT09PW4uVGFiU2V0Tm9kZS5UWVBFfHxlLmdldFR5cGUoKT09PWkuQm9yZGVyTm9kZS5UWVBFKSl7bGV0IHI9ZS5nZXRTZWxlY3RlZCgpOy0xIT09ciYmKHQ9PT1yJiZlLmdldENoaWxkcmVuKCkubGVuZ3RoPjA/dD49ZS5nZXRDaGlsZHJlbigpLmxlbmd0aCYmZS5fc2V0U2VsZWN0ZWQoZS5nZXRDaGlsZHJlbigpLmxlbmd0aC0xKTp0PHI/ZS5fc2V0U2VsZWN0ZWQoci0xKTp0PnJ8fGUuX3NldFNlbGVjdGVkKC0xKSl9fSx0LnJhbmRvbVVVSUQ9ZnVuY3Rpb24oKXtyZXR1cm4iMTAwMDAwMDAtMTAwMC00MDAwLTgwMDAtMTAwMDAwMDAwMDAwIi5yZXBsYWNlKC9bMDE4XS9nLGU9PihlXmNyeXB0by5nZXRSYW5kb21WYWx1ZXMobmV3IFVpbnQ4QXJyYXkoMSkpWzBdJjE1Pj5lLzQpLnRvU3RyaW5nKDE2KSl9fSw2MDI3MjooZSx0LHIpPT57InVzZSBzdHJpY3QiO3IuZCh0LHtCODooKT0+UixVQzooKT0+QyxiTDooKT0+TyxsOTooKT0+Tn0pO3ZhciBuPXIoNjA5NjcpLGk9cig2MjU2OSkscz1yKDU2MjEzKSxvPXIoMTkwMjgpLGE9cigxNzkxMiksbD1yKDQ4NDUpLHU9cigyMTA0NCksZD1yKDE3ODk4KSxjPXIoNjc4MzApLGg9cig3NjQ5NSkscD0iVGFicyIsW2YsbV09KDAscy5BKShwLFtvLlJHXSksZz0oMCxvLlJHKSgpLFt5LGJdPWYocCksXz1uLmZvcndhcmRSZWYoKGUsdCk9PntsZXR7X19zY29wZVRhYnM6cix2YWx1ZTpuLG9uVmFsdWVDaGFuZ2U6aSxkZWZhdWx0VmFsdWU6cyxvcmllbnRhdGlvbjpvPSJob3Jpem9udGFsIixkaXI6YSxhY3RpdmF0aW9uTW9kZTpwPSJhdXRvbWF0aWMiLC4uLmZ9PWUsbT0oMCx1LmpIKShhKSxbZyxiXT0oMCxkLmkpKHtwcm9wOm4sb25DaGFuZ2U6aSxkZWZhdWx0UHJvcDpzfSk7cmV0dXJuKDAsaC5qc3gpKHkse3Njb3BlOnIsYmFzZUlkOigwLGMuQikoKSx2YWx1ZTpnLG9uVmFsdWVDaGFuZ2U6YixvcmllbnRhdGlvbjpvLGRpcjptLGFjdGl2YXRpb25Nb2RlOnAsY2hpbGRyZW46KDAsaC5qc3gpKGwuc0cuZGl2LHtkaXI6bSwiZGF0YS1vcmllbnRhdGlvbiI6bywuLi5mLHJlZjp0fSl9KX0pO18uZGlzcGxheU5hbWU9cDt2YXIgdj0iVGFic0xpc3QiLHc9bi5mb3J3YXJkUmVmKChlLHQpPT57bGV0e19fc2NvcGVUYWJzOnIsbG9vcDpuPSEwLC4uLml9PWUscz1iKHYsciksYT1nKHIpO3JldHVybigwLGguanN4KShvLmJMLHthc0NoaWxkOiEwLC4uLmEsb3JpZW50YXRpb246cy5vcmllbnRhdGlvbixkaXI6cy5kaXIsbG9vcDpuLGNoaWxkcmVuOigwLGguanN4KShsLnNHLmRpdix7cm9sZToidGFibGlzdCIsImFyaWEtb3JpZW50YXRpb24iOnMub3JpZW50YXRpb24sLi4uaSxyZWY6dH0pfSl9KTt3LmRpc3BsYXlOYW1lPXY7dmFyIFQ9IlRhYnNUcmlnZ2VyIixTPW4uZm9yd2FyZFJlZigoZSx0KT0+e2xldHtfX3Njb3BlVGFiczpyLHZhbHVlOm4sZGlzYWJsZWQ6cz0hMSwuLi5hfT1lLHU9YihULHIpLGQ9ZyhyKSxjPUEodS5iYXNlSWQsbikscD1JKHUuYmFzZUlkLG4pLGY9bj09PXUudmFsdWU7cmV0dXJuKDAsaC5qc3gpKG8ucTcse2FzQ2hpbGQ6ITAsLi4uZCxmb2N1c2FibGU6IXMsYWN0aXZlOmYsY2hpbGRyZW46KDAsaC5qc3gpKGwuc0cuYnV0dG9uLHt0eXBlOiJidXR0b24iLHJvbGU6InRhYiIsImFyaWEtc2VsZWN0ZWQiOmYsImFyaWEtY29udHJvbHMiOnAsImRhdGEtc3RhdGUiOmY/ImFjdGl2ZSI6ImluYWN0aXZlIiwiZGF0YS1kaXNhYmxlZCI6cz8iIjp2b2lkIDAsZGlzYWJsZWQ6cyxpZDpjLC4uLmEscmVmOnQsb25Nb3VzZURvd246KDAsaS5tKShlLm9uTW91c2VEb3duLGU9PntzfHwwIT09ZS5idXR0b258fCExIT09ZS5jdHJsS2V5P2UucHJldmVudERlZmF1bHQoKTp1Lm9uVmFsdWVDaGFuZ2Uobil9KSxvbktleURvd246KDAsaS5tKShlLm9uS2V5RG93bixlPT57WyIgIiwiRW50ZXIiXS5pbmNsdWRlcyhlLmtleSkmJnUub25WYWx1ZUNoYW5nZShuKX0pLG9uRm9jdXM6KDAsaS5tKShlLm9uRm9jdXMsKCk9PntsZXQgZT0ibWFudWFsIiE9PXUuYWN0aXZhdGlvbk1vZGU7Znx8c3x8IWV8fHUub25WYWx1ZUNoYW5nZShuKX0pfSl9KX0pO1MuZGlzcGxheU5hbWU9VDt2YXIgRT0iVGFic0NvbnRlbnQiLHg9bi5mb3J3YXJkUmVmKChlLHQpPT57bGV0e19fc2NvcGVUYWJzOnIsdmFsdWU6aSxmb3JjZU1vdW50OnMsY2hpbGRyZW46bywuLi51fT1lLGQ9YihFLHIpLGM9QShkLmJhc2VJZCxpKSxwPUkoZC5iYXNlSWQsaSksZj1pPT09ZC52YWx1ZSxtPW4udXNlUmVmKGYpO3JldHVybiBuLnVzZUVmZmVjdCgoKT0+e2xldCBlPXJlcXVlc3RBbmltYXRpb25GcmFtZSgoKT0+bS5jdXJyZW50PSExKTtyZXR1cm4oKT0+Y2FuY2VsQW5pbWF0aW9uRnJhbWUoZSl9LFtdKSwoMCxoLmpzeCkoYS5DLHtwcmVzZW50OnN8fGYsY2hpbGRyZW46cj0+e2xldHtwcmVzZW50Om59PXI7cmV0dXJuKDAsaC5qc3gpKGwuc0cuZGl2LHsiZGF0YS1zdGF0ZSI6Zj8iYWN0aXZlIjoiaW5hY3RpdmUiLCJkYXRhLW9yaWVudGF0aW9uIjpkLm9yaWVudGF0aW9uLHJvbGU6InRhYnBhbmVsIiwiYXJpYS1sYWJlbGxlZGJ5IjpjLGhpZGRlbjohbixpZDpwLHRhYkluZGV4OjAsLi4udSxyZWY6dCxzdHlsZTp7Li4uZS5zdHlsZSxhbmltYXRpb25EdXJhdGlvbjptLmN1cnJlbnQ/IjBzIjp2b2lkIDB9LGNoaWxkcmVuOm4mJm99KX19KX0pO2Z1bmN0aW9uIEEoZSx0KXtyZXR1cm4iIi5jb25jYXQoZSwiLXRyaWdnZXItIikuY29uY2F0KHQpfWZ1bmN0aW9uIEkoZSx0KXtyZXR1cm4iIi5jb25jYXQoZSwiLWNvbnRlbnQtIikuY29uY2F0KHQpfXguZGlzcGxheU5hbWU9RTt2YXIgTz1fLFI9dyxOPVMsQz14fSw2MDQ3NzooZSx0LHIpPT57InVzZSBzdHJpY3QiO3ZhciBuPXIoNjczNDUpLkJ1ZmZlcjtsZXQgaT12b2lkIDAhPT1uLHM9LyIoPzpffFxcdTAwNVtGZl0pKD86X3xcXHUwMDVbRmZdKSg/OnB8XFx1MDA3MCkoPzpyfFxcdTAwNzIpKD86b3xcXHUwMDZbRmZdKSg/OnR8XFx1MDA3NCkoPzpvfFxcdTAwNltGZl0pKD86X3xcXHUwMDVbRmZdKSg/Ol98XFx1MDA1W0ZmXSkiXHMqOi8sbz0vIig/OmN8XFx1MDA2MykoPzpvfFxcdTAwNltGZl0pKD86bnxcXHUwMDZbRWVdKSg/OnN8XFx1MDA3MykoPzp0fFxcdTAwNzQpKD86cnxcXHUwMDcyKSg/OnV8XFx1MDA3NSkoPzpjfFxcdTAwNjMpKD86dHxcXHUwMDc0KSg/Om98XFx1MDA2W0ZmXSkoPzpyfFxcdTAwNzIpIlxzKjovO2Z1bmN0aW9uIGEoZSx0LHIpe251bGw9PXImJm51bGwhPT10JiYib2JqZWN0Ij09dHlwZW9mIHQmJihyPXQsdD12b2lkIDApLGkmJm4uaXNCdWZmZXIoZSkmJihlPWUudG9TdHJpbmcoKSksZSYmNjUyNzk9PT1lLmNoYXJDb2RlQXQoMCkmJihlPWUuc2xpY2UoMSkpO2xldCBhPUpTT04ucGFyc2UoZSx0KTtpZihudWxsPT09YXx8Im9iamVjdCIhPXR5cGVvZiBhKXJldHVybiBhO2xldCB1PXImJnIucHJvdG9BY3Rpb258fCJlcnJvciIsZD1yJiZyLmNvbnN0cnVjdG9yQWN0aW9ufHwiZXJyb3IiO2lmKCJpZ25vcmUiPT09dSYmImlnbm9yZSI9PT1kKXJldHVybiBhO2lmKCJpZ25vcmUiIT09dSYmImlnbm9yZSIhPT1kKXtpZighMT09PXMudGVzdChlKSYmITE9PT1vLnRlc3QoZSkpcmV0dXJuIGF9ZWxzZSBpZigiaWdub3JlIiE9PXUmJiJpZ25vcmUiPT09ZCl7aWYoITE9PT1zLnRlc3QoZSkpcmV0dXJuIGF9ZWxzZSBpZighMT09PW8udGVzdChlKSlyZXR1cm4gYTtyZXR1cm4gbChhLHtwcm90b0FjdGlvbjp1LGNvbnN0cnVjdG9yQWN0aW9uOmQsc2FmZTpyJiZyLnNhZmV9KX1mdW5jdGlvbiBsKGUse3Byb3RvQWN0aW9uOnQ9ImVycm9yIixjb25zdHJ1Y3RvckFjdGlvbjpyPSJlcnJvciIsc2FmZTpufT17fSl7bGV0IGk9W2VdO2Zvcig7aS5sZW5ndGg7KXtsZXQgZT1pO2ZvcihsZXQgcyBvZihpPVtdLGUpKXtpZigiaWdub3JlIiE9PXQmJk9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCJfX3Byb3RvX18iKSl7aWYoITA9PT1uKXJldHVybiBudWxsO2lmKCJlcnJvciI9PT10KXRocm93IFN5bnRheEVycm9yKCJPYmplY3QgY29udGFpbnMgZm9yYmlkZGVuIHByb3RvdHlwZSBwcm9wZXJ0eSIpO2RlbGV0ZSBzLl9fcHJvdG9fX31pZigiaWdub3JlIiE9PXImJk9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCJjb25zdHJ1Y3RvciIpJiZPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocy5jb25zdHJ1Y3RvciwicHJvdG90eXBlIikpe2lmKCEwPT09bilyZXR1cm4gbnVsbDtpZigiZXJyb3IiPT09cil0aHJvdyBTeW50YXhFcnJvcigiT2JqZWN0IGNvbnRhaW5zIGZvcmJpZGRlbiBwcm90b3R5cGUgcHJvcGVydHkiKTtkZWxldGUgcy5jb25zdHJ1Y3Rvcn1mb3IobGV0IGUgaW4gcyl7bGV0IHQ9c1tlXTt0JiYib2JqZWN0Ij09dHlwZW9mIHQmJmkucHVzaCh0KX19fXJldHVybiBlfWZ1bmN0aW9uIHUoZSx0LHIpe2xldCBuPUVycm9yLnN0YWNrVHJhY2VMaW1pdDtFcnJvci5zdGFja1RyYWNlTGltaXQ9MDt0cnl7cmV0dXJuIGEoZSx0LHIpfWZpbmFsbHl7RXJyb3Iuc3RhY2tUcmFjZUxpbWl0PW59fWUuZXhwb3J0cz11LGUuZXhwb3J0cy5kZWZhdWx0PXUsZS5leHBvcnRzLnBhcnNlPXUsZS5leHBvcnRzLnNhZmVQYXJzZT1mdW5jdGlvbihlLHQpe2xldCByPUVycm9yLnN0YWNrVHJhY2VMaW1pdDtFcnJvci5zdGFja1RyYWNlTGltaXQ9MDt0cnl7cmV0dXJuIGEoZSx0LHtzYWZlOiEwfSl9Y2F0Y2goZSl7cmV0dXJuIG51bGx9ZmluYWxseXtFcnJvci5zdGFja1RyYWNlTGltaXQ9cn19LGUuZXhwb3J0cy5zY2FuPWx9LDYxNTUw"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "O2Nhc2UiYXBwbGljYXRpb24vcGRmIjpyZXR1cm57dHlwZToiZmlsZSIsZmlsZTp7ZmlsZW5hbWU6bnVsbCE9KGE9ZS5maWxlbmFtZSk/YTpgcGFydC0ke3R9LnBkZmAsZmlsZV9kYXRhOmBkYXRhOmFwcGxpY2F0aW9uL3BkZjtiYXNlNjQsJHtlLmRhdGF9YH19O2RlZmF1bHQ6dGhyb3cgbmV3IGkuYjgoe2Z1bmN0aW9uYWxpdHk6YEZpbGUgY29udGVudCBwYXJ0IHR5cGUgJHtlLm1pbWVUeXBlfSBpbiB1c2VyIG1lc3NhZ2VzYH0pfX19KX0pO2JyZWFrO2Nhc2UiYXNzaXN0YW50Ijp7bGV0IGU9IiIscj1bXTtmb3IobGV0IHQgb2YgbClzd2l0Y2godC50eXBlKXtjYXNlInRleHQiOmUrPXQudGV4dDticmVhaztjYXNlInRvb2wtY2FsbCI6ci5wdXNoKHtpZDp0LnRvb2xDYWxsSWQsdHlwZToiZnVuY3Rpb24iLGZ1bmN0aW9uOntuYW1lOnQudG9vbE5hbWUsYXJndW1lbnRzOkpTT04uc3RyaW5naWZ5KHQuYXJncyl9fSl9aWYodCl7aWYoci5sZW5ndGg+MSl0aHJvdyBuZXcgaS5iOCh7ZnVuY3Rpb25hbGl0eToidXNlTGVnYWN5RnVuY3Rpb25DYWxsaW5nIHdpdGggbXVsdGlwbGUgdG9vbCBjYWxscyBpbiBvbmUgbWVzc2FnZSJ9KTtzLnB1c2goe3JvbGU6ImFzc2lzdGFudCIsY29udGVudDplLGZ1bmN0aW9uX2NhbGw6ci5sZW5ndGg+MD9yWzBdLmZ1bmN0aW9uOnZvaWQgMH0pfWVsc2Ugcy5wdXNoKHtyb2xlOiJhc3Npc3RhbnQiLGNvbnRlbnQ6ZSx0b29sX2NhbGxzOnIubGVuZ3RoPjA/cjp2b2lkIDB9KTticmVha31jYXNlInRvb2wiOmZvcihsZXQgZSBvZiBsKXQ/cy5wdXNoKHtyb2xlOiJmdW5jdGlvbiIsbmFtZTplLnRvb2xOYW1lLGNvbnRlbnQ6SlNPTi5zdHJpbmdpZnkoZS5yZXN1bHQpfSk6cy5wdXNoKHtyb2xlOiJ0b29sIix0b29sX2NhbGxfaWQ6ZS50b29sQ2FsbElkLGNvbnRlbnQ6SlNPTi5zdHJpbmdpZnkoZS5yZXN1bHQpfSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihgVW5zdXBwb3J0ZWQgcm9sZTogJHthfWApfXJldHVybnttZXNzYWdlczpzLHdhcm5pbmdzOm99fSh7cHJvbXB0OnQsdXNlTGVnYWN5RnVuY3Rpb25DYWxsaW5nOlIsc3lzdGVtTWVzc2FnZU1vZGU6bShFPXRoaXMubW9kZWxJZCk/bnVsbCE9KEE9bnVsbD09KHg9Z1tFXSk/dm9pZCAwOnguc3lzdGVtTWVzc2FnZU1vZGUpP0E6ImRldmVsb3BlciI6InN5c3RlbSJ9KTtPLnB1c2goLi4uQyk7bGV0IEw9e21vZGVsOnRoaXMubW9kZWxJZCxsb2dpdF9iaWFzOnRoaXMuc2V0dGluZ3MubG9naXRCaWFzLGxvZ3Byb2JzOiEwPT09dGhpcy5zZXR0aW5ncy5sb2dwcm9ic3x8Im51bWJlciI9PXR5cGVvZiB0aGlzLnNldHRpbmdzLmxvZ3Byb2JzfHx2b2lkIDAsdG9wX2xvZ3Byb2JzOiJudW1iZXIiPT10eXBlb2YgdGhpcy5zZXR0aW5ncy5sb2dwcm9icz90aGlzLnNldHRpbmdzLmxvZ3Byb2JzOiJib29sZWFuIj09dHlwZW9mIHRoaXMuc2V0dGluZ3MubG9ncHJvYnMmJnRoaXMuc2V0dGluZ3MubG9ncHJvYnM/MDp2b2lkIDAsdXNlcjp0aGlzLnNldHRpbmdzLnVzZXIscGFyYWxsZWxfdG9vbF9jYWxsczp0aGlzLnNldHRpbmdzLnBhcmFsbGVsVG9vbENhbGxzLG1heF90b2tlbnM6cix0ZW1wZXJhdHVyZTpzLHRvcF9wOm8sZnJlcXVlbmN5X3BlbmFsdHk6bCxwcmVzZW5jZV9wZW5hbHR5OnUscmVzcG9uc2VfZm9ybWF0OihudWxsPT1jP3ZvaWQgMDpjLnR5cGUpPT09Impzb24iP3RoaXMuc3VwcG9ydHNTdHJ1Y3R1cmVkT3V0cHV0cyYmbnVsbCE9Yy5zY2hlbWE/e3R5cGU6Impzb25fc2NoZW1hIixqc29uX3NjaGVtYTp7c2NoZW1hOmMuc2NoZW1hLHN0cmljdDohMCxuYW1lOm51bGwhPShmPWMubmFtZSk/ZjoicmVzcG9uc2UiLGRlc2NyaXB0aW9uOmMuZGVzY3JpcHRpb259fTp7dHlwZToianNvbl9vYmplY3QifTp2b2lkIDAsc3RvcDpkLHNlZWQ6aCxtYXhfY29tcGxldGlvbl90b2tlbnM6bnVsbD09KHk9bnVsbD09cD92b2lkIDA6cC5vcGVuYWkpP3ZvaWQgMDp5Lm1heENvbXBsZXRpb25Ub2tlbnMsc3RvcmU6bnVsbD09KGI9bnVsbD09cD92b2lkIDA6cC5vcGVuYWkpP3ZvaWQgMDpiLnN0b3JlLG1ldGFkYXRhOm51bGw9PShfPW51bGw9PXA/dm9pZCAwOnAub3BlbmFpKT92b2lkIDA6Xy5tZXRhZGF0YSxwcmVkaWN0aW9uOm51bGw9PSh2PW51bGw9PXA/dm9pZCAwOnAub3BlbmFpKT92b2lkIDA6di5wcmVkaWN0aW9uLHJlYXNvbmluZ19lZmZvcnQ6bnVsbCE9KFQ9bnVsbD09KHc9bnVsbD09cD92b2lkIDA6cC5vcGVuYWkpP3ZvaWQgMDp3LnJlYXNvbmluZ0VmZm9ydCk/VDp0aGlzLnNldHRpbmdzLnJlYXNvbmluZ0VmZm9ydCxtZXNzYWdlczpOfTtzd2l0Y2gobSh0aGlzLm1vZGVsSWQpPyhudWxsIT1MLnRlbXBlcmF0dXJlJiYoTC50ZW1wZXJhdHVyZT12b2lkIDAsTy5wdXNoKHt0eXBlOiJ1bnN1cHBvcnRlZC1zZXR0aW5nIixzZXR0aW5nOiJ0ZW1wZXJhdHVyZSIsZGV0YWlsczoidGVtcGVyYXR1cmUgaXMgbm90IHN1cHBvcnRlZCBmb3IgcmVhc29uaW5nIG1vZGVscyJ9KSksbnVsbCE9TC50b3BfcCYmKEwudG9wX3A9dm9pZCAwLE8ucHVzaCh7dHlwZToidW5zdXBwb3J0ZWQtc2V0dGluZyIsc2V0dGluZzoidG9wUCIsZGV0YWlsczoidG9wUCBpcyBub3Qgc3VwcG9ydGVkIGZvciByZWFzb25pbmcgbW9kZWxzIn0pKSxudWxsIT1MLmZyZXF1ZW5jeV9wZW5hbHR5JiYoTC5mcmVxdWVuY3lfcGVuYWx0eT12b2lkIDAsTy5wdXNoKHt0eXBlOiJ1bnN1cHBvcnRlZC1zZXR0aW5nIixzZXR0aW5nOiJmcmVxdWVuY3lQZW5hbHR5IixkZXRhaWxzOiJmcmVxdWVuY3lQZW5hbHR5IGlzIG5vdCBzdXBwb3J0ZWQgZm9yIHJlYXNvbmluZyBtb2RlbHMifSkpLG51bGwhPUwucHJlc2VuY2VfcGVuYWx0eSYmKEwucHJlc2VuY2VfcGVuYWx0eT12b2lkIDAsTy5wdXNoKHt0eXBlOiJ1bnN1cHBvcnRlZC1zZXR0aW5nIixzZXR0aW5nOiJwcmVzZW5jZVBlbmFsdHkiLGRldGFpbHM6InByZXNlbmNlUGVuYWx0eSBpcyBub3Qgc3VwcG9ydGVkIGZvciByZWFzb25pbmcgbW9kZWxzIn0pKSxudWxsIT1MLmxvZ2l0X2JpYXMmJihMLmxvZ2l0X2JpYXM9dm9pZCAwLE8ucHVzaCh7dHlwZToib3RoZXIiLG1lc3NhZ2U6ImxvZ2l0QmlhcyBpcyBub3Qgc3VwcG9ydGVkIGZvciByZWFzb25pbmcgbW9kZWxzIn0pKSxudWxsIT1MLmxvZ3Byb2JzJiYoTC5sb2dwcm9icz12b2lkIDAsTy5wdXNoKHt0eXBlOiJvdGhlciIsbWVzc2FnZToibG9ncHJvYnMgaXMgbm90IHN1cHBvcnRlZCBmb3IgcmVhc29uaW5nIG1vZGVscyJ9KSksbnVsbCE9TC50b3BfbG9ncHJvYnMmJihMLnRvcF9sb2dwcm9icz12b2lkIDAsTy5wdXNoKHt0eXBlOiJvdGhlciIsbWVzc2FnZToidG9wTG9ncHJvYnMgaXMgbm90IHN1cHBvcnRlZCBmb3IgcmVhc29uaW5nIG1vZGVscyJ9KSksbnVsbCE9TC5tYXhfdG9rZW5zJiYobnVsbD09TC5tYXhfY29tcGxldGlvbl90b2tlbnMmJihMLm1heF9jb21wbGV0aW9uX3Rva2Vucz1MLm1heF90b2tlbnMpLEwubWF4X3Rva2Vucz12b2lkIDApKToodGhpcy5tb2RlbElkLnN0YXJ0c1dpdGgoImdwdC00by1zZWFyY2gtcHJldmlldyIpfHx0aGlzLm1vZGVsSWQuc3RhcnRzV2l0aCgiZ3B0LTRvLW1pbmktc2VhcmNoLXByZXZpZXciKSkmJm51bGwhPUwudGVtcGVyYXR1cmUmJihMLnRlbXBlcmF0dXJlPXZvaWQgMCxPLnB1c2goe3R5cGU6InVuc3VwcG9ydGVkLXNldHRpbmciLHNldHRpbmc6InRlbXBlcmF0dXJlIixkZXRhaWxzOiJ0ZW1wZXJhdHVyZSBpcyBub3Qgc3VwcG9ydGVkIGZvciB0aGUgc2VhcmNoIHByZXZpZXcgbW9kZWxzIGFuZCBoYXMgYmVlbiByZW1vdmVkLiJ9KSksSSl7Y2FzZSJyZWd1bGFyIjp7bGV0e3Rvb2xzOnQsdG9vbF9jaG9pY2U6cixmdW5jdGlvbnM6bixmdW5jdGlvbl9jYWxsOnMsdG9vbFdhcm5pbmdzOm99PWZ1bmN0aW9uKHttb2RlOmUsdXNlTGVnYWN5RnVuY3Rpb25DYWxsaW5nOnQ9ITEsc3RydWN0dXJlZE91dHB1dHM6cn0pe3ZhciBuO2xldCBzPShudWxsPT0obj1lLnRvb2xzKT92b2lkIDA6bi5sZW5ndGgpP2UudG9vbHM6dm9pZCAwLG89W107aWYobnVsbD09cylyZXR1cm57dG9vbHM6dm9pZCAwLHRvb2xfY2hvaWNlOnZvaWQgMCx0b29sV2FybmluZ3M6b307bGV0IGE9ZS50b29sQ2hvaWNlO2lmKHQpe2xldCBlPVtdO2ZvcihsZXQgdCBvZiBzKSJwcm92aWRlci1kZWZpbmVkIj09PXQudHlwZT9vLnB1c2goe3R5cGU6InVuc3VwcG9ydGVkLXRvb2wiLHRvb2w6dH0pOmUucHVzaCh7bmFtZTp0Lm5hbWUsZGVzY3JpcHRpb246dC5kZXNjcmlwdGlvbixwYXJhbWV0ZXJzOnQucGFyYW1ldGVyc30pO2lmKG51bGw9PWEpcmV0dXJue2Z1bmN0aW9uczplLGZ1bmN0aW9uX2NhbGw6dm9pZCAwLHRvb2xXYXJuaW5nczpvfTtzd2l0Y2goYS50eXBlKXtjYXNlImF1dG8iOmNhc2Uibm9uZSI6Y2FzZSB2b2lkIDA6cmV0dXJue2Z1bmN0aW9uczplLGZ1bmN0aW9uX2NhbGw6dm9pZCAwLHRvb2xXYXJuaW5nczpvfTtjYXNlInJlcXVpcmVkIjp0aHJvdyBuZXcgaS5iOCh7ZnVuY3Rpb25hbGl0eToidXNlTGVnYWN5RnVuY3Rpb25DYWxsaW5nIGFuZCB0b29sQ2hvaWNlOiByZXF1aXJlZCJ9KTtkZWZhdWx0OnJldHVybntmdW5jdGlvbnM6ZSxmdW5jdGlvbl9jYWxsOntuYW1lOmEudG9vbE5hbWV9LHRvb2xXYXJuaW5nczpvfX19bGV0IGw9W107Zm9yKGxldCBlIG9mIHMpInByb3ZpZGVyLWRlZmluZWQiPT09ZS50eXBlP28ucHVzaCh7dHlwZToidW5zdXBwb3J0ZWQtdG9vbCIsdG9vbDplfSk6bC5wdXNoKHt0eXBlOiJmdW5jdGlvbiIsZnVuY3Rpb246e25hbWU6ZS5uYW1lLGRlc2NyaXB0aW9uOmUuZGVzY3JpcHRpb24scGFyYW1ldGVyczplLnBhcmFtZXRlcnMsc3RyaWN0OiEhcnx8dm9pZCAwfX0pO2lmKG51bGw9PWEpcmV0dXJue3Rvb2xzOmwsdG9vbF9jaG9pY2U6dm9pZCAwLHRvb2xXYXJuaW5nczpvfTtsZXQgdT1hLnR5cGU7c3dpdGNoKHUpe2Nhc2UiYXV0byI6Y2FzZSJub25lIjpjYXNlInJlcXVpcmVkIjpyZXR1cm57dG9vbHM6bCx0b29sX2Nob2ljZTp1LHRvb2xXYXJuaW5nczpvfTtjYXNlInRvb2wiOnJldHVybnt0b29sczpsLHRvb2xfY2hvaWNlOnt0eXBlOiJmdW5jdGlvbiIsZnVuY3Rpb246e25hbWU6YS50b29sTmFtZX19LHRvb2xXYXJuaW5nczpvfTtkZWZhdWx0OnRocm93IG5ldyBpLmI4KHtmdW5jdGlvbmFsaXR5OmBVbnN1cHBvcnRlZCB0b29sIGNob2ljZSB0eXBlOiAke3V9YH0pfX0oe21vZGU6ZSx1c2VMZWdhY3lGdW5jdGlvbkNhbGxpbmc6UixzdHJ1Y3R1cmVkT3V0cHV0czp0aGlzLnN1cHBvcnRzU3RydWN0dXJlZE91dHB1dHN9KTtyZXR1cm57YXJnczp7Li4uTCx0b29sczp0LHRvb2xfY2hvaWNlOnIsZnVuY3Rpb25zOm4sZnVuY3Rpb25fY2FsbDpzfSx3YXJuaW5nczpbLi4uTywuLi5vXX19Y2FzZSJvYmplY3QtanNvbiI6cmV0dXJue2FyZ3M6ey4uLkwscmVzcG9uc2VfZm9ybWF0OnRoaXMuc3VwcG9ydHNTdHJ1Y3R1cmVkT3V0cHV0cyYmbnVsbCE9ZS5zY2hlbWE/e3R5cGU6Impzb25fc2NoZW1hIixqc29uX3NjaGVtYTp7c2NoZW1hOmUuc2NoZW1hLHN0cmljdDohMCxuYW1lOm51bGwhPShTPWUubmFtZSk/UzoicmVzcG9uc2UiLGRlc2NyaXB0aW9uOmUuZGVzY3JpcHRpb259fTp7dHlwZToianNvbl9vYmplY3QifX0sd2FybmluZ3M6T307Y2FzZSJvYmplY3QtdG9vbCI6cmV0dXJue2FyZ3M6Uj97Li4uTCxmdW5jdGlvbl9jYWxsOntuYW1lOmUudG9vbC5uYW1lfSxmdW5jdGlvbnM6W3tuYW1lOmUudG9vbC5uYW1lLGRlc2NyaXB0aW9uOmUudG9vbC5kZXNjcmlwdGlvbixwYXJhbWV0ZXJzOmUudG9vbC5wYXJhbWV0ZXJzfV19OnsuLi5MLHRvb2xfY2hvaWNlOnt0eXBlOiJmdW5jdGlvbiIsZnVuY3Rpb246e25hbWU6ZS50b29sLm5hbWV9fSx0b29sczpbe3R5cGU6ImZ1bmN0aW9uIixmdW5jdGlvbjp7bmFtZTplLnRvb2wubmFtZSxkZXNjcmlwdGlvbjplLnRvb2wuZGVzY3JpcHRpb24scGFyYW1ldGVyczplLnRvb2wucGFyYW1ldGVycyxzdHJpY3Q6ISF0aGlzLnN1cHBvcnRzU3RydWN0dXJlZE91dHB1dHN8fHZvaWQgMH19XX0sd2FybmluZ3M6T307ZGVmYXVsdDp0aHJvdyBFcnJvcihgVW5zdXBwb3J0ZWQgdHlwZTogJHtJfWApfX1hc3luYyBkb0dlbmVyYXRlKGUpe3ZhciB0LHIsaSxzLGwsYyxoLGY7bGV0e2FyZ3M6bSx3YXJuaW5nczpnfT10aGlzLmdldEFyZ3MoZSkse3Jlc3BvbnNlSGVhZGVyczp5LHZhbHVlOmIscmF3VmFsdWU6X309YXdhaXQgKDAsbi"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "LCJlbmQiLCJ0b3AiLCJyaWdodCIsImJvdHRvbSIsImxlZnQiXSwiaW5zZXQteCI6WyJyaWdodCIsImxlZnQiXSwiaW5zZXQteSI6WyJ0b3AiLCJib3R0b20iXSxmbGV4OlsiYmFzaXMiLCJncm93Iiwic2hyaW5rIl0sZ2FwOlsiZ2FwLXgiLCJnYXAteSJdLHA6WyJweCIsInB5IiwicHMiLCJwZSIsInB0IiwicHIiLCJwYiIsInBsIl0scHg6WyJwciIsInBsIl0scHk6WyJwdCIsInBiIl0sbTpbIm14IiwibXkiLCJtcyIsIm1lIiwibXQiLCJtciIsIm1iIiwibWwiXSxteDpbIm1yIiwibWwiXSxteTpbIm10IiwibWIiXSxzaXplOlsidyIsImgiXSwiZm9udC1zaXplIjpbImxlYWRpbmciXSwiZnZuLW5vcm1hbCI6WyJmdm4tb3JkaW5hbCIsImZ2bi1zbGFzaGVkLXplcm8iLCJmdm4tZmlndXJlIiwiZnZuLXNwYWNpbmciLCJmdm4tZnJhY3Rpb24iXSwiZnZuLW9yZGluYWwiOlsiZnZuLW5vcm1hbCJdLCJmdm4tc2xhc2hlZC16ZXJvIjpbImZ2bi1ub3JtYWwiXSwiZnZuLWZpZ3VyZSI6WyJmdm4tbm9ybWFsIl0sImZ2bi1zcGFjaW5nIjpbImZ2bi1ub3JtYWwiXSwiZnZuLWZyYWN0aW9uIjpbImZ2bi1ub3JtYWwiXSwibGluZS1jbGFtcCI6WyJkaXNwbGF5Iiwib3ZlcmZsb3ciXSxyb3VuZGVkOlsicm91bmRlZC1zIiwicm91bmRlZC1lIiwicm91bmRlZC10Iiwicm91bmRlZC1yIiwicm91bmRlZC1iIiwicm91bmRlZC1sIiwicm91bmRlZC1zcyIsInJvdW5kZWQtc2UiLCJyb3VuZGVkLWVlIiwicm91bmRlZC1lcyIsInJvdW5kZWQtdGwiLCJyb3VuZGVkLXRyIiwicm91bmRlZC1iciIsInJvdW5kZWQtYmwiXSwicm91bmRlZC1zIjpbInJvdW5kZWQtc3MiLCJyb3VuZGVkLWVzIl0sInJvdW5kZWQtZSI6WyJyb3VuZGVkLXNlIiwicm91bmRlZC1lZSJdLCJyb3VuZGVkLXQiOlsicm91bmRlZC10bCIsInJvdW5kZWQtdHIiXSwicm91bmRlZC1yIjpbInJvdW5kZWQtdHIiLCJyb3VuZGVkLWJyIl0sInJvdW5kZWQtYiI6WyJyb3VuZGVkLWJyIiwicm91bmRlZC1ibCJdLCJyb3VuZGVkLWwiOlsicm91bmRlZC10bCIsInJvdW5kZWQtYmwiXSwiYm9yZGVyLXNwYWNpbmciOlsiYm9yZGVyLXNwYWNpbmcteCIsImJvcmRlci1zcGFjaW5nLXkiXSwiYm9yZGVyLXciOlsiYm9yZGVyLXctcyIsImJvcmRlci13LWUiLCJib3JkZXItdy10IiwiYm9yZGVyLXctciIsImJvcmRlci13LWIiLCJib3JkZXItdy1sIl0sImJvcmRlci13LXgiOlsiYm9yZGVyLXctciIsImJvcmRlci13LWwiXSwiYm9yZGVyLXcteSI6WyJib3JkZXItdy10IiwiYm9yZGVyLXctYiJdLCJib3JkZXItY29sb3IiOlsiYm9yZGVyLWNvbG9yLXMiLCJib3JkZXItY29sb3ItZSIsImJvcmRlci1jb2xvci10IiwiYm9yZGVyLWNvbG9yLXIiLCJib3JkZXItY29sb3ItYiIsImJvcmRlci1jb2xvci1sIl0sImJvcmRlci1jb2xvci14IjpbImJvcmRlci1jb2xvci1yIiwiYm9yZGVyLWNvbG9yLWwiXSwiYm9yZGVyLWNvbG9yLXkiOlsiYm9yZGVyLWNvbG9yLXQiLCJib3JkZXItY29sb3ItYiJdLCJzY3JvbGwtbSI6WyJzY3JvbGwtbXgiLCJzY3JvbGwtbXkiLCJzY3JvbGwtbXMiLCJzY3JvbGwtbWUiLCJzY3JvbGwtbXQiLCJzY3JvbGwtbXIiLCJzY3JvbGwtbWIiLCJzY3JvbGwtbWwiXSwic2Nyb2xsLW14IjpbInNjcm9sbC1tciIsInNjcm9sbC1tbCJdLCJzY3JvbGwtbXkiOlsic2Nyb2xsLW10Iiwic2Nyb2xsLW1iIl0sInNjcm9sbC1wIjpbInNjcm9sbC1weCIsInNjcm9sbC1weSIsInNjcm9sbC1wcyIsInNjcm9sbC1wZSIsInNjcm9sbC1wdCIsInNjcm9sbC1wciIsInNjcm9sbC1wYiIsInNjcm9sbC1wbCJdLCJzY3JvbGwtcHgiOlsic2Nyb2xsLXByIiwic2Nyb2xsLXBsIl0sInNjcm9sbC1weSI6WyJzY3JvbGwtcHQiLCJzY3JvbGwtcGIiXSx0b3VjaDpbInRvdWNoLXgiLCJ0b3VjaC15IiwidG91Y2gtcHoiXSwidG91Y2gteCI6WyJ0b3VjaCJdLCJ0b3VjaC15IjpbInRvdWNoIl0sInRvdWNoLXB6IjpbInRvdWNoIl19LGNvbmZsaWN0aW5nQ2xhc3NHcm91cE1vZGlmaWVyczp7ImZvbnQtc2l6ZSI6WyJsZWFkaW5nIl19fX0pfSw5ODk1NjooZSx0LHIpPT57InVzZSBzdHJpY3QiO3IuZCh0LHtBOigpPT5ufSk7bGV0IG49KDAscig2MTU2MSkuQSkoIkNoZWNrIixbWyJwYXRoIix7ZDoiTTIwIDYgOSAxN2wtNS01IixrZXk6IjFnbWYyYyJ9XV0pfSw5OTA3NzooZSx0LHIpPT57InVzZSBzdHJpY3QiO3IuZCh0LHtPaDooKT0+c30pO3ZhciBuPXIoNjA5NjcpLGk9MDtmdW5jdGlvbiBzKCl7bi51c2VFZmZlY3QoKCk9Pnt2YXIgZSx0O2xldCByPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIltkYXRhLXJhZGl4LWZvY3VzLWd1YXJkXSIpO3JldHVybiBkb2N1bWVudC5ib2R5Lmluc2VydEFkamFjZW50RWxlbWVudCgiYWZ0ZXJiZWdpbiIsbnVsbCE9PShlPXJbMF0pJiZ2b2lkIDAhPT1lP2U6bygpKSxkb2N1bWVudC5ib2R5Lmluc2VydEFkamFjZW50RWxlbWVudCgiYmVmb3JlZW5kIixudWxsIT09KHQ9clsxXSkmJnZvaWQgMCE9PXQ/dDpvKCkpLGkrKywoKT0+ezE9PT1pJiZkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCJbZGF0YS1yYWRpeC1mb2N1cy1ndWFyZF0iKS5mb3JFYWNoKGU9PmUucmVtb3ZlKCkpLGktLX19LFtdKX1mdW5jdGlvbiBvKCl7bGV0IGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3BhbiIpO3JldHVybiBlLnNldEF0dHJpYnV0ZSgiZGF0YS1yYWRpeC1mb2N1cy1ndWFyZCIsIiIpLGUudGFiSW5kZXg9MCxlLnN0eWxlLm91dGxpbmU9Im5vbmUiLGUuc3R5bGUub3BhY2l0eT0iMCIsZS5zdHlsZS5wb3NpdGlvbj0iZml4ZWQiLGUuc3R5bGUucG9pbnRlckV2ZW50cz0ibm9uZSIsZX19LDk5NjY2OihlLHQscik9PnsidXNlIHN0cmljdCI7ci5kKHQse3NHOigpPT5vfSk7dmFyIG49cig2MDk2Nyk7cig3Mjg3MCk7dmFyIGk9cig2NDM4OCkscz1yKDc2NDk1KSxvPVsiYSIsImJ1dHRvbiIsImRpdiIsImZvcm0iLCJoMiIsImgzIiwiaW1nIiwiaW5wdXQiLCJsYWJlbCIsImxpIiwibmF2Iiwib2wiLCJwIiwic3BhbiIsInN2ZyIsInVsIl0ucmVkdWNlKChlLHQpPT57bGV0IHI9bi5mb3J3YXJkUmVmKChlLHIpPT57bGV0e2FzQ2hpbGQ6biwuLi5vfT1lLGE9bj9pLkRYOnQ7cmV0dXJuInVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cmJih3aW5kb3dbU3ltYm9sLmZvcigicmFkaXgtdWkiKV09ITApLCgwLHMuanN4KShhLHsuLi5vLHJlZjpyfSl9KTtyZXR1cm4gci5kaXNwbGF5TmFtZT1gUHJpbWl0aXZlLiR7dH1gLHsuLi5lLFt0XTpyfX0se30pfSw5OTc0MTooZSx0LHIpPT57InVzZSBzdHJpY3QiO3IuZCh0LHtBOigpPT5ufSk7bGV0IG49KDAscig2MTU2MSkuQSkoIlRyYXNoMiIsW1sicGF0aCIse2Q6Ik0zIDZoMTgiLGtleToiZDB3bTBqIn1dLFsicGF0aCIse2Q6Ik0xOSA2djE0YzAgMS0xIDItMiAySDdjLTEgMC0yLTEtMi0yVjYiLGtleToiNGFscnQ0In1dLFsicGF0aCIse2Q6Ik04IDZWNGMwLTEgMS0yIDItMmg0YzEgMCAyIDEgMiAydjIiLGtleToidjA3czBlIn1dLFsibGluZSIse3gxOiIxMCIseDI6IjEwIix5MToiMTEiLHkyOiIxNyIsa2V5OiIxdXVmcjUifV0sWyJsaW5lIix7eDE6IjE0Iix4MjoiMTQiLHkxOiIxMSIseTI6IjE3IixrZXk6Inh0eGtkIn1dXSl9LDk5NzkyOihlLHQscik9PnsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHQuRXJyb3JCb3VuZGFyeT12b2lkIDA7bGV0IG49cig2MDk2NyksaT1yKDM5ODIzKTtjbGFzcyBzIGV4dGVuZHMgbi5Db21wb25lbnR7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSksdGhpcy5zdGF0ZT17aGFzRXJyb3I6ITF9fXN0YXRpYyBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IoZSl7cmV0dXJue2hhc0Vycm9yOiEwfX1jb21wb25lbnREaWRDYXRjaChlLHQpe2NvbnNvbGUuZGVidWcoZSksY29uc29sZS5kZWJ1Zyh0KX1yZW5kZXIoKXtyZXR1cm4gdGhpcy5zdGF0ZS5oYXNFcnJvcj9uLmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZTppLkNMQVNTRVMuRkxFWExBWU9VVF9fRVJST1JfQk9VTkRBUllfQ09OVEFJTkVSfSxuLmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZTppLkNMQVNTRVMuRkxFWExBWU9VVF9fRVJST1JfQk9VTkRBUllfQ09OVEVOVH0sdGhpcy5wcm9wcy5tZXNzYWdlKSk6dGhpcy5wcm9wcy5jaGlsZHJlbn19dC5FcnJvckJvdW5kYXJ5PXN9fV0pOw==",    //
     1037488, //
     "application/javascript", //
     "/_next/static/chunks/696-b636fe34b79a4e00.js/", //
     
};
}
