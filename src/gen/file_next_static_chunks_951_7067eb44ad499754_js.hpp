
#pragma once
#include "files.hpp"
namespace duckdb {
const File FILE_NEXT_STATIC_CHUNKS_951_7067EB44AD499754_JS = {
     // Content
     ""
     ""
     ""
     ""
     ""
     "QiOlt7Y29udGVudDpbIm5vcm1hbCIsLi4uRygpLCJiYXNlbGluZSJdfV0sImFsaWduLWl0ZW1zIjpbe2l0ZW1zOlsic3RhcnQiLCJlbmQiLCJjZW50ZXIiLCJiYXNlbGluZSIsInN0cmV0Y2giXX1dLCJhbGlnbi1zZWxmIjpbe3NlbGY6WyJhdXRvIiwic3RhcnQiLCJlbmQiLCJjZW50ZXIiLCJzdHJldGNoIiwiYmFzZWxpbmUiXX1dLCJwbGFjZS1jb250ZW50IjpbeyJwbGFjZS1jb250ZW50IjpbLi4uRygpLCJiYXNlbGluZSJdfV0sInBsYWNlLWl0ZW1zIjpbeyJwbGFjZS1pdGVtcyI6WyJzdGFydCIsImVuZCIsImNlbnRlciIsImJhc2VsaW5lIiwic3RyZXRjaCJdfV0sInBsYWNlLXNlbGYiOlt7InBsYWNlLXNlbGYiOlsiYXV0byIsInN0YXJ0IiwiZW5kIiwiY2VudGVyIiwic3RyZXRjaCJdfV0scDpbe3A6W2JdfV0scHg6W3tweDpbYl19XSxweTpbe3B5OltiXX1dLHBzOlt7cHM6W2JdfV0scGU6W3twZTpbYl19XSxwdDpbe3B0OltiXX1dLHByOlt7cHI6W2JdfV0scGI6W3twYjpbYl19XSxwbDpbe3BsOltiXX1dLG06W3ttOltnXX1dLG14Olt7bXg6W2ddfV0sbXk6W3tteTpbZ119XSxtczpbe21zOltnXX1dLG1lOlt7bWU6W2ddfV0sbXQ6W3ttdDpbZ119XSxtcjpbe21yOltnXX1dLG1iOlt7bWI6W2ddfV0sbWw6W3ttbDpbZ119XSwic3BhY2UteCI6W3sic3BhY2UteCI6W0VdfV0sInNwYWNlLXgtcmV2ZXJzZSI6WyJzcGFjZS14LXJldmVyc2UiXSwic3BhY2UteSI6W3sic3BhY2UteSI6W0VdfV0sInNwYWNlLXktcmV2ZXJzZSI6WyJzcGFjZS15LXJldmVyc2UiXSx3Olt7dzpbImF1dG8iLCJtaW4iLCJtYXgiLCJmaXQiLCJzdnciLCJsdnciLCJkdnciLGssdF19XSwibWluLXciOlt7Im1pbi13Ijpbayx0LCJtaW4iLCJtYXgiLCJmaXQiXX1dLCJtYXgtdyI6W3sibWF4LXciOltrLHQsIm5vbmUiLCJmdWxsIiwibWluIiwibWF4IiwiZml0IiwicHJvc2UiLHtzY3JlZW46W01dfSxNXX1dLGg6W3toOltrLHQsImF1dG8iLCJtaW4iLCJtYXgiLCJmaXQiLCJzdmgiLCJsdmgiLCJkdmgiXX1dLCJtaW4taCI6W3sibWluLWgiOltrLHQsIm1pbiIsIm1heCIsImZpdCIsInN2aCIsImx2aCIsImR2aCJdfV0sIm1heC1oIjpbeyJtYXgtaCI6W2ssdCwibWluIiwibWF4IiwiZml0Iiwic3ZoIiwibHZoIiwiZHZoIl19XSxzaXplOlt7c2l6ZTpbayx0LCJhdXRvIiwibWluIiwibWF4IiwiZml0Il19XSwiZm9udC1zaXplIjpbe3RleHQ6WyJiYXNlIixNLE5dfV0sImZvbnQtc21vb3RoaW5nIjpbImFudGlhbGlhc2VkIiwic3VicGl4ZWwtYW50aWFsaWFzZWQiXSwiZm9udC1zdHlsZSI6WyJpdGFsaWMiLCJub3QtaXRhbGljIl0sImZvbnQtd2VpZ2h0Ijpbe2ZvbnQ6WyJ0aGluIiwiZXh0cmFsaWdodCIsImxpZ2h0Iiwibm9ybWFsIiwibWVkaXVtIiwic2VtaWJvbGQiLCJib2xkIiwiZXh0cmFib2xkIiwiYmxhY2siLExdfV0sImZvbnQtZmFtaWx5Ijpbe2ZvbnQ6W0hdfV0sImZ2bi1ub3JtYWwiOlsibm9ybWFsLW51bXMiXSwiZnZuLW9yZGluYWwiOlsib3JkaW5hbCJdLCJmdm4tc2xhc2hlZC16ZXJvIjpbInNsYXNoZWQtemVybyJdLCJmdm4tZmlndXJlIjpbImxpbmluZy1udW1zIiwib2xkc3R5bGUtbnVtcyJdLCJmdm4tc3BhY2luZyI6WyJwcm9wb3J0aW9uYWwtbnVtcyIsInRhYnVsYXItbnVtcyJdLCJmdm4tZnJhY3Rpb24iOlsiZGlhZ29uYWwtZnJhY3Rpb25zIiwic3RhY2tlZC1mcmFjdGlvbnMiXSx0cmFja2luZzpbe3RyYWNraW5nOlsidGlnaHRlciIsInRpZ2h0Iiwibm9ybWFsIiwid2lkZSIsIndpZGVyIiwid2lkZXN0IixrXX1dLCJsaW5lLWNsYW1wIjpbeyJsaW5lLWNsYW1wIjpbIm5vbmUiLEMsTF19XSxsZWFkaW5nOlt7bGVhZGluZzpbIm5vbmUiLCJ0aWdodCIsInNudWciLCJub3JtYWwiLCJyZWxheGVkIiwibG9vc2UiLFIsa119XSwibGlzdC1pbWFnZSI6W3sibGlzdC1pbWFnZSI6WyJub25lIixrXX1dLCJsaXN0LXN0eWxlLXR5cGUiOlt7bGlzdDpbIm5vbmUiLCJkaXNjIiwiZGVjaW1hbCIsa119XSwibGlzdC1zdHlsZS1wb3NpdGlvbiI6W3tsaXN0OlsiaW5zaWRlIiwib3V0c2lkZSJdfV0sInBsYWNlaG9sZGVyLWNvbG9yIjpbe3BsYWNlaG9sZGVyOltlXX1dLCJwbGFjZWhvbGRlci1vcGFjaXR5IjpbeyJwbGFjZWhvbGRlci1vcGFjaXR5IjpbeV19XSwidGV4dC1hbGlnbm1lbnQiOlt7dGV4dDpbImxlZnQiLCJjZW50ZXIiLCJyaWdodCIsImp1c3RpZnkiLCJzdGFydCIsImVuZCJdfV0sInRleHQtY29sb3IiOlt7dGV4dDpbZV19XSwidGV4dC1vcGFjaXR5IjpbeyJ0ZXh0LW9wYWNpdHkiOlt5XX1dLCJ0ZXh0LWRlY29yYXRpb24iOlsidW5kZXJsaW5lIiwib3ZlcmxpbmUiLCJsaW5lLXRocm91Z2giLCJuby11bmRlcmxpbmUiXSwidGV4dC1kZWNvcmF0aW9uLXN0eWxlIjpbe2RlY29yYXRpb246Wy4uLlYoKSwid2F2eSJdfV0sInRleHQtZGVjb3JhdGlvbi10aGlja25lc3MiOlt7ZGVjb3JhdGlvbjpbImF1dG8iLCJmcm9tLWZvbnQiLFIsTl19XSwidW5kZXJsaW5lLW9mZnNldCI6W3sidW5kZXJsaW5lLW9mZnNldCI6WyJhdXRvIixSLGtdfV0sInRleHQtZGVjb3JhdGlvbi1jb2xvciI6W3tkZWNvcmF0aW9uOltlXX1dLCJ0ZXh0LXRyYW5zZm9ybSI6WyJ1cHBlcmNhc2UiLCJsb3dlcmNhc2UiLCJjYXBpdGFsaXplIiwibm9ybWFsLWNhc2UiXSwidGV4dC1vdmVyZmxvdyI6WyJ0cnVuY2F0ZSIsInRleHQtZWxsaXBzaXMiLCJ0ZXh0LWNsaXAiXSwidGV4dC13cmFwIjpbe3RleHQ6WyJ3cmFwIiwibm93cmFwIiwiYmFsYW5jZSIsInByZXR0eSJdfV0saW5kZW50Olt7aW5kZW50OlUoKX1dLCJ2ZXJ0aWNhbC1hbGlnbiI6W3thbGlnbjpbImJhc2VsaW5lIiwidG9wIiwibWlkZGxlIiwiYm90dG9tIiwidGV4dC10b3AiLCJ0ZXh0LWJvdHRvbSIsInN1YiIsInN1cGVyIixrXX1dLHdoaXRlc3BhY2U6W3t3aGl0ZXNwYWNlOlsibm9ybWFsIiwibm93cmFwIiwicHJlIiwicHJlLWxpbmUiLCJwcmUtd3JhcCIsImJyZWFrLXNwYWNlcyJdfV0sYnJlYWs6W3ticmVhazpbIm5vcm1hbCIsIndvcmRzIiwiYWxsIiwia2VlcCJdfV0saHlwaGVuczpbe2h5cGhlbnM6WyJub25lIiwibWFudWFsIiwiYXV0byJdfV0sY29udGVudDpbe2NvbnRlbnQ6WyJub25lIixrXX1dLCJiZy1hdHRhY2htZW50Ijpbe2JnOlsiZml4ZWQiLCJsb2NhbCIsInNjcm9sbCJdfV0sImJnLWNsaXAiOlt7ImJnLWNsaXAiOlsiYm9yZGVyIiwicGFkZGluZyIsImNvbnRlbnQiLCJ0ZXh0Il19XSwiYmctb3BhY2l0eSI6W3siYmctb3BhY2l0eSI6W3ldfV0sImJnLW9yaWdpbiI6W3siYmctb3JpZ2luIjpbImJvcmRlciIsInBhZGRpbmciLCJjb250ZW50Il19XSwiYmctcG9zaXRpb24iOlt7Ymc6Wy4uLlcoKSxQXX1dLCJiZy1yZXBlYXQiOlt7Ymc6WyJuby1yZXBlYXQiLHtyZXBlYXQ6WyIiLCJ4IiwieSIsInJvdW5kIiwic3BhY2UiXX1dfV0sImJnLXNpemUiOlt7Ymc6WyJhdXRvIiwiY292ZXIiLCJjb250YWluIixGXX1dLCJiZy1pbWFnZSI6W3tiZzpbIm5vbmUiLHsiZ3JhZGllbnQtdG8iOlsidCIsInRyIiwiciIsImJyIiwiYiIsImJsIiwibCIsInRsIl19LHpdfV0sImJnLWNvbG9yIjpbe2JnOltlXX1dLCJncmFkaWVudC1mcm9tLXBvcyI6W3tmcm9tOltmXX1dLCJncmFkaWVudC12aWEtcG9zIjpbe3ZpYTpbZl19XSwiZ3JhZGllbnQtdG8tcG9zIjpbe3RvOltmXX1dLCJncmFkaWVudC1mcm9tIjpbe2Zyb206W3BdfV0sImdyYWRpZW50LXZpYSI6W3t2aWE6W3BdfV0sImdyYWRpZW50LXRvIjpbe3RvOltwXX1dLHJvdW5kZWQ6W3tyb3VuZGVkOltzXX1dLCJyb3VuZGVkLXMiOlt7InJvdW5kZWQtcyI6W3NdfV0sInJvdW5kZWQtZSI6W3sicm91bmRlZC1lIjpbc119XSwicm91bmRlZC10IjpbeyJyb3VuZGVkLXQiOltzXX1dLCJyb3VuZGVkLXIiOlt7InJvdW5kZWQtciI6W3NdfV0sInJvdW5kZWQtYiI6W3sicm91bmRlZC1iIjpbc119XSwicm91bmRlZC1sIjpbeyJyb3VuZGVkLWwiOltzXX1dLCJyb3VuZGVkLXNzIjpbeyJyb3VuZGVkLXNzIjpbc119XSwicm91bmRlZC1zZSI6W3sicm91bmRlZC1zZSI6W3NdfV0sInJvdW5kZWQtZWUiOlt7InJvdW5kZWQtZWUiOltzXX1dLCJyb3VuZGVkLWVzIjpbeyJyb3VuZGVkLWVzIjpbc119XSwicm91bmRlZC10bCI6W3sicm91bmRlZC10bCI6W3NdfV0sInJvdW5kZWQtdHIiOlt7InJvdW5kZWQtdHIiOltzXX1dLCJyb3VuZGVkLWJyIjpbeyJyb3VuZGVkLWJyIjpbc119XSwicm91bmRlZC1ibCI6W3sicm91bmRlZC1ibCI6W3NdfV0sImJvcmRlci13Ijpbe2JvcmRlcjpbYV19XSwiYm9yZGVyLXcteCI6W3siYm9yZGVyLXgiOlthXX1dLCJib3JkZXItdy15IjpbeyJib3JkZXIteSI6W2FdfV0sImJvcmRlci13LXMiOlt7ImJvcmRlci1zIjpbYV19XSwiYm9yZGVyLXctZSI6W3siYm9yZGVyLWUiOlthXX1dLCJib3JkZXItdy10IjpbeyJib3JkZXItdCI6W2FdfV0sImJvcmRlci13LXIiOlt7ImJvcmRlci1yIjpbYV19XSwiYm9yZGVyLXctYiI6W3siYm9yZGVyLWIiOlthXX1dLCJib3JkZXItdy1sIjpbeyJib3JkZXItbCI6W2FdfV0sImJvcmRlci1vcGFjaXR5IjpbeyJib3JkZXItb3BhY2l0eSI6W3ldfV0sImJvcmRlci1zdHlsZSI6W3tib3JkZXI6Wy4uLlYoKSwiaGlkZGVuIl19XSwiZGl2aWRlLXgiOlt7ImRpdmlkZS14IjpbYV19XSwiZGl2aWRlLXgtcmV2ZXJzZSI6WyJkaXZpZGUteC1yZXZlcnNlIl0sImRpdmlkZS15IjpbeyJkaXZpZGUteSI6W2FdfV0sImRpdmlkZS15LXJldmVyc2UiOlsiZGl2aWRlLXktcmV2ZXJzZSJdLCJkaXZpZGUtb3BhY2l0eSI6W3siZGl2aWRlLW9wYWNpdHkiOlt5XX1dLCJkaXZpZGUtc3R5bGUiOlt7ZGl2aWRlOlYoKX1dLCJib3JkZXItY29sb3IiOlt7Ym9yZGVyOltpXX1dLCJib3JkZXItY29sb3IteCI6W3siYm9yZGVyLXgiOltpXX1dLCJib3JkZXItY29sb3IteSI6W3siYm9yZGVyLXkiOltpXX1dLCJib3JkZXItY29sb3ItcyI6W3siYm9yZGVyLXMiOltpXX1dLCJib3JkZXItY29sb3ItZSI6W3siYm9yZGVyLWUiOltpXX1dLCJib3JkZXItY29sb3ItdCI6W3siYm9yZGVyLXQiOltpXX1dLCJib3JkZXItY29sb3ItciI6W3siYm9yZGVyLXIiOltpXX1dLCJib3JkZXItY29sb3ItYiI6W3siYm9yZGVyLWIiOltpXX1dLCJib3JkZXItY29sb3ItbCI6W3siYm9yZGVyLWwiOltpXX1dLCJkaXZpZGUtY29sb3IiOlt7ZGl2aWRlOltpXX1dLCJvdXRsaW5lLXN0eWxlIjpbe291dGxpbmU6WyIiLC4uLlYoKV19XSwib3V0bGluZS1vZmZzZXQiOlt7Im91dGxpbmUtb2Zmc2V0IjpbUixrXX1dLCJvdXRsaW5lLXciOlt7b3V0bGluZTpbUixOXX1dLCJvdXRsaW5lLWNvbG9yIjpbe291dGxpbmU6W2VdfV0sInJpbmctdyI6W3tyaW5nOmooKX1dLCJyaW5nLXctaW5zZXQiOlsicmluZy1pbnNldCJdLCJyaW5nLWNvbG9yIjpbe3Jpbmc6W2VdfV0sInJpbmctb3BhY2l0eSI6W3sicmluZy1vcGFjaXR5IjpbeV19XSwicmluZy1vZmZzZXQtdyI6W3sicmluZy1vZmZzZXQiOltSLE5dfV0sInJpbmctb2Zmc2V0LWNvbG9yIjpbeyJyaW5nLW9mZnNldCI6W2VdfV0sc2hhZG93Olt7c2hhZG93OlsiIiwiaW5uZXIiLCJub25lIixNLCRdfV0sInNoYWRvdy1jb2xvciI6W3tzaGFkb3c6W0hdfV0sb3BhY2l0eTpbe29wYWNpdHk6W3ldfV0sIm1peC1ibGVuZCI6W3sibWl4LWJsZW5kIjpbLi4uWSgpLCJwbHVzLWxpZ2h0ZXIiLCJwbHVzLWRhcmtlciJdfV0sImJnLWJsZW5kIjpbeyJiZy1ibGVuZCI6WSgpfV0sZmlsdGVyOlt7ZmlsdGVyOlsiIiwibm9uZSJdfV0sYmx1cjpbe2JsdXI6W3JdfV0sYnJpZ2h0bmVzczpbe2JyaWdodG5lc3M6W25dfV0sY29udHJhc3Q6W3tjb250cmFzdDpbbF19XSwiZHJvcC1zaGFkb3ciOlt7ImRyb3Atc2hhZG93IjpbIiIsIm5vbmUiLE0sa119XSxncmF5c2NhbGU6W3tncmF5c2NhbGU6W3VdfV0sImh1ZS1yb3RhdGUiOlt7Imh1ZS1yb3RhdGUiOltkXX1dLGludmVydDpbe2ludmVydDpbY119XSxzYXR1cmF0ZTpbe3NhdHVyYXRlOltfXX1dLHNlcGlhOlt7c2VwaWE6W1RdfV0sImJhY2tkcm9wLWZpbHRlciI6W3siYmFja2Ryb3AtZmlsdGVyIjpbIiIsIm5vbmUiXX1dLCJiYWNrZHJvcC1ibHVyIjpbeyJiYWNrZHJvcC1ibHVyIjpbcl19XSwiYmFja2Ryb3AtYnJpZ2h0bmVzcyI6W3siYmFja2Ryb3AtYnJpZ2h0bmVzcyI6W25dfV0sImJhY2tkcm9wLWNvbnRyYXN0IjpbeyJiYWNrZHJvcC1jb250cmFzdCI6W2xd"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "Z2hsaWdodGVkIjpwPyIiOnZvaWQgMCwiYXJpYS1kaXNhYmxlZCI6c3x8dm9pZCAwLCJkYXRhLWRpc2FibGVkIjpzPyIiOnZvaWQgMCwuLi5sLHJlZjpoLG9uUG9pbnRlck1vdmU6KDAsaS5tKShlLm9uUG9pbnRlck1vdmUsZVIoZT0+e3M/dS5vbkl0ZW1MZWF2ZShlKToodS5vbkl0ZW1FbnRlcihlKSxlLmRlZmF1bHRQcmV2ZW50ZWR8fGUuY3VycmVudFRhcmdldC5mb2N1cyh7cHJldmVudFNjcm9sbDohMH0pKX0pKSxvblBvaW50ZXJMZWF2ZTooMCxpLm0pKGUub25Qb2ludGVyTGVhdmUsZVIoZT0+dS5vbkl0ZW1MZWF2ZShlKSkpLG9uRm9jdXM6KDAsaS5tKShlLm9uRm9jdXMsKCk9PmYoITApKSxvbkJsdXI6KDAsaS5tKShlLm9uQmx1ciwoKT0+ZighMSkpfSl9KX0pfSksZXM9bi5mb3J3YXJkUmVmKChlLHQpPT57bGV0e2NoZWNrZWQ6cj0hMSxvbkNoZWNrZWRDaGFuZ2U6biwuLi5zfT1lO3JldHVybigwLFQuanN4KShlcCx7c2NvcGU6ZS5fX3Njb3BlTWVudSxjaGVja2VkOnIsY2hpbGRyZW46KDAsVC5qc3gpKGVuLHtyb2xlOiJtZW51aXRlbWNoZWNrYm94IiwiYXJpYS1jaGVja2VkIjplSShyKT8ibWl4ZWQiOnIsLi4ucyxyZWY6dCwiZGF0YS1zdGF0ZSI6ZU8ociksb25TZWxlY3Q6KDAsaS5tKShzLm9uU2VsZWN0LCgpPT5udWxsPT1uP3ZvaWQgMDpuKCEhZUkocil8fCFyKSx7Y2hlY2tGb3JEZWZhdWx0UHJldmVudGVkOiExfSl9KX0pfSk7ZXMuZGlzcGxheU5hbWU9Ik1lbnVDaGVja2JveEl0ZW0iO3ZhciBlbz0iTWVudVJhZGlvR3JvdXAiLFtlYSxlbF09TChlbyx7dmFsdWU6dm9pZCAwLG9uVmFsdWVDaGFuZ2U6KCk9Pnt9fSksZXU9bi5mb3J3YXJkUmVmKChlLHQpPT57bGV0e3ZhbHVlOnIsb25WYWx1ZUNoYW5nZTpuLC4uLml9PWUscz0oMCxfLmMpKG4pO3JldHVybigwLFQuanN4KShlYSx7c2NvcGU6ZS5fX3Njb3BlTWVudSx2YWx1ZTpyLG9uVmFsdWVDaGFuZ2U6cyxjaGlsZHJlbjooMCxULmpzeCkoUSx7Li4uaSxyZWY6dH0pfSl9KTtldS5kaXNwbGF5TmFtZT1lbzt2YXIgZWQ9Ik1lbnVSYWRpb0l0ZW0iLGVjPW4uZm9yd2FyZFJlZigoZSx0KT0+e2xldHt2YWx1ZTpyLC4uLm59PWUscz1lbChlZCxlLl9fc2NvcGVNZW51KSxvPXI9PT1zLnZhbHVlO3JldHVybigwLFQuanN4KShlcCx7c2NvcGU6ZS5fX3Njb3BlTWVudSxjaGVja2VkOm8sY2hpbGRyZW46KDAsVC5qc3gpKGVuLHtyb2xlOiJtZW51aXRlbXJhZGlvIiwiYXJpYS1jaGVja2VkIjpvLC4uLm4scmVmOnQsImRhdGEtc3RhdGUiOmVPKG8pLG9uU2VsZWN0OigwLGkubSkobi5vblNlbGVjdCwoKT0+e3ZhciBlO3JldHVybiBudWxsPT09KGU9cy5vblZhbHVlQ2hhbmdlKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5jYWxsKHMscil9LHtjaGVja0ZvckRlZmF1bHRQcmV2ZW50ZWQ6ITF9KX0pfSl9KTtlYy5kaXNwbGF5TmFtZT1lZDt2YXIgZWg9Ik1lbnVJdGVtSW5kaWNhdG9yIixbZXAsZWZdPUwoZWgse2NoZWNrZWQ6ITF9KSxlbT1uLmZvcndhcmRSZWYoKGUsdCk9PntsZXR7X19zY29wZU1lbnU6cixmb3JjZU1vdW50Om4sLi4uaX09ZSxzPWVmKGVoLHIpO3JldHVybigwLFQuanN4KShtLkMse3ByZXNlbnQ6bnx8ZUkocy5jaGVja2VkKXx8ITA9PT1zLmNoZWNrZWQsY2hpbGRyZW46KDAsVC5qc3gpKGcuc0cuc3Bhbix7Li4uaSxyZWY6dCwiZGF0YS1zdGF0ZSI6ZU8ocy5jaGVja2VkKX0pfSl9KTtlbS5kaXNwbGF5TmFtZT1laDt2YXIgZWc9bi5mb3J3YXJkUmVmKChlLHQpPT57bGV0e19fc2NvcGVNZW51OnIsLi4ubn09ZTtyZXR1cm4oMCxULmpzeCkoZy5zRy5kaXYse3JvbGU6InNlcGFyYXRvciIsImFyaWEtb3JpZW50YXRpb24iOiJob3Jpem9udGFsIiwuLi5uLHJlZjp0fSl9KTtlZy5kaXNwbGF5TmFtZT0iTWVudVNlcGFyYXRvciI7dmFyIGV5PW4uZm9yd2FyZFJlZigoZSx0KT0+e2xldHtfX3Njb3BlTWVudTpyLC4uLm59PWUsaT1CKHIpO3JldHVybigwLFQuanN4KShwLmkzLHsuLi5pLC4uLm4scmVmOnR9KX0pO2V5LmRpc3BsYXlOYW1lPSJNZW51QXJyb3ciO3ZhciBlYj0iTWVudVN1YiIsW2VfLGV2XT1MKGViKSxldz1lPT57bGV0e19fc2NvcGVNZW51OnQsY2hpbGRyZW46cixvcGVuOmk9ITEsb25PcGVuQ2hhbmdlOnN9PWUsbz1VKGViLHQpLGE9Qih0KSxbbCx1XT1uLnVzZVN0YXRlKG51bGwpLFtkLGNdPW4udXNlU3RhdGUobnVsbCksZj0oMCxfLmMpKHMpO3JldHVybiBuLnVzZUVmZmVjdCgoKT0+KCExPT09by5vcGVuJiZmKCExKSwoKT0+ZighMSkpLFtvLm9wZW4sZl0pLCgwLFQuanN4KShwLmJMLHsuLi5hLGNoaWxkcmVuOigwLFQuanN4KShNLHtzY29wZTp0LG9wZW46aSxvbk9wZW5DaGFuZ2U6Zixjb250ZW50OmQsb25Db250ZW50Q2hhbmdlOmMsY2hpbGRyZW46KDAsVC5qc3gpKGVfLHtzY29wZTp0LGNvbnRlbnRJZDooMCxoLkIpKCksdHJpZ2dlcklkOigwLGguQikoKSx0cmlnZ2VyOmwsb25UcmlnZ2VyQ2hhbmdlOnUsY2hpbGRyZW46cn0pfSl9KX07ZXcuZGlzcGxheU5hbWU9ZWI7dmFyIGVUPSJNZW51U3ViVHJpZ2dlciIsZVM9bi5mb3J3YXJkUmVmKChlLHQpPT57bGV0IHI9VShlVCxlLl9fc2NvcGVNZW51KSxzPVAoZVQsZS5fX3Njb3BlTWVudSksYT1ldihlVCxlLl9fc2NvcGVNZW51KSxsPUcoZVQsZS5fX3Njb3BlTWVudSksdT1uLnVzZVJlZihudWxsKSx7cG9pbnRlckdyYWNlVGltZXJSZWY6ZCxvblBvaW50ZXJHcmFjZUludGVudENoYW5nZTpjfT1sLGg9e19fc2NvcGVNZW51OmUuX19zY29wZU1lbnV9LHA9bi51c2VDYWxsYmFjaygoKT0+e3UuY3VycmVudCYmd2luZG93LmNsZWFyVGltZW91dCh1LmN1cnJlbnQpLHUuY3VycmVudD1udWxsfSxbXSk7cmV0dXJuIG4udXNlRWZmZWN0KCgpPT5wLFtwXSksbi51c2VFZmZlY3QoKCk9PntsZXQgZT1kLmN1cnJlbnQ7cmV0dXJuKCk9Pnt3aW5kb3cuY2xlYXJUaW1lb3V0KGUpLGMobnVsbCl9fSxbZCxjXSksKDAsVC5qc3gpKHose2FzQ2hpbGQ6ITAsLi4uaCxjaGlsZHJlbjooMCxULmpzeCkoZWkse2lkOmEudHJpZ2dlcklkLCJhcmlhLWhhc3BvcHVwIjoibWVudSIsImFyaWEtZXhwYW5kZWQiOnIub3BlbiwiYXJpYS1jb250cm9scyI6YS5jb250ZW50SWQsImRhdGEtc3RhdGUiOmVBKHIub3BlbiksLi4uZSxyZWY6KDAsby50KSh0LGEub25UcmlnZ2VyQ2hhbmdlKSxvbkNsaWNrOnQ9Pnt2YXIgbjtudWxsPT09KG49ZS5vbkNsaWNrKXx8dm9pZCAwPT09bnx8bi5jYWxsKGUsdCksZS5kaXNhYmxlZHx8dC5kZWZhdWx0UHJldmVudGVkfHwodC5jdXJyZW50VGFyZ2V0LmZvY3VzKCksci5vcGVufHxyLm9uT3BlbkNoYW5nZSghMCkpfSxvblBvaW50ZXJNb3ZlOigwLGkubSkoZS5vblBvaW50ZXJNb3ZlLGVSKHQ9PntsLm9uSXRlbUVudGVyKHQpLHQuZGVmYXVsdFByZXZlbnRlZHx8ZS5kaXNhYmxlZHx8ci5vcGVufHx1LmN1cnJlbnR8fChsLm9uUG9pbnRlckdyYWNlSW50ZW50Q2hhbmdlKG51bGwpLHUuY3VycmVudD13aW5kb3cuc2V0VGltZW91dCgoKT0+e3Iub25PcGVuQ2hhbmdlKCEwKSxwKCl9LDEwMCkpfSkpLG9uUG9pbnRlckxlYXZlOigwLGkubSkoZS5vblBvaW50ZXJMZWF2ZSxlUihlPT57dmFyIHQsbjtwKCk7bGV0IGk9bnVsbD09PSh0PXIuY29udGVudCl8fHZvaWQgMD09PXQ/dm9pZCAwOnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7aWYoaSl7bGV0IHQ9bnVsbD09PShuPXIuY29udGVudCl8fHZvaWQgMD09PW4/dm9pZCAwOm4uZGF0YXNldC5zaWRlLHM9InJpZ2h0Ij09PXQsbz1pW3M/ImxlZnQiOiJyaWdodCJdLGE9aVtzPyJyaWdodCI6ImxlZnQiXTtsLm9uUG9pbnRlckdyYWNlSW50ZW50Q2hhbmdlKHthcmVhOlt7eDplLmNsaWVudFgrKHM/LTU6NSkseTplLmNsaWVudFl9LHt4Om8seTppLnRvcH0se3g6YSx5OmkudG9wfSx7eDphLHk6aS5ib3R0b219LHt4Om8seTppLmJvdHRvbX1dLHNpZGU6dH0pLHdpbmRvdy5jbGVhclRpbWVvdXQoZC5jdXJyZW50KSxkLmN1cnJlbnQ9d2luZG93LnNldFRpbWVvdXQoKCk9Pmwub25Qb2ludGVyR3JhY2VJbnRlbnRDaGFuZ2UobnVsbCksMzAwKX1lbHNle2lmKGwub25UcmlnZ2VyTGVhdmUoZSksZS5kZWZhdWx0UHJldmVudGVkKXJldHVybjtsLm9uUG9pbnRlckdyYWNlSW50ZW50Q2hhbmdlKG51bGwpfX0pKSxvbktleURvd246KDAsaS5tKShlLm9uS2V5RG93bix0PT57bGV0IG49IiIhPT1sLnNlYXJjaFJlZi5jdXJyZW50O2lmKCFlLmRpc2FibGVkJiYoIW58fCIgIiE9PXQua2V5KSYmQVtzLmRpcl0uaW5jbHVkZXModC5rZXkpKXt2YXIgaTtyLm9uT3BlbkNoYW5nZSghMCksbnVsbD09PShpPXIuY29udGVudCl8fHZvaWQgMD09PWl8fGkuZm9jdXMoKSx0LnByZXZlbnREZWZhdWx0KCl9fSl9KX0pfSk7ZVMuZGlzcGxheU5hbWU9ZVQ7dmFyIGVFPSJNZW51U3ViQ29udGVudCIsZXg9bi5mb3J3YXJkUmVmKChlLHQpPT57bGV0IHI9WihWLGUuX19zY29wZU1lbnUpLHtmb3JjZU1vdW50OnM9ci5mb3JjZU1vdW50LC4uLmF9PWUsbD1VKFYsZS5fX3Njb3BlTWVudSksdT1QKFYsZS5fX3Njb3BlTWVudSksZD1ldihlRSxlLl9fc2NvcGVNZW51KSxjPW4udXNlUmVmKG51bGwpLGg9KDAsby5zKSh0LGMpO3JldHVybigwLFQuanN4KShSLlByb3ZpZGVyLHtzY29wZTplLl9fc2NvcGVNZW51LGNoaWxkcmVuOigwLFQuanN4KShtLkMse3ByZXNlbnQ6c3x8bC5vcGVuLGNoaWxkcmVuOigwLFQuanN4KShSLlNsb3Qse3Njb3BlOmUuX19zY29wZU1lbnUsY2hpbGRyZW46KDAsVC5qc3gpKEsse2lkOmQuY29udGVudElkLCJhcmlhLWxhYmVsbGVkYnkiOmQudHJpZ2dlcklkLC4uLmEscmVmOmgsYWxpZ246InN0YXJ0IixzaWRlOiJydGwiPT09dS5kaXI/ImxlZnQiOiJyaWdodCIsZGlzYWJsZU91dHNpZGVQb2ludGVyRXZlbnRzOiExLGRpc2FibGVPdXRzaWRlU2Nyb2xsOiExLHRyYXBGb2N1czohMSxvbk9wZW5BdXRvRm9jdXM6ZT0+e3ZhciB0O3UuaXNVc2luZ0tleWJvYXJkUmVmLmN1cnJlbnQmJihudWxsPT09KHQ9Yy5jdXJyZW50KXx8dm9pZCAwPT09dHx8dC5mb2N1cygpKSxlLnByZXZlbnREZWZhdWx0KCl9LG9uQ2xvc2VBdXRvRm9jdXM6ZT0+ZS5wcmV2ZW50RGVmYXVsdCgpLG9uRm9jdXNPdXRzaWRlOigwLGkubSkoZS5vbkZvY3VzT3V0c2lkZSxlPT57ZS50YXJnZXQhPT1kLnRyaWdnZXImJmwub25PcGVuQ2hhbmdlKCExKX0pLG9uRXNjYXBlS2V5RG93bjooMCxpLm0pKGUub25Fc2NhcGVLZXlEb3duLGU9Pnt1Lm9uQ2xvc2UoKSxlLnByZXZlbnREZWZhdWx0KCl9KSxvbktleURvd246KDAsaS5tKShlLm9uS2V5RG93bixlPT57bGV0IHQ9ZS5jdXJyZW50VGFyZ2V0LmNvbnRhaW5zKGUudGFyZ2V0KSxyPUlbdS5kaXJdLmluY2x1ZGVzKGUua2V5KTtpZih0JiZyKXt2YXIgbjtsLm9uT3BlbkNoYW5nZSghMSksbnVsbD09PShuPWQudHJpZ2dlcil8fHZvaWQgMD09PW58fG4uZm9jdXMoKSxlLnByZXZlbnREZWZhdWx0KCl9fSl9KX0pfSl9KX0pO2Z1bmN0aW9uIGVBKGUpe3JldHVybiBlPyJvcGVuIjoiY2xvc2VkIn1mdW5jdGlvbiBlSShlKXtyZXR1cm4iaW5kZXRlcm1pbmF0ZSI9PT1lfWZ1bmN0aW9uIGVPKGUpe3JldHVybiBlSShlKT8iaW5kZXRlcm1pbmF0ZSI6ZT8iY2hlY2tlZCI6InVuY2hlY2tlZCJ9ZnVuY3Rpb24gZVIoZSl7cmV0dXJuIHQ9PiJtb3VzZSI9PT10LnBvaW50ZXJUeXBlP2UodCk6dm9pZCAwfWV4LmRpc3BsYXlOYW1lPWVFO3ZhciBlTj1qLGVDPXosZUw9VyxlRD1YLGVCPVEsZWs9ZWUsZU09ZW4sZVU9ZXMsZUY9ZXUsZVA9ZWMsZWo9ZW0sZXo9ZWcsZSQ9ZXksZUg9ZXcsZVo9ZVMsZVc9ZXh9LDE1NDUwOihlLHQscik9PnsidXNlIHN0cmljdCI7ci5kKHQse0I6KCk9Pmx9KTt2YXIgbixpPXIoNDAxNykscz1yKDYyMTI2KSxvPShufHwobj1yLnQoaSwyKSkpWyJ1c2VJZCIudG9TdHJpbmcoKV18fCgoKT0+dm9pZCAwKSxhPTA7ZnVuY3Rpb24gbChlKXtsZXRbdCxyXT1pLnVzZVN0YXRlKG8oKSk7cmV0dXJuKDAscy5OKSgoKT0+e2V8fHIoZT0+ZT8/U3RyaW5nKGErKykpfSxbZV0pLGV8fCh0P2ByYWRpeC0ke3R9YDoiIil9fSwxNTYzODooZSx0LHIpPT57InVzZSBzdHJpY3QiO3IuZCh0LHtBOigpPT5ufSk7bGV0IG49KDAscig2NDI4NikuQSkoIldhbmRTcGFya2xlcyIsW1sicGF0aCIse2Q6Im0yMS42NCAzLjY0LTEuMjgtMS4yOGExLjIxIDEuMjEgMCAwIDAtMS43MiAwTDIuMzYgMTguNjRhMS4yMSAxLjIxIDAgMCAwIDAgMS43MmwxLjI4IDEuMj"
     ""
     ""
     ""
     ""
     ""
     ""
     "xldGVfZGV0YWlscyk/dm9pZCAwOmkucmVhc29uLGhhc1Rvb2xDYWxsczp5Lmxlbmd0aD4wfSksdG9vbENhbGxzOnkubGVuZ3RoPjA/eTp2b2lkIDAscmVhc29uaW5nOmI/Yi5tYXAoZT0+KHt0eXBlOiJ0ZXh0Iix0ZXh0OmUudGV4dH0pKTp2b2lkIDAsdXNhZ2U6e3Byb21wdFRva2VuczpmLnVzYWdlLmlucHV0X3Rva2Vucyxjb21wbGV0aW9uVG9rZW5zOmYudXNhZ2Uub3V0cHV0X3Rva2Vuc30scmF3Q2FsbDp7cmF3UHJvbXB0OnZvaWQgMCxyYXdTZXR0aW5nczp7fX0scmF3UmVzcG9uc2U6e2hlYWRlcnM6cCxib2R5Om19LHJlcXVlc3Q6e2JvZHk6SlNPTi5zdHJpbmdpZnkoYyl9LHJlc3BvbnNlOntpZDpmLmlkLHRpbWVzdGFtcDpuZXcgRGF0ZSgxZTMqZi5jcmVhdGVkX2F0KSxtb2RlbElkOmYubW9kZWx9LHByb3ZpZGVyTWV0YWRhdGE6e29wZW5haTp7cmVzcG9uc2VJZDpmLmlkLGNhY2hlZFByb21wdFRva2VuczpudWxsIT0oYT1udWxsPT0obz1mLnVzYWdlLmlucHV0X3Rva2Vuc19kZXRhaWxzKT92b2lkIDA6by5jYWNoZWRfdG9rZW5zKT9hOm51bGwscmVhc29uaW5nVG9rZW5zOm51bGwhPShkPW51bGw9PShsPWYudXNhZ2Uub3V0cHV0X3Rva2Vuc19kZXRhaWxzKT92b2lkIDA6bC5yZWFzb25pbmdfdG9rZW5zKT9kOm51bGx9fSx3YXJuaW5nczpofX1hc3luYyBkb1N0cmVhbShlKXtsZXR7YXJnczp0LHdhcm5pbmdzOnJ9PXRoaXMuZ2V0QXJncyhlKSx7cmVzcG9uc2VIZWFkZXJzOmksdmFsdWU6c309YXdhaXQgKDAsbi5HVSkoe3VybDp0aGlzLmNvbmZpZy51cmwoe3BhdGg6Ii9yZXNwb25zZXMiLG1vZGVsSWQ6dGhpcy5tb2RlbElkfSksaGVhZGVyczooMCxuLm0yKSh0aGlzLmNvbmZpZy5oZWFkZXJzKCksZS5oZWFkZXJzKSxib2R5OnsuLi50LHN0cmVhbTohMH0sZmFpbGVkUmVzcG9uc2VIYW5kbGVyOnUsc3VjY2Vzc2Z1bFJlc3BvbnNlSGFuZGxlcjooMCxuLkRzKSgkKSxhYm9ydFNpZ25hbDplLmFib3J0U2lnbmFsLGZldGNoOnRoaXMuY29uZmlnLmZldGNofSksbz10aGlzLGE9InVua25vd24iLGw9TmFOLGQ9TmFOLGM9bnVsbCxoPW51bGwscD1udWxsLGY9e30sbT0hMTtyZXR1cm57c3RyZWFtOnMucGlwZVRocm91Z2gobmV3IFRyYW5zZm9ybVN0cmVhbSh7dHJhbnNmb3JtKGUsdCl7dmFyIHIsaSxzLHUsZyx5LGIsXyx2O2lmKCFlLnN1Y2Nlc3Mpe2E9ImVycm9yIix0LmVucXVldWUoe3R5cGU6ImVycm9yIixlcnJvcjplLmVycm9yfSk7cmV0dXJufWxldCB3PWUudmFsdWU7aWYoInJlc3BvbnNlLm91dHB1dF9pdGVtLmFkZGVkIj09PXcudHlwZSkiZnVuY3Rpb25fY2FsbCI9PT13Lml0ZW0udHlwZSYmKGZbdy5vdXRwdXRfaW5kZXhdPXt0b29sTmFtZTp3Lml0ZW0ubmFtZSx0b29sQ2FsbElkOncuaXRlbS5jYWxsX2lkfSx0LmVucXVldWUoe3R5cGU6InRvb2wtY2FsbC1kZWx0YSIsdG9vbENhbGxUeXBlOiJmdW5jdGlvbiIsdG9vbENhbGxJZDp3Lml0ZW0uY2FsbF9pZCx0b29sTmFtZTp3Lml0ZW0ubmFtZSxhcmdzVGV4dERlbHRhOncuaXRlbS5hcmd1bWVudHN9KSk7ZWxzZSBpZigicmVzcG9uc2UuZnVuY3Rpb25fY2FsbF9hcmd1bWVudHMuZGVsdGEiPT09dy50eXBlKXtsZXQgZT1mW3cub3V0cHV0X2luZGV4XTtudWxsIT1lJiZ0LmVucXVldWUoe3R5cGU6InRvb2wtY2FsbC1kZWx0YSIsdG9vbENhbGxUeXBlOiJmdW5jdGlvbiIsdG9vbENhbGxJZDplLnRvb2xDYWxsSWQsdG9vbE5hbWU6ZS50b29sTmFtZSxhcmdzVGV4dERlbHRhOncuZGVsdGF9KX1lbHNleyJyZXNwb25zZS5jcmVhdGVkIj09PXcudHlwZT8ocD13LnJlc3BvbnNlLmlkLHQuZW5xdWV1ZSh7dHlwZToicmVzcG9uc2UtbWV0YWRhdGEiLGlkOncucmVzcG9uc2UuaWQsdGltZXN0YW1wOm5ldyBEYXRlKDFlMyp3LnJlc3BvbnNlLmNyZWF0ZWRfYXQpLG1vZGVsSWQ6dy5yZXNwb25zZS5tb2RlbH0pKToicmVzcG9uc2Uub3V0cHV0X3RleHQuZGVsdGEiPT09dy50eXBlP3QuZW5xdWV1ZSh7dHlwZToidGV4dC1kZWx0YSIsdGV4dERlbHRhOncuZGVsdGF9KToicmVzcG9uc2UucmVhc29uaW5nX3N1bW1hcnlfdGV4dC5kZWx0YSI9PT13LnR5cGU/dC5lbnF1ZXVlKHt0eXBlOiJyZWFzb25pbmciLHRleHREZWx0YTp3LmRlbHRhfSk6InJlc3BvbnNlLm91dHB1dF9pdGVtLmRvbmUiPT09dy50eXBlJiYiZnVuY3Rpb25fY2FsbCI9PT13Lml0ZW0udHlwZT8oZlt3Lm91dHB1dF9pbmRleF09dm9pZCAwLG09ITAsdC5lbnF1ZXVlKHt0eXBlOiJ0b29sLWNhbGwiLHRvb2xDYWxsVHlwZToiZnVuY3Rpb24iLHRvb2xDYWxsSWQ6dy5pdGVtLmNhbGxfaWQsdG9vbE5hbWU6dy5pdGVtLm5hbWUsYXJnczp3Lml0ZW0uYXJndW1lbnRzfSkpOiJyZXNwb25zZS5jb21wbGV0ZWQiPT09KHY9dykudHlwZXx8InJlc3BvbnNlLmluY29tcGxldGUiPT09di50eXBlPyhhPUMoe2ZpbmlzaFJlYXNvbjpudWxsPT0ocj13LnJlc3BvbnNlLmluY29tcGxldGVfZGV0YWlscyk/dm9pZCAwOnIucmVhc29uLGhhc1Rvb2xDYWxsczptfSksbD13LnJlc3BvbnNlLnVzYWdlLmlucHV0X3Rva2VucyxkPXcucmVzcG9uc2UudXNhZ2Uub3V0cHV0X3Rva2VucyxjPW51bGwhPShzPW51bGw9PShpPXcucmVzcG9uc2UudXNhZ2UuaW5wdXRfdG9rZW5zX2RldGFpbHMpP3ZvaWQgMDppLmNhY2hlZF90b2tlbnMpP3M6YyxoPW51bGwhPShnPW51bGw9PSh1PXcucmVzcG9uc2UudXNhZ2Uub3V0cHV0X3Rva2Vuc19kZXRhaWxzKT92b2lkIDA6dS5yZWFzb25pbmdfdG9rZW5zKT9nOmgpOiJyZXNwb25zZS5vdXRwdXRfdGV4dC5hbm5vdGF0aW9uLmFkZGVkIj09PXcudHlwZSYmdC5lbnF1ZXVlKHt0eXBlOiJzb3VyY2UiLHNvdXJjZTp7c291cmNlVHlwZToidXJsIixpZDpudWxsIT0oXz1udWxsPT0oYj0oeT1vLmNvbmZpZykuZ2VuZXJhdGVJZCk/dm9pZCAwOmIuY2FsbCh5KSk/XzooMCxuLiRDKSgpLHVybDp3LmFubm90YXRpb24udXJsLHRpdGxlOncuYW5ub3RhdGlvbi50aXRsZX19KX19LGZsdXNoKGUpe2UuZW5xdWV1ZSh7dHlwZToiZmluaXNoIixmaW5pc2hSZWFzb246YSx1c2FnZTp7cHJvbXB0VG9rZW5zOmwsY29tcGxldGlvblRva2VuczpkfSwuLi4obnVsbCE9Y3x8bnVsbCE9aCkmJntwcm92aWRlck1ldGFkYXRhOntvcGVuYWk6e3Jlc3BvbnNlSWQ6cCxjYWNoZWRQcm9tcHRUb2tlbnM6YyxyZWFzb25pbmdUb2tlbnM6aH19fX0pfX0pKSxyYXdDYWxsOntyYXdQcm9tcHQ6dm9pZCAwLHJhd1NldHRpbmdzOnt9fSxyYXdSZXNwb25zZTp7aGVhZGVyczppfSxyZXF1ZXN0Ontib2R5OkpTT04uc3RyaW5naWZ5KHQpfSx3YXJuaW5nczpyfX19LEQ9cy56Lm9iamVjdCh7aW5wdXRfdG9rZW5zOnMuei5udW1iZXIoKSxpbnB1dF90b2tlbnNfZGV0YWlsczpzLnoub2JqZWN0KHtjYWNoZWRfdG9rZW5zOnMuei5udW1iZXIoKS5udWxsaXNoKCl9KS5udWxsaXNoKCksb3V0cHV0X3Rva2VuczpzLnoubnVtYmVyKCksb3V0cHV0X3Rva2Vuc19kZXRhaWxzOnMuei5vYmplY3Qoe3JlYXNvbmluZ190b2tlbnM6cy56Lm51bWJlcigpLm51bGxpc2goKX0pLm51bGxpc2goKX0pLEI9cy56Lm9iamVjdCh7dHlwZTpzLnoubGl0ZXJhbCgicmVzcG9uc2Uub3V0cHV0X3RleHQuZGVsdGEiKSxkZWx0YTpzLnouc3RyaW5nKCl9KSxrPXMuei5vYmplY3Qoe3R5cGU6cy56LmVudW0oWyJyZXNwb25zZS5jb21wbGV0ZWQiLCJyZXNwb25zZS5pbmNvbXBsZXRlIl0pLHJlc3BvbnNlOnMuei5vYmplY3Qoe2luY29tcGxldGVfZGV0YWlsczpzLnoub2JqZWN0KHtyZWFzb246cy56LnN0cmluZygpfSkubnVsbGlzaCgpLHVzYWdlOkR9KX0pLE09cy56Lm9iamVjdCh7dHlwZTpzLnoubGl0ZXJhbCgicmVzcG9uc2UuY3JlYXRlZCIpLHJlc3BvbnNlOnMuei5vYmplY3Qoe2lkOnMuei5zdHJpbmcoKSxjcmVhdGVkX2F0OnMuei5udW1iZXIoKSxtb2RlbDpzLnouc3RyaW5nKCl9KX0pLFU9cy56Lm9iamVjdCh7dHlwZTpzLnoubGl0ZXJhbCgicmVzcG9uc2Uub3V0cHV0X2l0ZW0uZG9uZSIpLG91dHB1dF9pbmRleDpzLnoubnVtYmVyKCksaXRlbTpzLnouZGlzY3JpbWluYXRlZFVuaW9uKCJ0eXBlIixbcy56Lm9iamVjdCh7dHlwZTpzLnoubGl0ZXJhbCgibWVzc2FnZSIpfSkscy56Lm9iamVjdCh7dHlwZTpzLnoubGl0ZXJhbCgiZnVuY3Rpb25fY2FsbCIpLGlkOnMuei5zdHJpbmcoKSxjYWxsX2lkOnMuei5zdHJpbmcoKSxuYW1lOnMuei5zdHJpbmcoKSxhcmd1bWVudHM6cy56LnN0cmluZygpLHN0YXR1czpzLnoubGl0ZXJhbCgiY29tcGxldGVkIil9KV0pfSksRj1zLnoub2JqZWN0KHt0eXBlOnMuei5saXRlcmFsKCJyZXNwb25zZS5mdW5jdGlvbl9jYWxsX2FyZ3VtZW50cy5kZWx0YSIpLGl0ZW1faWQ6cy56LnN0cmluZygpLG91dHB1dF9pbmRleDpzLnoubnVtYmVyKCksZGVsdGE6cy56LnN0cmluZygpfSksUD1zLnoub2JqZWN0KHt0eXBlOnMuei5saXRlcmFsKCJyZXNwb25zZS5vdXRwdXRfaXRlbS5hZGRlZCIpLG91dHB1dF9pbmRleDpzLnoubnVtYmVyKCksaXRlbTpzLnouZGlzY3JpbWluYXRlZFVuaW9uKCJ0eXBlIixbcy56Lm9iamVjdCh7dHlwZTpzLnoubGl0ZXJhbCgibWVzc2FnZSIpfSkscy56Lm9iamVjdCh7dHlwZTpzLnoubGl0ZXJhbCgiZnVuY3Rpb25fY2FsbCIpLGlkOnMuei5zdHJpbmcoKSxjYWxsX2lkOnMuei5zdHJpbmcoKSxuYW1lOnMuei5zdHJpbmcoKSxhcmd1bWVudHM6cy56LnN0cmluZygpfSldKX0pLGo9cy56Lm9iamVjdCh7dHlwZTpzLnoubGl0ZXJhbCgicmVzcG9uc2Uub3V0cHV0X3RleHQuYW5ub3RhdGlvbi5hZGRlZCIpLGFubm90YXRpb246cy56Lm9iamVjdCh7dHlwZTpzLnoubGl0ZXJhbCgidXJsX2NpdGF0aW9uIiksdXJsOnMuei5zdHJpbmcoKSx0aXRsZTpzLnouc3RyaW5nKCl9KX0pLHo9cy56Lm9iamVjdCh7dHlwZTpzLnoubGl0ZXJhbCgicmVzcG9uc2UucmVhc29uaW5nX3N1bW1hcnlfdGV4dC5kZWx0YSIpLGl0ZW1faWQ6cy56LnN0cmluZygpLG91dHB1dF9pbmRleDpzLnoubnVtYmVyKCksc3VtbWFyeV9pbmRleDpzLnoubnVtYmVyKCksZGVsdGE6cy56LnN0cmluZygpfSksJD1zLnoudW5pb24oW0IsayxNLFUsRixQLGoseixzLnoub2JqZWN0KHt0eXBlOnMuei5zdHJpbmcoKX0pLnBhc3N0aHJvdWdoKCldKSxIPXMuei5vYmplY3Qoe21ldGFkYXRhOnMuei5hbnkoKS5udWxsaXNoKCkscGFyYWxsZWxUb29sQ2FsbHM6cy56LmJvb2xlYW4oKS5udWxsaXNoKCkscHJldmlvdXNSZXNwb25zZUlkOnMuei5zdHJpbmcoKS5udWxsaXNoKCksc3RvcmU6cy56LmJvb2xlYW4oKS5udWxsaXNoKCksdXNlcjpzLnouc3RyaW5nKCkubnVsbGlzaCgpLHJlYXNvbmluZ0VmZm9ydDpzLnouc3RyaW5nKCkubnVsbGlzaCgpLHN0cmljdFNjaGVtYXM6cy56LmJvb2xlYW4oKS5udWxsaXNoKCksaW5zdHJ1Y3Rpb25zOnMuei5zdHJpbmcoKS5udWxsaXNoKCkscmVhc29uaW5nU3VtbWFyeTpzLnouc3RyaW5nKCkubnVsbGlzaCgpfSksWj1zLnoub2JqZWN0KHt9KSxXPXt3ZWJTZWFyY2hQcmV2aWV3OmZ1bmN0aW9uKHtzZWFyY2hDb250ZXh0U2l6ZTplLHVzZXJMb2NhdGlvbjp0fT17fSl7cmV0dXJue3R5cGU6InByb3ZpZGVyLWRlZmluZWQiLGlkOiJvcGVuYWkud2ViX3NlYXJjaF9wcmV2aWV3IixhcmdzOntzZWFyY2hDb250ZXh0U2l6ZTplLHVzZXJMb2NhdGlvbjp0fSxwYXJhbWV0ZXJzOlp9fX0sVj1zLnoub2JqZWN0KHtpbnN0cnVjdGlvbnM6cy56LnN0cmluZygpLm51bGxpc2goKSxzcGVlZDpzLnoubnVtYmVyKCkubWluKC4yNSkubWF4KDQpLmRlZmF1bHQoMSkubnVsbGlzaCgpfSksWT1jbGFzc3tjb25zdHJ1Y3RvcihlLHQpe3RoaXMubW9kZWxJZD1lLHRoaXMuY29uZmlnPXQsdGhpcy5zcGVjaWZpY2F0aW9uVmVyc2lvbj0idjEifWdldCBwcm92aWRlcigpe3JldHVybiB0aGlzLmNvbmZpZy5wcm92aWRlcn1nZXRBcmdzKHt0ZXh0OmUsdm9pY2U6dD0iYWxsb3kiLG91dHB1dEZvcm1hdDpyPSJtcDMiLHNwZWVkOmksaW5zdHJ1Y3Rpb25zOnMscHJvdmlkZXJPcHRpb25zOm99KXtsZXQgYT1bXSxsPSgwLG4ueEkpKHtwcm92aWRlcjoib3BlbmFpIixwcm92aWRlck9wdGlvbnM6byxzY2hlbWE6Vn0pLHU9e21vZGVsOnRoaXMubW9kZWxJZCxpbnB1dDplLHZvaWNlOnQscmVzcG9uc2VfZm9ybWF0OiJtcDMiLHNwZWVkOmksaW5zdHJ1Y3Rpb25zOnN9O2lmKHImJihbIm1wMyIsIm9wdXMiLCJhYWMiLCJmbGFjIiwid2F2IiwicGNtIl0uaW5j"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "09dGhpcyl7bGV0IGU9cy5Eb2NrTG9jYXRpb24uQ0VOVEVSLHQ9dGhpcy5fdGFiSGVhZGVyUmVjdDtuPW5ldyBvLkRyb3BJbmZvKHRoaXMsdCxlLC0xLHUuQ0xBU1NFUy5GTEVYTEFZT1VUX19PVVRMSU5FX1JFQ1QpfWVsc2UgaWYodGhpcy5fY29udGVudFJlY3QuY29udGFpbnModCxyKSl7bGV0IGU9cy5Eb2NrTG9jYXRpb24uQ0VOVEVSO3ZvaWQgMD09PXRoaXMuX21vZGVsLmdldE1heGltaXplZFRhYnNldCgpJiYoZT1zLkRvY2tMb2NhdGlvbi5nZXRMb2NhdGlvbih0aGlzLl9jb250ZW50UmVjdCx0LHIpKTtsZXQgaT1lLmdldERvY2tSZWN0KHRoaXMuX3JlY3QpO249bmV3IG8uRHJvcEluZm8odGhpcyxpLGUsLTEsdS5DTEFTU0VTLkZMRVhMQVlPVVRfX09VVExJTkVfUkVDVCl9ZWxzZSBpZihudWxsIT10aGlzLl90YWJIZWFkZXJSZWN0JiZ0aGlzLl90YWJIZWFkZXJSZWN0LmNvbnRhaW5zKHQscikpe2xldCBlLHIsaTtpZigwPT09dGhpcy5fY2hpbGRyZW4ubGVuZ3RoKXI9KGU9dGhpcy5fdGFiSGVhZGVyUmVjdC5jbG9uZSgpKS55KzMsaT1lLmhlaWdodC00LGUud2lkdGg9MjtlbHNle2xldCBhPXRoaXMuX2NoaWxkcmVuWzBdO3I9KGU9YS5nZXRUYWJSZWN0KCkpLnksaT1lLmhlaWdodDtsZXQgZD10aGlzLl90YWJIZWFkZXJSZWN0LngsYz0wO2ZvcihsZXQgaD0wO2g8dGhpcy5fY2hpbGRyZW4ubGVuZ3RoO2grKyl7aWYoYz0oZT0oYT10aGlzLl9jaGlsZHJlbltoXSkuZ2V0VGFiUmVjdCgpKS54K2Uud2lkdGgvMix0Pj1kJiZ0PGMpe2xldCB0PXMuRG9ja0xvY2F0aW9uLkNFTlRFUixhPW5ldyBsLlJlY3QoZS54LTIsciwzLGkpO249bmV3IG8uRHJvcEluZm8odGhpcyxhLHQsaCx1LkNMQVNTRVMuRkxFWExBWU9VVF9fT1VUTElORV9SRUNUKTticmVha31kPWN9fWlmKG51bGw9PW4pe2xldCB0PXMuRG9ja0xvY2F0aW9uLkNFTlRFUixhPW5ldyBsLlJlY3QoZS5nZXRSaWdodCgpLTIsciwzLGkpO249bmV3IG8uRHJvcEluZm8odGhpcyxhLHQsdGhpcy5fY2hpbGRyZW4ubGVuZ3RoLHUuQ0xBU1NFUy5GTEVYTEFZT1VUX19PVVRMSU5FX1JFQ1QpfX1pZihlLl9jYW5Eb2NrSW50byhlLG4pKXJldHVybiBufV9sYXlvdXQoZSx0KXt0aGlzLmNhbGN1bGF0ZUhlYWRlckJhckhlaWdodCh0KSx0aGlzLmNhbGN1bGF0ZVRhYkJhckhlaWdodCh0KSx0aGlzLmlzTWF4aW1pemVkKCkmJihlPXRoaXMuX21vZGVsLmdldFJvb3QoKS5nZXRSZWN0KCkpLGU9ZS5yZW1vdmVJbnNldHModGhpcy5fZ2V0QXR0cigibWFyZ2luSW5zZXRzIikpLHRoaXMuX3JlY3Q9ZSxlPWUucmVtb3ZlSW5zZXRzKHRoaXMuX2dldEF0dHIoImJvcmRlckluc2V0cyIpKTtsZXQgcj12b2lkIDAhPT10aGlzLmdldE5hbWUoKSxuPTAsaT0wO3ImJihuKz10aGlzLl9jYWxjdWxhdGVkSGVhZGVyQmFySGVpZ2h0LGkrPXRoaXMuX2NhbGN1bGF0ZWRIZWFkZXJCYXJIZWlnaHQpLHRoaXMuaXNFbmFibGVUYWJTdHJpcCgpJiYoInRvcCI9PT10aGlzLmdldFRhYkxvY2F0aW9uKCk/dGhpcy5fdGFiSGVhZGVyUmVjdD1uZXcgbC5SZWN0KGUueCxlLnkrbixlLndpZHRoLHRoaXMuX2NhbGN1bGF0ZWRUYWJCYXJIZWlnaHQpOnRoaXMuX3RhYkhlYWRlclJlY3Q9bmV3IGwuUmVjdChlLngsZS55K2UuaGVpZ2h0LXRoaXMuX2NhbGN1bGF0ZWRUYWJCYXJIZWlnaHQsZS53aWR0aCx0aGlzLl9jYWxjdWxhdGVkVGFiQmFySGVpZ2h0KSxpKz10aGlzLl9jYWxjdWxhdGVkVGFiQmFySGVpZ2h0LCJ0b3AiPT09dGhpcy5nZXRUYWJMb2NhdGlvbigpJiYobis9dGhpcy5fY2FsY3VsYXRlZFRhYkJhckhlaWdodCkpLHRoaXMuX2NvbnRlbnRSZWN0PW5ldyBsLlJlY3QoZS54LGUueStuLGUud2lkdGgsZS5oZWlnaHQtaSk7Zm9yKGxldCBlPTA7ZTx0aGlzLl9jaGlsZHJlbi5sZW5ndGg7ZSsrKXtsZXQgcj10aGlzLl9jaGlsZHJlbltlXTtyLl9sYXlvdXQodGhpcy5fY29udGVudFJlY3QsdCksci5fc2V0VmlzaWJsZShlPT09dGhpcy5nZXRTZWxlY3RlZCgpKX19X2RlbGV0ZSgpe3RoaXMuX3BhcmVudC5fcmVtb3ZlQ2hpbGQodGhpcyl9X3JlbW92ZShlKXtsZXQgdD10aGlzLl9yZW1vdmVDaGlsZChlKTt0aGlzLl9tb2RlbC5fdGlkeSgpLCgwLGYuYWRqdXN0U2VsZWN0ZWRJbmRleCkodGhpcyx0KX1kcm9wKGUsdCxyLG4pe2lmKHRoaXM9PT1lKXJldHVybjtsZXQgaT1lLmdldFBhcmVudCgpLG89MDtpZih2b2lkIDAhPT1pJiYobz1pLl9yZW1vdmVDaGlsZChlKSxpIGluc3RhbmNlb2YgZC5Cb3JkZXJOb2RlJiZpLmdldFNlbGVjdGVkKCk9PT1vP2kuX3NldFNlbGVjdGVkKC0xKTooMCxmLmFkanVzdFNlbGVjdGVkSW5kZXgpKGksbykpLGUuZ2V0VHlwZSgpPT09cC5UYWJOb2RlLlRZUEUmJmk9PT10aGlzJiZvPHImJnI+MCYmci0tLHQ9PT1zLkRvY2tMb2NhdGlvbi5DRU5URVIpe2xldCB0PXI7aWYoLTE9PT10JiYodD10aGlzLl9jaGlsZHJlbi5sZW5ndGgpLGUuZ2V0VHlwZSgpPT09cC5UYWJOb2RlLlRZUEUpdGhpcy5fYWRkQ2hpbGQoZSx0KSwobnx8ITEhPT1uJiZ0aGlzLmlzQXV0b1NlbGVjdFRhYigpKSYmdGhpcy5fc2V0U2VsZWN0ZWQodCk7ZWxzZXtmb3IobGV0IHI9MDtyPGUuZ2V0Q2hpbGRyZW4oKS5sZW5ndGg7cisrKXtsZXQgbj1lLmdldENoaWxkcmVuKClbcl07dGhpcy5fYWRkQ2hpbGQobix0KSx0Kyt9LTE9PT10aGlzLmdldFNlbGVjdGVkKCkmJnRoaXMuX2NoaWxkcmVuLmxlbmd0aD4wJiZ0aGlzLl9zZXRTZWxlY3RlZCgwKX10aGlzLl9tb2RlbC5fc2V0QWN0aXZlVGFic2V0KHRoaXMpfWVsc2V7bGV0IHI7aWYoZSBpbnN0YW5jZW9mIHAuVGFiTm9kZSl7bGV0IHQ9dGhpcy5fbW9kZWwuX2dldE9uQ3JlYXRlVGFiU2V0KCk7KHI9bmV3IG0odGhpcy5fbW9kZWwsdD90KGUpOnt9KSkuX2FkZENoaWxkKGUpLGk9cn1lbHNlIHI9ZTtsZXQgbj10aGlzLl9wYXJlbnQscz1uLmdldENoaWxkcmVuKCkuaW5kZXhPZih0aGlzKTtpZihuLmdldE9yaWVudGF0aW9uKCk9PT10Ll9vcmllbnRhdGlvbilyLl9zZXRXZWlnaHQodGhpcy5nZXRXZWlnaHQoKS8yKSx0aGlzLl9zZXRXZWlnaHQodGhpcy5nZXRXZWlnaHQoKS8yKSxuLl9hZGRDaGlsZChyLHMrdC5faW5kZXhQbHVzKTtlbHNle2xldCBlPW5ldyBoLlJvd05vZGUodGhpcy5fbW9kZWwse30pO2UuX3NldFdlaWdodCh0aGlzLmdldFdlaWdodCgpKSxlLl9hZGRDaGlsZCh0aGlzKSx0aGlzLl9zZXRXZWlnaHQoNTApLHIuX3NldFdlaWdodCg1MCksZS5fYWRkQ2hpbGQocix0Ll9pbmRleFBsdXMpLG4uX3JlbW92ZUNoaWxkKHRoaXMpLG4uX2FkZENoaWxkKGUscyl9dGhpcy5fbW9kZWwuX3NldEFjdGl2ZVRhYnNldChyKX10aGlzLl9tb2RlbC5fdGlkeSgpfXRvSnNvbigpe2xldCBlPXt9O3JldHVybiBtLl9hdHRyaWJ1dGVEZWZpbml0aW9ucy50b0pzb24oZSx0aGlzLl9hdHRyaWJ1dGVzKSxlLmNoaWxkcmVuPXRoaXMuX2NoaWxkcmVuLm1hcChlPT5lLnRvSnNvbigpKSx0aGlzLmlzQWN0aXZlKCkmJihlLmFjdGl2ZT0hMCksdGhpcy5pc01heGltaXplZCgpJiYoZS5tYXhpbWl6ZWQ9ITApLGV9X3VwZGF0ZUF0dHJzKGUpe20uX2F0dHJpYnV0ZURlZmluaXRpb25zLnVwZGF0ZShlLHRoaXMuX2F0dHJpYnV0ZXMpfV9nZXRBdHRyaWJ1dGVEZWZpbml0aW9ucygpe3JldHVybiBtLl9hdHRyaWJ1dGVEZWZpbml0aW9uc31fZ2V0UHJlZlNpemUoZSl7bGV0IHQ9dGhpcy5nZXRXaWR0aCgpO3JldHVybiBlPT09YS5PcmllbnRhdGlvbi5WRVJUJiYodD10aGlzLmdldEhlaWdodCgpKSx0fXN0YXRpYyBnZXRBdHRyaWJ1dGVEZWZpbml0aW9ucygpe3JldHVybiBtLl9hdHRyaWJ1dGVEZWZpbml0aW9uc319dC5UYWJTZXROb2RlPW0sbS5UWVBFPSJ0YWJzZXQiLG0uX2F0dHJpYnV0ZURlZmluaXRpb25zPW0uX2NyZWF0ZUF0dHJpYnV0ZURlZmluaXRpb25zKCl9LDMyMjg5OmU9PnshZnVuY3Rpb24oKXt2YXIgdD17Njc1OmZ1bmN0aW9uKGUsdCl7InVzZSBzdHJpY3QiO3QuYnl0ZUxlbmd0aD1mdW5jdGlvbihlKXt2YXIgdD1sKGUpLHI9dFswXSxuPXRbMV07cmV0dXJuKHIrbikqMy80LW59LHQudG9CeXRlQXJyYXk9ZnVuY3Rpb24oZSl7dmFyIHQscixzPWwoZSksbz1zWzBdLGE9c1sxXSx1PW5ldyBpKChvK2EpKjMvNC1hKSxkPTAsYz1hPjA/by00Om87Zm9yKHI9MDtyPGM7cis9NCl0PW5bZS5jaGFyQ29kZUF0KHIpXTw8MTh8bltlLmNoYXJDb2RlQXQocisxKV08PDEyfG5bZS5jaGFyQ29kZUF0KHIrMildPDw2fG5bZS5jaGFyQ29kZUF0KHIrMyldLHVbZCsrXT10Pj4xNiYyNTUsdVtkKytdPXQ+PjgmMjU1LHVbZCsrXT0yNTUmdDtyZXR1cm4gMj09PWEmJih0PW5bZS5jaGFyQ29kZUF0KHIpXTw8MnxuW2UuY2hhckNvZGVBdChyKzEpXT4+NCx1W2QrK109MjU1JnQpLDE9PT1hJiYodD1uW2UuY2hhckNvZGVBdChyKV08PDEwfG5bZS5jaGFyQ29kZUF0KHIrMSldPDw0fG5bZS5jaGFyQ29kZUF0KHIrMildPj4yLHVbZCsrXT10Pj44JjI1NSx1W2QrK109MjU1JnQpLHV9LHQuZnJvbUJ5dGVBcnJheT1mdW5jdGlvbihlKXtmb3IodmFyIHQsbj1lLmxlbmd0aCxpPW4lMyxzPVtdLG89MCxhPW4taTtvPGE7bys9MTYzODMpcy5wdXNoKGZ1bmN0aW9uKGUsdCxuKXtmb3IodmFyIGkscz1bXSxvPXQ7bzxuO28rPTMpaT0oZVtvXTw8MTYmMHhmZjAwMDApKyhlW28rMV08PDgmNjUyODApKygyNTUmZVtvKzJdKSxzLnB1c2gocltpPj4xOCY2M10rcltpPj4xMiY2M10rcltpPj42JjYzXStyWzYzJmldKTtyZXR1cm4gcy5qb2luKCIiKX0oZSxvLG8rMTYzODM+YT9hOm8rMTYzODMpKTtyZXR1cm4gMT09PWk/cy5wdXNoKHJbKHQ9ZVtuLTFdKT4+Ml0rclt0PDw0JjYzXSsiPT0iKToyPT09aSYmcy5wdXNoKHJbKHQ9KGVbbi0yXTw8OCkrZVtuLTFdKT4+MTBdK3JbdD4+NCY2M10rclt0PDwyJjYzXSsiPSIpLHMuam9pbigiIil9O2Zvcih2YXIgcj1bXSxuPVtdLGk9InVuZGVmaW5lZCIhPXR5cGVvZiBVaW50OEFycmF5P1VpbnQ4QXJyYXk6QXJyYXkscz0iQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLyIsbz0wLGE9cy5sZW5ndGg7bzxhOysrbylyW29dPXNbb10sbltzLmNoYXJDb2RlQXQobyldPW87ZnVuY3Rpb24gbChlKXt2YXIgdD1lLmxlbmd0aDtpZih0JTQ+MCl0aHJvdyBFcnJvcigiSW52YWxpZCBzdHJpbmcuIExlbmd0aCBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgNCIpO3ZhciByPWUuaW5kZXhPZigiPSIpOy0xPT09ciYmKHI9dCk7dmFyIG49cj09PXQ/MDo0LXIlNDtyZXR1cm5bcixuXX1uWyItIi5jaGFyQ29kZUF0KDApXT02MixuWyJfIi5jaGFyQ29kZUF0KDApXT02M30sNzI6ZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1yKDY3NSksaT1yKDc4Mykscz0iZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiYiZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sLmZvcj9TeW1ib2wuZm9yKCJub2RlanMudXRpbC5pbnNwZWN0LmN1c3RvbSIpOm51bGw7ZnVuY3Rpb24gbyhlKXtpZihlPjB4N2ZmZmZmZmYpdGhyb3cgUmFuZ2VFcnJvcignVGhlIHZhbHVlICInK2UrJyIgaXMgaW52YWxpZCBmb3Igb3B0aW9uICJzaXplIicpO3ZhciB0PW5ldyBVaW50OEFycmF5KGUpO3JldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2YodCxhLnByb3RvdHlwZSksdH1mdW5jdGlvbiBhKGUsdCxyKXtpZigibnVtYmVyIj09dHlwZW9mIGUpe2lmKCJzdHJpbmciPT10eXBlb2YgdCl0aHJvdyBUeXBlRXJyb3IoJ1RoZSAic3RyaW5nIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgc3RyaW5nLiBSZWNlaXZlZCB0eXBlIG51bWJlcicpO3JldHVybiBkKGUpfXJldHVybiBsKGUsdCxyKX1mdW5jdGlvbiBsKGUsdCxyKXtpZigic3RyaW5nIj09dHlwZW9mIGUpcmV0dXJuIGZ1bmN0aW9uKGUsdCl7aWYoKCJzdHJpbmciIT10eXBlb2YgdHx8IiI9PT10KSYmKHQ9InV0ZjgiKSwhYS5pc0VuY29kaW5nKHQpKXRocm93IFR5cGVFcnJvcigiVW5rbm93biBlbmNvZGluZzogIit0KTt2YXIgcj0wfHAoZSx0KSxuPW8ociksaT1uLndyaXRlKGUsdCk7cmV0dXJuIGkhPT1yJiYobj1uLnNsaWNlKDAsaSkpLG59KGUsdCk7aWYoQXJyYXlCdWZmZXIuaXNWaWV3KGUpKXJldHVybiBjKGUpO2lmKG51bGw9PWUpdGhyb3cgVHlwZUVycm9yKCJUaGUgZmlyc3QgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBzdHJpbmcsIEJ1ZmZlciwgQXJyYXlCdWZmZXIsIEFycmF5"
     ""
     ""
     "bnQxNkJFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxfKGUsMix0aGlzLmxlbmd0aCksdGhpc1tlXTw8OHx0aGlzW2UrMV19LGEucHJvdG90eXBlLnJlYWRVSW50MzJMRT1mdW5jdGlvbihlLHQpe3JldHVybiBlPj4+PTAsdHx8XyhlLDQsdGhpcy5sZW5ndGgpLCh0aGlzW2VdfHRoaXNbZSsxXTw8OHx0aGlzW2UrMl08PDE2KSsweDEwMDAwMDAqdGhpc1tlKzNdfSxhLnByb3RvdHlwZS5yZWFkVUludDMyQkU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fF8oZSw0LHRoaXMubGVuZ3RoKSwweDEwMDAwMDAqdGhpc1tlXSsodGhpc1tlKzFdPDwxNnx0aGlzW2UrMl08PDh8dGhpc1tlKzNdKX0sYS5wcm90b3R5cGUucmVhZEludExFPWZ1bmN0aW9uKGUsdCxyKXtlPj4+PTAsdD4+Pj0wLHJ8fF8oZSx0LHRoaXMubGVuZ3RoKTtmb3IodmFyIG49dGhpc1tlXSxpPTEscz0wOysrczx0JiYoaSo9MjU2KTspbis9dGhpc1tlK3NdKmk7cmV0dXJuIG4+PShpKj0xMjgpJiYobi09TWF0aC5wb3coMiw4KnQpKSxufSxhLnByb3RvdHlwZS5yZWFkSW50QkU9ZnVuY3Rpb24oZSx0LHIpe2U+Pj49MCx0Pj4+PTAscnx8XyhlLHQsdGhpcy5sZW5ndGgpO2Zvcih2YXIgbj10LGk9MSxzPXRoaXNbZSstLW5dO24+MCYmKGkqPTI1Nik7KXMrPXRoaXNbZSstLW5dKmk7cmV0dXJuIHM+PShpKj0xMjgpJiYocy09TWF0aC5wb3coMiw4KnQpKSxzfSxhLnByb3RvdHlwZS5yZWFkSW50OD1mdW5jdGlvbihlLHQpe3JldHVybihlPj4+PTAsdHx8XyhlLDEsdGhpcy5sZW5ndGgpLDEyOCZ0aGlzW2VdKT8tKCgyNTUtdGhpc1tlXSsxKSoxKTp0aGlzW2VdfSxhLnByb3RvdHlwZS5yZWFkSW50MTZMRT1mdW5jdGlvbihlLHQpe2U+Pj49MCx0fHxfKGUsMix0aGlzLmxlbmd0aCk7dmFyIHI9dGhpc1tlXXx0aGlzW2UrMV08PDg7cmV0dXJuIDMyNzY4JnI/MHhmZmZmMDAwMHxyOnJ9LGEucHJvdG90eXBlLnJlYWRJbnQxNkJFPWZ1bmN0aW9uKGUsdCl7ZT4+Pj0wLHR8fF8oZSwyLHRoaXMubGVuZ3RoKTt2YXIgcj10aGlzW2UrMV18dGhpc1tlXTw8ODtyZXR1cm4gMzI3Njgmcj8weGZmZmYwMDAwfHI6cn0sYS5wcm90b3R5cGUucmVhZEludDMyTEU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fF8oZSw0LHRoaXMubGVuZ3RoKSx0aGlzW2VdfHRoaXNbZSsxXTw8OHx0aGlzW2UrMl08PDE2fHRoaXNbZSszXTw8MjR9LGEucHJvdG90eXBlLnJlYWRJbnQzMkJFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxfKGUsNCx0aGlzLmxlbmd0aCksdGhpc1tlXTw8MjR8dGhpc1tlKzFdPDwxNnx0aGlzW2UrMl08PDh8dGhpc1tlKzNdfSxhLnByb3RvdHlwZS5yZWFkRmxvYXRMRT1mdW5jdGlvbihlLHQpe3JldHVybiBlPj4+PTAsdHx8XyhlLDQsdGhpcy5sZW5ndGgpLGkucmVhZCh0aGlzLGUsITAsMjMsNCl9LGEucHJvdG90eXBlLnJlYWRGbG9hdEJFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxfKGUsNCx0aGlzLmxlbmd0aCksaS5yZWFkKHRoaXMsZSwhMSwyMyw0KX0sYS5wcm90b3R5cGUucmVhZERvdWJsZUxFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxfKGUsOCx0aGlzLmxlbmd0aCksaS5yZWFkKHRoaXMsZSwhMCw1Miw4KX0sYS5wcm90b3R5cGUucmVhZERvdWJsZUJFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxfKGUsOCx0aGlzLmxlbmd0aCksaS5yZWFkKHRoaXMsZSwhMSw1Miw4KX0sYS5wcm90b3R5cGUud3JpdGVVSW50TEU9ZnVuY3Rpb24oZSx0LHIsbil7aWYoZSo9MSx0Pj4+PTAscj4+Pj0wLCFuKXt2YXIgaT1NYXRoLnBvdygyLDgqciktMTt2KHRoaXMsZSx0LHIsaSwwKX12YXIgcz0xLG89MDtmb3IodGhpc1t0XT0yNTUmZTsrK288ciYmKHMqPTI1Nik7KXRoaXNbdCtvXT1lL3MmMjU1O3JldHVybiB0K3J9LGEucHJvdG90eXBlLndyaXRlVUludEJFPWZ1bmN0aW9uKGUsdCxyLG4pe2lmKGUqPTEsdD4+Pj0wLHI+Pj49MCwhbil7dmFyIGk9TWF0aC5wb3coMiw4KnIpLTE7dih0aGlzLGUsdCxyLGksMCl9dmFyIHM9ci0xLG89MTtmb3IodGhpc1t0K3NdPTI1NSZlOy0tcz49MCYmKG8qPTI1Nik7KXRoaXNbdCtzXT1lL28mMjU1O3JldHVybiB0K3J9LGEucHJvdG90eXBlLndyaXRlVUludDg9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlKj0xLHQ+Pj49MCxyfHx2KHRoaXMsZSx0LDEsMjU1LDApLHRoaXNbdF09MjU1JmUsdCsxfSxhLnByb3RvdHlwZS53cml0ZVVJbnQxNkxFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZSo9MSx0Pj4+PTAscnx8dih0aGlzLGUsdCwyLDY1NTM1LDApLHRoaXNbdF09MjU1JmUsdGhpc1t0KzFdPWU+Pj44LHQrMn0sYS5wcm90b3R5cGUud3JpdGVVSW50MTZCRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIGUqPTEsdD4+Pj0wLHJ8fHYodGhpcyxlLHQsMiw2NTUzNSwwKSx0aGlzW3RdPWU+Pj44LHRoaXNbdCsxXT0yNTUmZSx0KzJ9LGEucHJvdG90eXBlLndyaXRlVUludDMyTEU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlKj0xLHQ+Pj49MCxyfHx2KHRoaXMsZSx0LDQsMHhmZmZmZmZmZiwwKSx0aGlzW3QrM109ZT4+PjI0LHRoaXNbdCsyXT1lPj4+MTYsdGhpc1t0KzFdPWU+Pj44LHRoaXNbdF09MjU1JmUsdCs0fSxhLnByb3RvdHlwZS53cml0ZVVJbnQzMkJFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZSo9MSx0Pj4+PTAscnx8dih0aGlzLGUsdCw0LDB4ZmZmZmZmZmYsMCksdGhpc1t0XT1lPj4+MjQsdGhpc1t0KzFdPWU+Pj4xNix0aGlzW3QrMl09ZT4+PjgsdGhpc1t0KzNdPTI1NSZlLHQrNH0sYS5wcm90b3R5cGUud3JpdGVJbnRMRT1mdW5jdGlvbihlLHQscixuKXtpZihlKj0xLHQ+Pj49MCwhbil7dmFyIGk9TWF0aC5wb3coMiw4KnItMSk7dih0aGlzLGUsdCxyLGktMSwtaSl9dmFyIHM9MCxvPTEsYT0wO2Zvcih0aGlzW3RdPTI1NSZlOysrczxyJiYobyo9MjU2KTspZTwwJiYwPT09YSYmMCE9PXRoaXNbdCtzLTFdJiYoYT0xKSx0aGlzW3Qrc109KGUvbz4+MCktYSYyNTU7cmV0dXJuIHQrcn0sYS5wcm90b3R5cGUud3JpdGVJbnRCRT1mdW5jdGlvbihlLHQscixuKXtpZihlKj0xLHQ+Pj49MCwhbil7dmFyIGk9TWF0aC5wb3coMiw4KnItMSk7dih0aGlzLGUsdCxyLGktMSwtaSl9dmFyIHM9ci0xLG89MSxhPTA7Zm9yKHRoaXNbdCtzXT0yNTUmZTstLXM+PTAmJihvKj0yNTYpOyllPDAmJjA9PT1hJiYwIT09dGhpc1t0K3MrMV0mJihhPTEpLHRoaXNbdCtzXT0oZS9vPj4wKS1hJjI1NTtyZXR1cm4gdCtyfSxhLnByb3RvdHlwZS53cml0ZUludDg9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlKj0xLHQ+Pj49MCxyfHx2KHRoaXMsZSx0LDEsMTI3LC0xMjgpLGU8MCYmKGU9MjU1K2UrMSksdGhpc1t0XT0yNTUmZSx0KzF9LGEucHJvdG90eXBlLndyaXRlSW50MTZMRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIGUqPTEsdD4+Pj0wLHJ8fHYodGhpcyxlLHQsMiwzMjc2NywtMzI3NjgpLHRoaXNbdF09MjU1JmUsdGhpc1t0KzFdPWU+Pj44LHQrMn0sYS5wcm90b3R5cGUud3JpdGVJbnQxNkJFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZSo9MSx0Pj4+PTAscnx8dih0aGlzLGUsdCwyLDMyNzY3LC0zMjc2OCksdGhpc1t0XT1lPj4+OCx0aGlzW3QrMV09MjU1JmUsdCsyfSxhLnByb3RvdHlwZS53cml0ZUludDMyTEU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlKj0xLHQ+Pj49MCxyfHx2KHRoaXMsZSx0LDQsMHg3ZmZmZmZmZiwtMHg4MDAwMDAwMCksdGhpc1t0XT0yNTUmZSx0aGlzW3QrMV09ZT4+PjgsdGhpc1t0KzJdPWU+Pj4xNix0aGlzW3QrM109ZT4+PjI0LHQrNH0sYS5wcm90b3R5cGUud3JpdGVJbnQzMkJFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZSo9MSx0Pj4+PTAscnx8dih0aGlzLGUsdCw0LDB4N2ZmZmZmZmYsLTB4ODAwMDAwMDApLGU8MCYmKGU9MHhmZmZmZmZmZitlKzEpLHRoaXNbdF09ZT4+PjI0LHRoaXNbdCsxXT1lPj4+MTYsdGhpc1t0KzJdPWU+Pj44LHRoaXNbdCszXT0yNTUmZSx0KzR9LGEucHJvdG90eXBlLndyaXRlRmxvYXRMRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIFQodGhpcyxlLHQsITAscil9LGEucHJvdG90eXBlLndyaXRlRmxvYXRCRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIFQodGhpcyxlLHQsITEscil9LGEucHJvdG90eXBlLndyaXRlRG91YmxlTEU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBTKHRoaXMsZSx0LCEwLHIpfSxhLnByb3RvdHlwZS53cml0ZURvdWJsZUJFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gUyh0aGlzLGUsdCwhMSxyKX0sYS5wcm90b3R5cGUuY29weT1mdW5jdGlvbihlLHQscixuKXtpZighYS5pc0J1ZmZlcihlKSl0aHJvdyBUeXBlRXJyb3IoImFyZ3VtZW50IHNob3VsZCBiZSBhIEJ1ZmZlciIpO2lmKHJ8fChyPTApLG58fDA9PT1ufHwobj10aGlzLmxlbmd0aCksdD49ZS5sZW5ndGgmJih0PWUubGVuZ3RoKSx0fHwodD0wKSxuPjAmJm48ciYmKG49ciksbj09PXJ8fDA9PT1lLmxlbmd0aHx8MD09PXRoaXMubGVuZ3RoKXJldHVybiAwO2lmKHQ8MCl0aHJvdyBSYW5nZUVycm9yKCJ0YXJnZXRTdGFydCBvdXQgb2YgYm91bmRzIik7aWYocjwwfHxyPj10aGlzLmxlbmd0aCl0aHJvdyBSYW5nZUVycm9yKCJJbmRleCBvdXQgb2YgcmFuZ2UiKTtpZihuPDApdGhyb3cgUmFuZ2VFcnJvcigic291cmNlRW5kIG91dCBvZiBib3VuZHMiKTtuPnRoaXMubGVuZ3RoJiYobj10aGlzLmxlbmd0aCksZS5sZW5ndGgtdDxuLXImJihuPWUubGVuZ3RoLXQrcik7dmFyIGk9bi1yO2lmKHRoaXM9PT1lJiYiZnVuY3Rpb24iPT10eXBlb2YgVWludDhBcnJheS5wcm90b3R5cGUuY29weVdpdGhpbil0aGlzLmNvcHlXaXRoaW4odCxyLG4pO2Vsc2UgaWYodGhpcz09PWUmJnI8dCYmdDxuKWZvcih2YXIgcz1pLTE7cz49MDstLXMpZVtzK3RdPXRoaXNbcytyXTtlbHNlIFVpbnQ4QXJyYXkucHJvdG90eXBlLnNldC5jYWxsKGUsdGhpcy5zdWJhcnJheShyLG4pLHQpO3JldHVybiBpfSxhLnByb3RvdHlwZS5maWxsPWZ1bmN0aW9uKGUsdCxyLG4pe2lmKCJzdHJpbmciPT10eXBlb2YgZSl7aWYoInN0cmluZyI9PXR5cGVvZiB0PyhuPXQsdD0wLHI9dGhpcy5sZW5ndGgpOiJzdHJpbmciPT10eXBlb2YgciYmKG49cixyPXRoaXMubGVuZ3RoKSx2b2lkIDAhPT1uJiYic3RyaW5nIiE9dHlwZW9mIG4pdGhyb3cgVHlwZUVycm9yKCJlbmNvZGluZyBtdXN0IGJlIGEgc3RyaW5nIik7aWYoInN0cmluZyI9PXR5cGVvZiBuJiYhYS5pc0VuY29kaW5nKG4pKXRocm93IFR5cGVFcnJvcigiVW5rbm93biBlbmNvZGluZzogIituKTtpZigxPT09ZS5sZW5ndGgpe3ZhciBpLHM9ZS5jaGFyQ29kZUF0KDApOygidXRmOCI9PT1uJiZzPDEyOHx8ImxhdGluMSI9PT1uKSYmKGU9cyl9fWVsc2UibnVtYmVyIj09dHlwZW9mIGU/ZSY9MjU1OiJib29sZWFuIj09dHlwZW9mIGUmJihlPU51bWJlcihlKSk7aWYodDwwfHx0aGlzLmxlbmd0aDx0fHx0aGlzLmxlbmd0aDxyKXRocm93IFJhbmdlRXJyb3IoIk91dCBvZiByYW5nZSBpbmRleCIpO2lmKHI8PXQpcmV0dXJuIHRoaXM7aWYodD4+Pj0wLHI9dm9pZCAwPT09cj90aGlzLmxlbmd0aDpyPj4+MCxlfHwoZT0wKSwibnVtYmVyIj09dHlwZW9mIGUpZm9yKGk9dDtpPHI7KytpKXRoaXNbaV09ZTtlbHNle3ZhciBvPWEuaXNCdWZmZXIoZSk/ZTphLmZyb20oZSxuKSxsPW8ubGVuZ3RoO2lmKDA9PT1sKXRocm93IFR5cGVFcnJvcignVGhlIHZhbHVlICInK2UrJyIgaXMgaW52YWxpZCBmb3IgYXJndW1lbnQgInZhbHVlIicpO2ZvcihpPTA7aTxyLXQ7KytpKXRoaXNbaSt0XT1vW2klbF19cmV0dXJuIHRoaXN9O3ZhciBFPS9bXisvMC05QS1aYS16LV9dL2c7ZnVuY3Rpb24geChlLHQpe3Q9dHx8MS8wO2Zvcih2YXIgcixuPWUubGVuZ3RoLGk9bnVsbCxzPVtdLG89MDtvPG47KytvKXtpZigocj1lLmNoYXJDb2RlQXQobykpPjU1Mjk1JiZyPDU3MzQ0KXtpZighaSl7aWYocj41NjMxOXx8bysxPT09bil7KHQtPTMpPi0xJiZzLnB1c2goMjM5LDE5MSwxODkpO2NvbnRpbnVlfWk9cjtjb250aW51ZX1pZihyPDU2MzIwKXsodC09Myk+LTEmJnMucHVzaCgyMzksMTkxLDE4OSksaT1yO2NvbnRpbnVlfXI9KGktNTUyOTY8PDEwfHItNTYzMjApKzY1NTM2fWVsc2UgaSYmKHQtPTMpPi0xJiZzLnB1c2goMjM5LDE5MSwxODkpO2lmKGk9bnVsbCxyPDEyOCl7aWYoKHQtPTEpPDApYnJlYWs7cy5wdXNoKHIpfWVsc2UgaWYocjwyMDQ4KXtpZigodC09Mik8MClicmVhaztzLn"
     ""
     ""
     ""
     ""
     ""
     "bj1yLmN1cnJlbnQrZTt0KG4pLGZ1bmN0aW9uIGUodCl7ci5jdXJyZW50PXQsd2luZG93LmNsZWFyVGltZW91dChpLmN1cnJlbnQpLCIiIT09dCYmKGkuY3VycmVudD13aW5kb3cuc2V0VGltZW91dCgoKT0+ZSgiIiksMWUzKSl9KG4pfSxbdF0pLG89bi51c2VDYWxsYmFjaygoKT0+e3IuY3VycmVudD0iIix3aW5kb3cuY2xlYXJUaW1lb3V0KGkuY3VycmVudCl9LFtdKTtyZXR1cm4gbi51c2VFZmZlY3QoKCk9PigpPT53aW5kb3cuY2xlYXJUaW1lb3V0KGkuY3VycmVudCksW10pLFtyLHMsb119ZnVuY3Rpb24gZU8oZSx0LHIpe3ZhciBuLGk7bGV0IHM9dC5sZW5ndGg+MSYmQXJyYXkuZnJvbSh0KS5ldmVyeShlPT5lPT09dFswXSk/dFswXTp0LG89cj9lLmluZGV4T2Yocik6LTEsYT0obj1lLGk9TWF0aC5tYXgobywwKSxuLm1hcCgoZSx0KT0+blsoaSt0KSVuLmxlbmd0aF0pKTsxPT09cy5sZW5ndGgmJihhPWEuZmlsdGVyKGU9PmUhPT1yKSk7bGV0IGw9YS5maW5kKGU9PmUudGV4dFZhbHVlLnRvTG93ZXJDYXNlKCkuc3RhcnRzV2l0aChzLnRvTG93ZXJDYXNlKCkpKTtyZXR1cm4gbCE9PXI/bDp2b2lkIDB9ZUEuZGlzcGxheU5hbWU9IkJ1YmJsZVNlbGVjdCI7dmFyIGVSPWosZU49JCxlQz1aLGVMPVcsZUQ9VixlQj1HLGVrPWVuLGVNPWVhLGVVPWV1LGVGPWVwLGVQPWVtLGVqPWV5LGV6PWVfLGUkPWV3LGVIPWVTfSwzNzYyMjooZSx0LHIpPT57InVzZSBzdHJpY3QiO3ZhciBuO3IuZCh0LHthOigpPT5ufSksZnVuY3Rpb24oZSl7ZVtlLllFQVJfTU9OVEg9MF09IllFQVJfTU9OVEgiLGVbZS5EQVlfVElNRT0xXT0iREFZX1RJTUUiLGVbZS5NT05USF9EQVlfTkFOTz0yXT0iTU9OVEhfREFZX05BTk8ifShufHwobj17fSkpfSwzNzk1ODooZSx0LHIpPT57InVzZSBzdHJpY3QiO2xldCBuO3IuZCh0LHtFZDooKT0+aWosQ3I6KCk9PmlOLGZpOigpPT5pRSwkYjooKT0+aUEsdlA6KCk9PmlKLERGOigpPT5pM30pO3ZhciBpLHMsbyxhLGwsdSxkLGMsaD1yKDk4MDcwKSxwPXIoODEzMTApO2xldCBmPXZvaWQgMDtmdW5jdGlvbiBtKGUpe2lmKG51bGw9PT1lKXJldHVybiJudWxsIjtpZihlPT09ZilyZXR1cm4idW5kZWZpbmVkIjtzd2l0Y2godHlwZW9mIGUpe2Nhc2UibnVtYmVyIjpjYXNlImJpZ2ludCI6cmV0dXJuYCR7ZX1gO2Nhc2Uic3RyaW5nIjpyZXR1cm5gIiR7ZX0iYH1yZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgZVtTeW1ib2wudG9QcmltaXRpdmVdP2VbU3ltYm9sLnRvUHJpbWl0aXZlXSgic3RyaW5nIik6QXJyYXlCdWZmZXIuaXNWaWV3KGUpP2UgaW5zdGFuY2VvZiBCaWdJbnQ2NEFycmF5fHxlIGluc3RhbmNlb2YgQmlnVWludDY0QXJyYXk/YFske1suLi5lXS5tYXAoZT0+bShlKSl9XWA6YFske2V9XWA6QXJyYXlCdWZmZXIuaXNWaWV3KGUpP2BbJHtlfV1gOkpTT04uc3RyaW5naWZ5KGUsKGUsdCk9PiJiaWdpbnQiPT10eXBlb2YgdD9gJHt0fWA6dCl9bGV0IGc9bmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLHk9ZT0+Zy5kZWNvZGUoZSksYj1uZXcgVGV4dEVuY29kZXIsXz1lPT5iLmVuY29kZShlKSx2PWU9PiJudW1iZXIiPT10eXBlb2YgZSx3PWU9PiJib29sZWFuIj09dHlwZW9mIGUsVD1lPT4iZnVuY3Rpb24iPT10eXBlb2YgZSxTPWU9Pm51bGwhPWUmJk9iamVjdChlKT09PWUsRT1lPT5TKGUpJiZUKGUudGhlbikseD1lPT5TKGUpJiZUKGVbU3ltYm9sLml0ZXJhdG9yXSksQT1lPT5TKGUpJiZUKGVbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKSxJPWU9PlMoZSkmJlMoZS5zY2hlbWEpLE89ZT0+UyhlKSYmImRvbmUiaW4gZSYmInZhbHVlImluIGUsUj1lPT5TKGUpJiZUKGUuc3RhdCkmJnYoZS5mZCksTj1lPT5TKGUpJiZEKGUuYm9keSksQz1lPT4iX2dldERPTVN0cmVhbSJpbiBlJiYiX2dldE5vZGVTdHJlYW0iaW4gZSxMPWU9PlMoZSkmJlQoZS5hYm9ydCkmJlQoZS5nZXRXcml0ZXIpJiYhQyhlKSxEPWU9PlMoZSkmJlQoZS5jYW5jZWwpJiZUKGUuZ2V0UmVhZGVyKSYmIUMoZSksQj1lPT5TKGUpJiZUKGUuZW5kKSYmVChlLndyaXRlKSYmdyhlLndyaXRhYmxlKSYmIUMoZSksaz1lPT5TKGUpJiZUKGUucmVhZCkmJlQoZS5waXBlKSYmdyhlLnJlYWRhYmxlKSYmIUMoZSksTT1lPT5TKGUpJiZUKGUuY2xlYXIpJiZUKGUuYnl0ZXMpJiZUKGUucG9zaXRpb24pJiZUKGUuc2V0UG9zaXRpb24pJiZUKGUuY2FwYWNpdHkpJiZUKGUuZ2V0QnVmZmVySWRlbnRpZmllcikmJlQoZS5jcmVhdGVMb25nKSxVPSJ1bmRlZmluZWQiIT10eXBlb2YgU2hhcmVkQXJyYXlCdWZmZXI/U2hhcmVkQXJyYXlCdWZmZXI6QXJyYXlCdWZmZXI7ZnVuY3Rpb24gRihlLHQscj0wLG49dC5ieXRlTGVuZ3RoKXtsZXQgaT1lLmJ5dGVMZW5ndGgscz1uZXcgVWludDhBcnJheShlLmJ1ZmZlcixlLmJ5dGVPZmZzZXQsaSksbz1uZXcgVWludDhBcnJheSh0LmJ1ZmZlcix0LmJ5dGVPZmZzZXQsTWF0aC5taW4obixpKSk7cmV0dXJuIHMuc2V0KG8sciksZX1mdW5jdGlvbiBQKGUsdCl7bGV0IHIsbixpO2xldCBzPWZ1bmN0aW9uKGUpe2xldCB0LHIsbixpO2xldCBzPWVbMF0/W2VbMF1dOltdO2ZvcihsZXQgbyxhLGw9MCx1PTAsZD1lLmxlbmd0aDsrK2w8ZDspe2lmKG89c1t1XSxhPWVbbF0sIW98fCFhfHxvLmJ1ZmZlciE9PWEuYnVmZmVyfHxhLmJ5dGVPZmZzZXQ8by5ieXRlT2Zmc2V0fHwoe2J5dGVPZmZzZXQ6dCxieXRlTGVuZ3RoOm59PW8se2J5dGVPZmZzZXQ6cixieXRlTGVuZ3RoOml9PWEsdCtuPHJ8fHIraTx0KSl7YSYmKHNbKyt1XT1hKTtjb250aW51ZX1zW3VdPW5ldyBVaW50OEFycmF5KG8uYnVmZmVyLHQsci10K2kpfXJldHVybiBzfShlKSxvPXMucmVkdWNlKChlLHQpPT5lK3QuYnl0ZUxlbmd0aCwwKSxhPTAsbD0tMSx1PU1hdGgubWluKHR8fE51bWJlci5QT1NJVElWRV9JTkZJTklUWSxvKTtmb3IobGV0IGU9cy5sZW5ndGg7KytsPGU7KXtpZihuPShyPXNbbF0pLnN1YmFycmF5KDAsTWF0aC5taW4oci5sZW5ndGgsdS1hKSksdTw9YStuLmxlbmd0aCl7bi5sZW5ndGg8ci5sZW5ndGg/c1tsXT1yLnN1YmFycmF5KG4ubGVuZ3RoKTpuLmxlbmd0aD09PXIubGVuZ3RoJiZsKyssaT9GKGksbixhKTppPW47YnJlYWt9RihpfHwoaT1uZXcgVWludDhBcnJheSh1KSksbixhKSxhKz1uLmxlbmd0aH1yZXR1cm5baXx8bmV3IFVpbnQ4QXJyYXkoMCkscy5zbGljZShsKSxvLShpP2kuYnl0ZUxlbmd0aDowKV19ZnVuY3Rpb24gaihlLHQpe2xldCByPU8odCk/dC52YWx1ZTp0O3JldHVybiByIGluc3RhbmNlb2YgZT9lPT09VWludDhBcnJheT9uZXcgZShyLmJ1ZmZlcixyLmJ5dGVPZmZzZXQsci5ieXRlTGVuZ3RoKTpyOnI/KCJzdHJpbmciPT10eXBlb2YgciYmKHI9XyhyKSksciBpbnN0YW5jZW9mIEFycmF5QnVmZmVyfHxyIGluc3RhbmNlb2YgVSk/bmV3IGUocik6TShyKT9qKGUsci5ieXRlcygpKTpBcnJheUJ1ZmZlci5pc1ZpZXcocik/ci5ieXRlTGVuZ3RoPD0wP25ldyBlKDApOm5ldyBlKHIuYnVmZmVyLHIuYnl0ZU9mZnNldCxyLmJ5dGVMZW5ndGgvZS5CWVRFU19QRVJfRUxFTUVOVCk6ZS5mcm9tKHIpOm5ldyBlKDApfWxldCB6PWU9PmooSW50MzJBcnJheSxlKSwkPWU9PmooQmlnSW50NjRBcnJheSxlKSxIPWU9PmooVWludDhBcnJheSxlKSxaPWU9PihlLm5leHQoKSxlKSxXPWU9PihmdW5jdGlvbiooZSx0KXtsZXQgcj1mdW5jdGlvbiooZSl7eWllbGQgZX0sbj0ic3RyaW5nIj09dHlwZW9mIHQ/cih0KTpBcnJheUJ1ZmZlci5pc1ZpZXcodCk/cih0KTp0IGluc3RhbmNlb2YgQXJyYXlCdWZmZXI/cih0KTp0IGluc3RhbmNlb2YgVT9yKHQpOngodCk/dDpyKHQpO3JldHVybiB5aWVsZCpaKGZ1bmN0aW9uKih0KXtsZXQgcj1udWxsO2RvIHI9dC5uZXh0KCh5aWVsZCBqKGUscikpKTt3aGlsZSghci5kb25lKX0obltTeW1ib2wuaXRlcmF0b3JdKCkpKSxuZXcgZX0pKFVpbnQ4QXJyYXksZSksVj1lPT4oZnVuY3Rpb24gZSh0LHIpe3JldHVybigwLGguQVEpKHRoaXMsYXJndW1lbnRzLGZ1bmN0aW9uKigpe2lmKEUocikpcmV0dXJuIHlpZWxkKDAsaC5OMykoKHlpZWxkKDAsaC5OMykoKHlpZWxkKigwLGguTWUpKCgwLGgueE4pKGUodCwoeWllbGQoMCxoLk4zKShyKSkpKSkpKSkpO2xldCBuPWZ1bmN0aW9uKGUpe3JldHVybigwLGguQVEpKHRoaXMsYXJndW1lbnRzLGZ1bmN0aW9uKigpe3lpZWxkIHlpZWxkKDAsaC5OMykoKHlpZWxkKDAsaC5OMykoZSkpKX0pfSxpPSJzdHJpbmciPT10eXBlb2Ygcj9uKHIpOkFycmF5QnVmZmVyLmlzVmlldyhyKT9uKHIpOnIgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcj9uKHIpOnIgaW5zdGFuY2VvZiBVP24ocik6eChyKT9mdW5jdGlvbihlKXtyZXR1cm4oMCxoLkFRKSh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbiooKXt5aWVsZCgwLGguTjMpKCh5aWVsZCooMCxoLk1lKSgoMCxoLnhOKShaKGZ1bmN0aW9uKihlKXtsZXQgdD1udWxsO2RvIHQ9ZS5uZXh0KCh5aWVsZCBudWxsPT10P3ZvaWQgMDp0LnZhbHVlKSk7d2hpbGUoIXQuZG9uZSl9KGVbU3ltYm9sLml0ZXJhdG9yXSgpKSkpKSkpfSl9KHIpOkEocik/cjpuKHIpO3JldHVybiB5aWVsZCgwLGguTjMpKCh5aWVsZCooMCxoLk1lKSgoMCxoLnhOKShaKGZ1bmN0aW9uKGUpe3JldHVybigwLGguQVEpKHRoaXMsYXJndW1lbnRzLGZ1bmN0aW9uKigpe2xldCByPW51bGw7ZG8gcj15aWVsZCgwLGguTjMpKGUubmV4dCgoeWllbGQgeWllbGQoMCxoLk4zKShqKHQscikpKSkpO3doaWxlKCFyLmRvbmUpfSl9KGlbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkpKSkpKSkseWllbGQoMCxoLk4zKShuZXcgdCl9KX0pKFVpbnQ4QXJyYXksZSk7ZnVuY3Rpb24gWShlLHQscil7aWYoMCE9PWUpe3I9ci5zbGljZSgwLHQpO2ZvcihsZXQgdD0tMSxuPXIubGVuZ3RoOysrdDxuOylyW3RdKz1lfXJldHVybiByLnN1YmFycmF5KDAsdCl9dmFyIEc9cig3MDQ5MSk7bGV0IFg9U3ltYm9sLmZvcigiaXNBcnJvd0JpZ051bSIpO2Z1bmN0aW9uIHEoZSwuLi50KXtyZXR1cm4gMD09PXQubGVuZ3RoP09iamVjdC5zZXRQcm90b3R5cGVPZihqKHRoaXMuVHlwZWRBcnJheSxlKSx0aGlzLmNvbnN0cnVjdG9yLnByb3RvdHlwZSk6T2JqZWN0LnNldFByb3RvdHlwZU9mKG5ldyB0aGlzLlR5cGVkQXJyYXkoZSwuLi50KSx0aGlzLmNvbnN0cnVjdG9yLnByb3RvdHlwZSl9ZnVuY3Rpb24gSiguLi5lKXtyZXR1cm4gcS5hcHBseSh0aGlzLGUpfWZ1bmN0aW9uIEsoLi4uZSl7cmV0dXJuIHEuYXBwbHkodGhpcyxlKX1mdW5jdGlvbiBRKC4uLmUpe3JldHVybiBxLmFwcGx5KHRoaXMsZSl9cS5wcm90b3R5cGVbWF09ITAscS5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKCl7cmV0dXJuYCIke2VyKHRoaXMpfSJgfSxxLnByb3RvdHlwZS52YWx1ZU9mPWZ1bmN0aW9uKGUpe3JldHVybiBldCh0aGlzLGUpfSxxLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiBlcih0aGlzKX0scS5wcm90b3R5cGVbU3ltYm9sLnRvUHJpbWl0aXZlXT1mdW5jdGlvbihlPSJkZWZhdWx0Iil7c3dpdGNoKGUpe2Nhc2UibnVtYmVyIjpyZXR1cm4gZXQodGhpcyk7Y2FzZSJzdHJpbmciOmJyZWFrO2Nhc2UiZGVmYXVsdCI6dmFyIHQ7cmV0dXJuIHQ9dGhpcyw4PT09dC5ieXRlTGVuZ3RoP25ldyB0LkJpZ0ludEFycmF5KHQuYnVmZmVyLHQuYnl0ZU9mZnNldCwxKVswXTplcih0KX1yZXR1cm4gZXIodGhpcyl9LE9iamVjdC5zZXRQcm90b3R5cGVPZihKLnByb3RvdHlwZSxPYmplY3QuY3JlYXRlKEludDMyQXJyYXkucHJvdG90eXBlKSksT2JqZWN0LnNldFByb3RvdHlwZU9mKEsucHJvdG90eXBlLE9iamVjdC5jcmVhdGUoVWludDMyQXJyYXkucHJvdG90eXBlKSksT2JqZWN0LnNldFByb3RvdHlwZU9mKFEucHJvdG90eXBlLE9iamVjdC5jcmVhdGUoVWludDMyQXJyYXkucHJvdG90eXBlKSksT2JqZWN0LmFzc2lnbihKLnByb3RvdHlwZSxxLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6SixzaWduZWQ6ITAsVHlwZWRBcnJheTpJbnQzMkFycmF5LEJpZ0ludEFycmF5OkJpZ0ludDY0QXJyYXl9KSxPYmplY3QuYXNzaWduKEsucHJvdG90eXBlLHEucHJvdG90eXBlLHtjb25zdHJ1Y3RvcjpLLHNpZ25lZDohMSxUeXBlZEFycmF5OlVpbnQzMkFycmF5LEJpZ0ludEFycmF5OkJpZ1VpbnQ2NEFycmF5fSksT2JqZWN0LmFzc2lnbihRLnByb3RvdHlwZSxxLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6USxzaWduZWQ6ITAsVHlwZWRBcnJheTpVaW50MzJBcnJheSxCaW"
     ""
     ""
     ""
     ""
     "VuZ3RoKzEpKX1mdW5jdGlvbiB0RChlLHQscixuKXtsZXQgaT1bXTtmb3IobGV0IHM9LTEsbz1lLmxlbmd0aDsrK3M8bzspe2xldCBvPWVbc10sYT10W3NdLHtsZW5ndGg6bH09bztpZihhPj1uKWJyZWFrO2lmKHI+PWErbCljb250aW51ZTtpZihhPj1yJiZhK2w8PW4pe2kucHVzaChvKTtjb250aW51ZX1sZXQgdT1NYXRoLm1heCgwLHItYSksZD1NYXRoLm1pbihuLWEsbCk7aS5wdXNoKG8uc2xpY2UodSxkLXUpKX1yZXR1cm4gMD09PWkubGVuZ3RoJiZpLnB1c2goZVswXS5zbGljZSgwLDApKSxpfWZ1bmN0aW9uIHRCKGUsdCxyLG4pe2xldCBpPTAscz0wLG89dC5sZW5ndGgtMTtkb3tpZihpPj1vLTEpcmV0dXJuIHI8dFtvXT9uKGUsaSxyLXRbaV0pOm51bGw7cjx0W3M9aStNYXRoLnRydW5jKChvLWkpKi41KV0/bz1zOmk9c313aGlsZShpPG8pfWZ1bmN0aW9uIHRrKGUsdCl7cmV0dXJuIGUuZ2V0VmFsaWQodCl9ZnVuY3Rpb24gdE0oZSl7ZnVuY3Rpb24gdCh0LHIsbil7cmV0dXJuIGUodFtyXSxuKX1yZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIHRCKHRoaXMuZGF0YSx0aGlzLl9vZmZzZXRzLGUsdCl9fWZ1bmN0aW9uIHRVKGUpe2xldCB0O2Z1bmN0aW9uIHIocixuLGkpe3JldHVybiBlKHJbbl0saSx0KX1yZXR1cm4gZnVuY3Rpb24oZSxuKXtsZXQgaT10aGlzLmRhdGE7dD1uO2xldCBzPXRCKGksdGhpcy5fb2Zmc2V0cyxlLHIpO3JldHVybiB0PXZvaWQgMCxzfX1mdW5jdGlvbiB0RihlKXtsZXQgdDtmdW5jdGlvbiByKHIsbixpKXtsZXQgcz1pLG89MCxhPTA7Zm9yKGxldCBpPW4tMSxsPXIubGVuZ3RoOysraTxsOyl7bGV0IG49cltpXTtpZih+KG89ZShuLHQscykpKXJldHVybiBhK287cz0wLGErPW4ubGVuZ3RofXJldHVybiAtMX1yZXR1cm4gZnVuY3Rpb24oZSxuKXt0PWU7bGV0IGk9dGhpcy5kYXRhLHM9Im51bWJlciIhPXR5cGVvZiBuP3IoaSwwLDApOnRCKGksdGhpcy5fb2Zmc2V0cyxuLHIpO3JldHVybiB0PXZvaWQgMCxzfX1mdW5jdGlvbiB0UChlLHQscixuKXtyZXR1cm4ociYxPDxuKSE9MH1mdW5jdGlvbiB0aihlLHQscixuKXtyZXR1cm4ociYxPDxuKT4+bn1mdW5jdGlvbiB0eihlLHQscil7bGV0IG49ci5ieXRlTGVuZ3RoKzcmLTg7aWYoZT4wfHxyLmJ5dGVMZW5ndGg8bil7bGV0IGk9bmV3IFVpbnQ4QXJyYXkobik7cmV0dXJuIGkuc2V0KGUlOD09MD9yLnN1YmFycmF5KGU+PjMpOnQkKG5ldyB0SChyLGUsdCxudWxsLHRQKSkuc3ViYXJyYXkoMCxuKSksaX1yZXR1cm4gcn1mdW5jdGlvbiB0JChlKXtsZXQgdD1bXSxyPTAsbj0wLGk9MDtmb3IobGV0IHMgb2YgZSlzJiYoaXw9MTw8biksOD09KytuJiYodFtyKytdPWksaT1uPTApOygwPT09cnx8bj4wKSYmKHRbcisrXT1pKTtsZXQgcz1uZXcgVWludDhBcnJheSh0Lmxlbmd0aCs3Ji04KTtyZXR1cm4gcy5zZXQodCksc31jbGFzcyB0SHtjb25zdHJ1Y3RvcihlLHQscixuLGkpe3RoaXMuYnl0ZXM9ZSx0aGlzLmxlbmd0aD1yLHRoaXMuY29udGV4dD1uLHRoaXMuZ2V0PWksdGhpcy5iaXQ9dCU4LHRoaXMuYnl0ZUluZGV4PXQ+PjMsdGhpcy5ieXRlPWVbdGhpcy5ieXRlSW5kZXgrK10sdGhpcy5pbmRleD0wfW5leHQoKXtyZXR1cm4gdGhpcy5pbmRleDx0aGlzLmxlbmd0aD8oOD09PXRoaXMuYml0JiYodGhpcy5iaXQ9MCx0aGlzLmJ5dGU9dGhpcy5ieXRlc1t0aGlzLmJ5dGVJbmRleCsrXSkse3ZhbHVlOnRoaXMuZ2V0KHRoaXMuY29udGV4dCx0aGlzLmluZGV4KyssdGhpcy5ieXRlLHRoaXMuYml0KyspfSk6e2RvbmU6ITAsdmFsdWU6bnVsbH19W1N5bWJvbC5pdGVyYXRvcl0oKXtyZXR1cm4gdGhpc319ZnVuY3Rpb24gdFooZSl7bGV0IHQ9TWF0aC50cnVuYyhlKTtyZXR1cm4gdC09dD4+PjEmMHg1NTU1NTU1NSwoKHQ9KDB4MzMzMzMzMzMmdCkrKHQ+Pj4yJjB4MzMzMzMzMzMpKSsodD4+PjQpJjB4ZjBmMGYwZikqMHgxMDEwMTAxPj4+MjR9Y2xhc3MgdFcgZXh0ZW5kcyBlY3t9ZnVuY3Rpb24gdFYoZSx0LHIpe2lmKHZvaWQgMD09PXQpcmV0dXJuIC0xO2lmKG51bGw9PT10KXN3aXRjaChlLnR5cGVJZCl7Y2FzZSBwLlpVLlVuaW9uOmNhc2UgcC5aVS5EaWN0aW9uYXJ5OmJyZWFrO2RlZmF1bHQ6cmV0dXJuIGZ1bmN0aW9uKGUsdCl7bGV0e251bGxCaXRtYXA6cn09ZTtpZighcnx8ZS5udWxsQ291bnQ8PTApcmV0dXJuIC0xO2xldCBuPTA7Zm9yKGxldCBpIG9mIG5ldyB0SChyLGUub2Zmc2V0Kyh0fHwwKSxlLmxlbmd0aCxyLHRQKSl7aWYoIWkpcmV0dXJuIG47KytufXJldHVybiAtMX0oZSxyKX1sZXQgbj10Zy5nZXRWaXNpdEZuKGUpLGk9dEkodCk7Zm9yKGxldCB0PShyfHwwKS0xLHM9ZS5sZW5ndGg7Kyt0PHM7KWlmKGkobihlLHQpKSlyZXR1cm4gdDtyZXR1cm4gLTF9ZnVuY3Rpb24gdFkoZSx0LHIpe2xldCBuPXRnLmdldFZpc2l0Rm4oZSksaT10SSh0KTtmb3IobGV0IHQ9KHJ8fDApLTEscz1lLmxlbmd0aDsrK3Q8czspaWYoaShuKGUsdCkpKXJldHVybiB0O3JldHVybiAtMX10Vy5wcm90b3R5cGUudmlzaXROdWxsPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG51bGw9PT10JiZlLmxlbmd0aD4wPzA6LTF9LHRXLnByb3RvdHlwZS52aXNpdEJvb2w9dFYsdFcucHJvdG90eXBlLnZpc2l0SW50PXRWLHRXLnByb3RvdHlwZS52aXNpdEludDg9dFYsdFcucHJvdG90eXBlLnZpc2l0SW50MTY9dFYsdFcucHJvdG90eXBlLnZpc2l0SW50MzI9dFYsdFcucHJvdG90eXBlLnZpc2l0SW50NjQ9dFYsdFcucHJvdG90eXBlLnZpc2l0VWludDg9dFYsdFcucHJvdG90eXBlLnZpc2l0VWludDE2PXRWLHRXLnByb3RvdHlwZS52aXNpdFVpbnQzMj10Vix0Vy5wcm90b3R5cGUudmlzaXRVaW50NjQ9dFYsdFcucHJvdG90eXBlLnZpc2l0RmxvYXQ9dFYsdFcucHJvdG90eXBlLnZpc2l0RmxvYXQxNj10Vix0Vy5wcm90b3R5cGUudmlzaXRGbG9hdDMyPXRWLHRXLnByb3RvdHlwZS52aXNpdEZsb2F0NjQ9dFYsdFcucHJvdG90eXBlLnZpc2l0VXRmOD10Vix0Vy5wcm90b3R5cGUudmlzaXRMYXJnZVV0Zjg9dFYsdFcucHJvdG90eXBlLnZpc2l0QmluYXJ5PXRWLHRXLnByb3RvdHlwZS52aXNpdExhcmdlQmluYXJ5PXRWLHRXLnByb3RvdHlwZS52aXNpdEZpeGVkU2l6ZUJpbmFyeT10Vix0Vy5wcm90b3R5cGUudmlzaXREYXRlPXRWLHRXLnByb3RvdHlwZS52aXNpdERhdGVEYXk9dFYsdFcucHJvdG90eXBlLnZpc2l0RGF0ZU1pbGxpc2Vjb25kPXRWLHRXLnByb3RvdHlwZS52aXNpdFRpbWVzdGFtcD10Vix0Vy5wcm90b3R5cGUudmlzaXRUaW1lc3RhbXBTZWNvbmQ9dFYsdFcucHJvdG90eXBlLnZpc2l0VGltZXN0YW1wTWlsbGlzZWNvbmQ9dFYsdFcucHJvdG90eXBlLnZpc2l0VGltZXN0YW1wTWljcm9zZWNvbmQ9dFYsdFcucHJvdG90eXBlLnZpc2l0VGltZXN0YW1wTmFub3NlY29uZD10Vix0Vy5wcm90b3R5cGUudmlzaXRUaW1lPXRWLHRXLnByb3RvdHlwZS52aXNpdFRpbWVTZWNvbmQ9dFYsdFcucHJvdG90eXBlLnZpc2l0VGltZU1pbGxpc2Vjb25kPXRWLHRXLnByb3RvdHlwZS52aXNpdFRpbWVNaWNyb3NlY29uZD10Vix0Vy5wcm90b3R5cGUudmlzaXRUaW1lTmFub3NlY29uZD10Vix0Vy5wcm90b3R5cGUudmlzaXREZWNpbWFsPXRWLHRXLnByb3RvdHlwZS52aXNpdExpc3Q9dFYsdFcucHJvdG90eXBlLnZpc2l0U3RydWN0PXRWLHRXLnByb3RvdHlwZS52aXNpdFVuaW9uPXRWLHRXLnByb3RvdHlwZS52aXNpdERlbnNlVW5pb249dFksdFcucHJvdG90eXBlLnZpc2l0U3BhcnNlVW5pb249dFksdFcucHJvdG90eXBlLnZpc2l0RGljdGlvbmFyeT10Vix0Vy5wcm90b3R5cGUudmlzaXRJbnRlcnZhbD10Vix0Vy5wcm90b3R5cGUudmlzaXRJbnRlcnZhbERheVRpbWU9dFYsdFcucHJvdG90eXBlLnZpc2l0SW50ZXJ2YWxZZWFyTW9udGg9dFYsdFcucHJvdG90eXBlLnZpc2l0RHVyYXRpb249dFYsdFcucHJvdG90eXBlLnZpc2l0RHVyYXRpb25TZWNvbmQ9dFYsdFcucHJvdG90eXBlLnZpc2l0RHVyYXRpb25NaWxsaXNlY29uZD10Vix0Vy5wcm90b3R5cGUudmlzaXREdXJhdGlvbk1pY3Jvc2Vjb25kPXRWLHRXLnByb3RvdHlwZS52aXNpdER1cmF0aW9uTmFub3NlY29uZD10Vix0Vy5wcm90b3R5cGUudmlzaXRGaXhlZFNpemVMaXN0PXRWLHRXLnByb3RvdHlwZS52aXNpdE1hcD10VjtsZXQgdEc9bmV3IHRXO2NsYXNzIHRYIGV4dGVuZHMgZWN7fWZ1bmN0aW9uIHRxKGUpe2xldHt0eXBlOnR9PWU7aWYoMD09PWUubnVsbENvdW50JiYxPT09ZS5zdHJpZGUmJihlZC5wZS5pc0ludCh0KSYmNjQhPT10LmJpdFdpZHRofHxlZC5wZS5pc1RpbWUodCkmJjY0IT09dC5iaXRXaWR0aHx8ZWQucGUuaXNGbG9hdCh0KSYmdC5wcmVjaXNpb24hPT1lcy5qLkhBTEYpKXJldHVybiBuZXcgdE4oZS5kYXRhLmxlbmd0aCx0PT57bGV0IHI9ZS5kYXRhW3RdO3JldHVybiByLnZhbHVlcy5zdWJhcnJheSgwLHIubGVuZ3RoKVtTeW1ib2wuaXRlcmF0b3JdKCl9KTtsZXQgcj0wO3JldHVybiBuZXcgdE4oZS5kYXRhLmxlbmd0aCx0PT57bGV0IG49ZS5kYXRhW3RdLmxlbmd0aCxpPWUuc2xpY2UocixyK24pO3JldHVybiByKz1uLG5ldyB0SihpKX0pfWNsYXNzIHRKe2NvbnN0cnVjdG9yKGUpe3RoaXMudmVjdG9yPWUsdGhpcy5pbmRleD0wfW5leHQoKXtyZXR1cm4gdGhpcy5pbmRleDx0aGlzLnZlY3Rvci5sZW5ndGg/e3ZhbHVlOnRoaXMudmVjdG9yLmdldCh0aGlzLmluZGV4KyspfTp7ZG9uZTohMCx2YWx1ZTpudWxsfX1bU3ltYm9sLml0ZXJhdG9yXSgpe3JldHVybiB0aGlzfX10WC5wcm90b3R5cGUudmlzaXROdWxsPXRxLHRYLnByb3RvdHlwZS52aXNpdEJvb2w9dHEsdFgucHJvdG90eXBlLnZpc2l0SW50PXRxLHRYLnByb3RvdHlwZS52aXNpdEludDg9dHEsdFgucHJvdG90eXBlLnZpc2l0SW50MTY9dHEsdFgucHJvdG90eXBlLnZpc2l0SW50MzI9dHEsdFgucHJvdG90eXBlLnZpc2l0SW50NjQ9dHEsdFgucHJvdG90eXBlLnZpc2l0VWludDg9dHEsdFgucHJvdG90eXBlLnZpc2l0VWludDE2PXRxLHRYLnByb3RvdHlwZS52aXNpdFVpbnQzMj10cSx0WC5wcm90b3R5cGUudmlzaXRVaW50NjQ9dHEsdFgucHJvdG90eXBlLnZpc2l0RmxvYXQ9dHEsdFgucHJvdG90eXBlLnZpc2l0RmxvYXQxNj10cSx0WC5wcm90b3R5cGUudmlzaXRGbG9hdDMyPXRxLHRYLnByb3RvdHlwZS52aXNpdEZsb2F0NjQ9dHEsdFgucHJvdG90eXBlLnZpc2l0VXRmOD10cSx0WC5wcm90b3R5cGUudmlzaXRMYXJnZVV0Zjg9dHEsdFgucHJvdG90eXBlLnZpc2l0QmluYXJ5PXRxLHRYLnByb3RvdHlwZS52aXNpdExhcmdlQmluYXJ5PXRxLHRYLnByb3RvdHlwZS52aXNpdEZpeGVkU2l6ZUJpbmFyeT10cSx0WC5wcm90b3R5cGUudmlzaXREYXRlPXRxLHRYLnByb3RvdHlwZS52aXNpdERhdGVEYXk9dHEsdFgucHJvdG90eXBlLnZpc2l0RGF0ZU1pbGxpc2Vjb25kPXRxLHRYLnByb3RvdHlwZS52aXNpdFRpbWVzdGFtcD10cSx0WC5wcm90b3R5cGUudmlzaXRUaW1lc3RhbXBTZWNvbmQ9dHEsdFgucHJvdG90eXBlLnZpc2l0VGltZXN0YW1wTWlsbGlzZWNvbmQ9dHEsdFgucHJvdG90eXBlLnZpc2l0VGltZXN0YW1wTWljcm9zZWNvbmQ9dHEsdFgucHJvdG90eXBlLnZpc2l0VGltZXN0YW1wTmFub3NlY29uZD10cSx0WC5wcm90b3R5cGUudmlzaXRUaW1lPXRxLHRYLnByb3RvdHlwZS52aXNpdFRpbWVTZWNvbmQ9dHEsdFgucHJvdG90eXBlLnZpc2l0VGltZU1pbGxpc2Vjb25kPXRxLHRYLnByb3RvdHlwZS52aXNpdFRpbWVNaWNyb3NlY29uZD10cSx0WC5wcm90b3R5cGUudmlzaXRUaW1lTmFub3NlY29uZD10cSx0WC5wcm90b3R5cGUudmlzaXREZWNpbWFsPXRxLHRYLnByb3RvdHlwZS52aXNpdExpc3Q9dHEsdFgucHJvdG90eXBlLnZpc2l0U3RydWN0PXRxLHRYLnByb3RvdHlwZS52aXNpdFVuaW9uPXRxLHRYLnByb3RvdHlwZS52aXNpdERlbnNlVW5pb249dHEsdFgucHJvdG90eXBlLnZpc2l0U3BhcnNlVW5pb249dHEsdFgucHJvdG90eXBlLnZpc2l0RGljdGlvbmFyeT10cSx0WC5wcm90b3R5cGUudmlzaXRJbnRlcnZhbD10cSx0WC5wcm90b3R5cGUudmlzaXRJbnRlcnZhbERheVRpbWU9dHEsdFgucHJvdG90eXBlLnZpc2l0SW50ZXJ2YWxZZWFyTW9udGg9dHEsdFgucHJvdG90eXBlLnZpc2l0RHVyYXRpb249dHEsdFgucHJvdG90eXBlLnZpc2l0RHVyYXRpb25TZWNvbmQ9dHEsdFgucHJvdG90eXBlLnZpc2l0RHVyYXRpb25NaWxsaXNlY29uZD10cSx0WC5wcm90b3R5cGUu"
     ""
     ""
     ""
     ""
     ""
     ""
     "cnJvciIpO2Rve2lmKHRbMl09cnYoZSwicmVhZGFibGUiKSxbcixpXT15aWVsZCgwLGguTjMpKFByb21pc2UucmFjZSh0Lm1hcChlPT5lWzJdKSkpLCJlcnJvciI9PT1yKWJyZWFrO2lmKChuPSJlbmQiPT09cil8fChOdW1iZXIuaXNGaW5pdGUoby1hKT8odT1IKGUucmVhZChvLWEpKSkuYnl0ZUxlbmd0aDxvLWEmJih1PUgoZS5yZWFkKCkpKTp1PUgoZS5yZWFkKCkpLHUuYnl0ZUxlbmd0aD4wJiYobC5wdXNoKHUpLGErPXUuYnl0ZUxlbmd0aCkpLG58fG88PWEpZG8oe2NtZDpzLHNpemU6b309eWllbGQgeWllbGQoMCxoLk4zKSgicGVlayI9PT1zP1AobCxvKVswXTooW3UsbCxhXT1QKGwsbyksdSkpKTt3aGlsZShvPGEpfXdoaWxlKCFuKX1maW5hbGx5e3ZhciBkLGM7eWllbGQoMCxoLk4zKSgoZD10LGM9ImVycm9yIj09PXI/aTpudWxsLHU9bD1udWxsLG5ldyBQcm9taXNlKCh0LHIpPT57Zm9yKGxldFt0LHJdb2YgZCllLm9mZih0LHIpO3RyeXtsZXQgdD1lLmRlc3Ryb3k7dCYmdC5jYWxsKGUsYyksYz12b2lkIDB9Y2F0Y2goZSl7Yz1lfHxjfWZpbmFsbHl7bnVsbCE9Yz9yKGMpOnQoKX19KSkpfXJldHVybiB5aWVsZCgwLGguTjMpKG51bGwpfSl9KGUpKSx0b0RPTVN0cmVhbShlLHQpe3Rocm93IEVycm9yKCcidG9ET01TdHJlYW0iIG5vdCBhdmFpbGFibGUgaW4gdGhpcyBlbnZpcm9ubWVudCcpfSx0b05vZGVTdHJlYW0oZSx0KXt0aHJvdyBFcnJvcignInRvTm9kZVN0cmVhbSIgbm90IGF2YWlsYWJsZSBpbiB0aGlzIGVudmlyb25tZW50Jyl9fSxyYj1lPT4oZS5uZXh0KCksZSk7Y2xhc3Mgcl97Y29uc3RydWN0b3IoZSl7dGhpcy5zb3VyY2U9ZSx0aGlzLnJlYWRlcj1udWxsLHRoaXMucmVhZGVyPXRoaXMuc291cmNlLmdldFJlYWRlcigpLHRoaXMucmVhZGVyLmNsb3NlZC5jYXRjaCgoKT0+e30pfWdldCBjbG9zZWQoKXtyZXR1cm4gdGhpcy5yZWFkZXI/dGhpcy5yZWFkZXIuY2xvc2VkLmNhdGNoKCgpPT57fSk6UHJvbWlzZS5yZXNvbHZlKCl9cmVsZWFzZUxvY2soKXt0aGlzLnJlYWRlciYmdGhpcy5yZWFkZXIucmVsZWFzZUxvY2soKSx0aGlzLnJlYWRlcj1udWxsfWNhbmNlbChlKXtyZXR1cm4oMCxoLnNIKSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24qKCl7bGV0e3JlYWRlcjp0LHNvdXJjZTpyfT10aGlzO3QmJih5aWVsZCB0LmNhbmNlbChlKS5jYXRjaCgoKT0+e30pKSxyJiZyLmxvY2tlZCYmdGhpcy5yZWxlYXNlTG9jaygpfSl9cmVhZChlKXtyZXR1cm4oMCxoLnNIKSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24qKCl7aWYoMD09PWUpcmV0dXJue2RvbmU6bnVsbD09dGhpcy5yZWFkZXIsdmFsdWU6bmV3IFVpbnQ4QXJyYXkoMCl9O2xldCB0PXlpZWxkIHRoaXMucmVhZGVyLnJlYWQoKTtyZXR1cm4gdC5kb25lfHwodC52YWx1ZT1IKHQpKSx0fSl9fWxldCBydj0oZSx0KT0+e2xldCByO2xldCBuPWU9PnIoW3QsZV0pO3JldHVyblt0LG4sbmV3IFByb21pc2UoaT0+KHI9aSkmJmUub25jZSh0LG4pKV19LHJ3PU9iamVjdC5mcmVlemUoe2RvbmU6ITAsdmFsdWU6dm9pZCAwfSk7Y2xhc3MgclR7Y29uc3RydWN0b3IoZSl7dGhpcy5fanNvbj1lfWdldCBzY2hlbWEoKXtyZXR1cm4gdGhpcy5fanNvbi5zY2hlbWF9Z2V0IGJhdGNoZXMoKXtyZXR1cm4gdGhpcy5fanNvbi5iYXRjaGVzfHxbXX1nZXQgZGljdGlvbmFyaWVzKCl7cmV0dXJuIHRoaXMuX2pzb24uZGljdGlvbmFyaWVzfHxbXX19Y2xhc3MgclN7dGVlKCl7cmV0dXJuIHRoaXMuX2dldERPTVN0cmVhbSgpLnRlZSgpfXBpcGUoZSx0KXtyZXR1cm4gdGhpcy5fZ2V0Tm9kZVN0cmVhbSgpLnBpcGUoZSx0KX1waXBlVG8oZSx0KXtyZXR1cm4gdGhpcy5fZ2V0RE9NU3RyZWFtKCkucGlwZVRvKGUsdCl9cGlwZVRocm91Z2goZSx0KXtyZXR1cm4gdGhpcy5fZ2V0RE9NU3RyZWFtKCkucGlwZVRocm91Z2goZSx0KX1fZ2V0RE9NU3RyZWFtKCl7cmV0dXJuIHRoaXMuX0RPTVN0cmVhbXx8KHRoaXMuX0RPTVN0cmVhbT10aGlzLnRvRE9NU3RyZWFtKCkpfV9nZXROb2RlU3RyZWFtKCl7cmV0dXJuIHRoaXMuX25vZGVTdHJlYW18fCh0aGlzLl9ub2RlU3RyZWFtPXRoaXMudG9Ob2RlU3RyZWFtKCkpfX1jbGFzcyByRSBleHRlbmRzIHJTe2NvbnN0cnVjdG9yKCl7c3VwZXIoKSx0aGlzLl92YWx1ZXM9W10sdGhpcy5yZXNvbHZlcnM9W10sdGhpcy5fY2xvc2VkUHJvbWlzZT1uZXcgUHJvbWlzZShlPT50aGlzLl9jbG9zZWRQcm9taXNlUmVzb2x2ZT1lKX1nZXQgY2xvc2VkKCl7cmV0dXJuIHRoaXMuX2Nsb3NlZFByb21pc2V9Y2FuY2VsKGUpe3JldHVybigwLGguc0gpKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbiooKXt5aWVsZCB0aGlzLnJldHVybihlKX0pfXdyaXRlKGUpe3RoaXMuX2Vuc3VyZU9wZW4oKSYmKHRoaXMucmVzb2x2ZXJzLmxlbmd0aDw9MD90aGlzLl92YWx1ZXMucHVzaChlKTp0aGlzLnJlc29sdmVycy5zaGlmdCgpLnJlc29sdmUoe2RvbmU6ITEsdmFsdWU6ZX0pKX1hYm9ydChlKXt0aGlzLl9jbG9zZWRQcm9taXNlUmVzb2x2ZSYmKHRoaXMucmVzb2x2ZXJzLmxlbmd0aDw9MD90aGlzLl9lcnJvcj17ZXJyb3I6ZX06dGhpcy5yZXNvbHZlcnMuc2hpZnQoKS5yZWplY3Qoe2RvbmU6ITAsdmFsdWU6ZX0pKX1jbG9zZSgpe2lmKHRoaXMuX2Nsb3NlZFByb21pc2VSZXNvbHZlKXtsZXR7cmVzb2x2ZXJzOmV9PXRoaXM7Zm9yKDtlLmxlbmd0aD4wOyllLnNoaWZ0KCkucmVzb2x2ZShydyk7dGhpcy5fY2xvc2VkUHJvbWlzZVJlc29sdmUoKSx0aGlzLl9jbG9zZWRQcm9taXNlUmVzb2x2ZT12b2lkIDB9fVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKXtyZXR1cm4gdGhpc310b0RPTVN0cmVhbShlKXtyZXR1cm4gcnkudG9ET01TdHJlYW0odGhpcy5fY2xvc2VkUHJvbWlzZVJlc29sdmV8fHRoaXMuX2Vycm9yP3RoaXM6dGhpcy5fdmFsdWVzLGUpfXRvTm9kZVN0cmVhbShlKXtyZXR1cm4gcnkudG9Ob2RlU3RyZWFtKHRoaXMuX2Nsb3NlZFByb21pc2VSZXNvbHZlfHx0aGlzLl9lcnJvcj90aGlzOnRoaXMuX3ZhbHVlcyxlKX10aHJvdyhlKXtyZXR1cm4oMCxoLnNIKSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24qKCl7cmV0dXJuIHlpZWxkIHRoaXMuYWJvcnQoZSkscnd9KX1yZXR1cm4oZSl7cmV0dXJuKDAsaC5zSCkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKigpe3JldHVybiB5aWVsZCB0aGlzLmNsb3NlKCkscnd9KX1yZWFkKGUpe3JldHVybigwLGguc0gpKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbiooKXtyZXR1cm4oeWllbGQgdGhpcy5uZXh0KGUsInJlYWQiKSkudmFsdWV9KX1wZWVrKGUpe3JldHVybigwLGguc0gpKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbiooKXtyZXR1cm4oeWllbGQgdGhpcy5uZXh0KGUsInBlZWsiKSkudmFsdWV9KX1uZXh0KC4uLmUpe3JldHVybiB0aGlzLl92YWx1ZXMubGVuZ3RoPjA/UHJvbWlzZS5yZXNvbHZlKHtkb25lOiExLHZhbHVlOnRoaXMuX3ZhbHVlcy5zaGlmdCgpfSk6dGhpcy5fZXJyb3I/UHJvbWlzZS5yZWplY3Qoe2RvbmU6ITAsdmFsdWU6dGhpcy5fZXJyb3IuZXJyb3J9KTp0aGlzLl9jbG9zZWRQcm9taXNlUmVzb2x2ZT9uZXcgUHJvbWlzZSgoZSx0KT0+e3RoaXMucmVzb2x2ZXJzLnB1c2goe3Jlc29sdmU6ZSxyZWplY3Q6dH0pfSk6UHJvbWlzZS5yZXNvbHZlKHJ3KX1fZW5zdXJlT3Blbigpe2lmKHRoaXMuX2Nsb3NlZFByb21pc2VSZXNvbHZlKXJldHVybiEwO3Rocm93IEVycm9yKCJBc3luY1F1ZXVlIGlzIGNsb3NlZCIpfX1jbGFzcyByeCBleHRlbmRzIHJFe3dyaXRlKGUpe2lmKChlPUgoZSkpLmJ5dGVMZW5ndGg+MClyZXR1cm4gc3VwZXIud3JpdGUoZSl9dG9TdHJpbmcoZT0hMSl7cmV0dXJuIGU/eSh0aGlzLnRvVWludDhBcnJheSghMCkpOnRoaXMudG9VaW50OEFycmF5KCExKS50aGVuKHkpfXRvVWludDhBcnJheShlPSExKXtyZXR1cm4gZT9QKHRoaXMuX3ZhbHVlcylbMF06KDAsaC5zSCkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKigpe3ZhciBlLHQscixuO2xldCBpPVtdLHM9MDt0cnl7Zm9yKHZhciBvLGE9ITAsbD0oMCxoLnhOKSh0aGlzKTshKGU9KG89eWllbGQgbC5uZXh0KCkpLmRvbmUpO2E9ITApbj1vLnZhbHVlLGE9ITEsaS5wdXNoKG4pLHMrPW4uYnl0ZUxlbmd0aH1jYXRjaChlKXt0PXtlcnJvcjplfX1maW5hbGx5e3RyeXshYSYmIWUmJihyPWwucmV0dXJuKSYmKHlpZWxkIHIuY2FsbChsKSl9ZmluYWxseXtpZih0KXRocm93IHQuZXJyb3J9fXJldHVybiBQKGkscylbMF19KX19Y2xhc3MgckF7Y29uc3RydWN0b3IoZSl7ZSYmKHRoaXMuc291cmNlPW5ldyByTyhyeS5mcm9tSXRlcmFibGUoZSkpKX1bU3ltYm9sLml0ZXJhdG9yXSgpe3JldHVybiB0aGlzfW5leHQoZSl7cmV0dXJuIHRoaXMuc291cmNlLm5leHQoZSl9dGhyb3coZSl7cmV0dXJuIHRoaXMuc291cmNlLnRocm93KGUpfXJldHVybihlKXtyZXR1cm4gdGhpcy5zb3VyY2UucmV0dXJuKGUpfXBlZWsoZSl7cmV0dXJuIHRoaXMuc291cmNlLnBlZWsoZSl9cmVhZChlKXtyZXR1cm4gdGhpcy5zb3VyY2UucmVhZChlKX19Y2xhc3Mgckl7Y29uc3RydWN0b3IoZSl7ZSBpbnN0YW5jZW9mIHJJP3RoaXMuc291cmNlPWUuc291cmNlOmUgaW5zdGFuY2VvZiByeD90aGlzLnNvdXJjZT1uZXcgclIocnkuZnJvbUFzeW5jSXRlcmFibGUoZSkpOmsoZSk/dGhpcy5zb3VyY2U9bmV3IHJSKHJ5LmZyb21Ob2RlU3RyZWFtKGUpKTpEKGUpP3RoaXMuc291cmNlPW5ldyByUihyeS5mcm9tRE9NU3RyZWFtKGUpKTpOKGUpP3RoaXMuc291cmNlPW5ldyByUihyeS5mcm9tRE9NU3RyZWFtKGUuYm9keSkpOngoZSk/dGhpcy5zb3VyY2U9bmV3IHJSKHJ5LmZyb21JdGVyYWJsZShlKSk6RShlKT90aGlzLnNvdXJjZT1uZXcgclIocnkuZnJvbUFzeW5jSXRlcmFibGUoZSkpOkEoZSkmJih0aGlzLnNvdXJjZT1uZXcgclIocnkuZnJvbUFzeW5jSXRlcmFibGUoZSkpKX1bU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCl7cmV0dXJuIHRoaXN9bmV4dChlKXtyZXR1cm4gdGhpcy5zb3VyY2UubmV4dChlKX10aHJvdyhlKXtyZXR1cm4gdGhpcy5zb3VyY2UudGhyb3coZSl9cmV0dXJuKGUpe3JldHVybiB0aGlzLnNvdXJjZS5yZXR1cm4oZSl9Z2V0IGNsb3NlZCgpe3JldHVybiB0aGlzLnNvdXJjZS5jbG9zZWR9Y2FuY2VsKGUpe3JldHVybiB0aGlzLnNvdXJjZS5jYW5jZWwoZSl9cGVlayhlKXtyZXR1cm4gdGhpcy5zb3VyY2UucGVlayhlKX1yZWFkKGUpe3JldHVybiB0aGlzLnNvdXJjZS5yZWFkKGUpfX1jbGFzcyByT3tjb25zdHJ1Y3RvcihlKXt0aGlzLnNvdXJjZT1lfWNhbmNlbChlKXt0aGlzLnJldHVybihlKX1wZWVrKGUpe3JldHVybiB0aGlzLm5leHQoZSwicGVlayIpLnZhbHVlfXJlYWQoZSl7cmV0dXJuIHRoaXMubmV4dChlLCJyZWFkIikudmFsdWV9bmV4dChlLHQ9InJlYWQiKXtyZXR1cm4gdGhpcy5zb3VyY2UubmV4dCh7Y21kOnQsc2l6ZTplfSl9dGhyb3coZSl7cmV0dXJuIE9iamVjdC5jcmVhdGUodGhpcy5zb3VyY2UudGhyb3cmJnRoaXMuc291cmNlLnRocm93KGUpfHxydyl9cmV0dXJuKGUpe3JldHVybiBPYmplY3QuY3JlYXRlKHRoaXMuc291cmNlLnJldHVybiYmdGhpcy5zb3VyY2UucmV0dXJuKGUpfHxydyl9fWNsYXNzIHJSe2NvbnN0cnVjdG9yKGUpe3RoaXMuc291cmNlPWUsdGhpcy5fY2xvc2VkUHJvbWlzZT1uZXcgUHJvbWlzZShlPT50aGlzLl9jbG9zZWRQcm9taXNlUmVzb2x2ZT1lKX1jYW5jZWwoZSl7cmV0dXJuKDAsaC5zSCkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKigpe3lpZWxkIHRoaXMucmV0dXJuKGUpfSl9Z2V0IGNsb3NlZCgpe3JldHVybiB0aGlzLl9jbG9zZWRQcm9taXNlfXJlYWQoZSl7cmV0dXJuKDAsaC5zSCkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKigpe3JldHVybih5aWVsZCB0aGlzLm5leHQoZSwicmVhZCIpKS52YWx1ZX0pfXBlZWsoZSl7cmV0dXJuKDAsaC5zSCkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKigpe3JldHVybih5aWVsZCB0aGlzLm5leHQoZSwicGVlayIpKS52YWx1ZX0pfW5leHQoZSl7cmV0dXJuKDAsaC5zSCkodGhpcyxhcmd1bWVudHMsdm9pZCAwLGZ1bmN0aW9uKihlLHQ9InJlYWQiKXtyZXR1cm4geWllbGQgdGhpcy5zb3VyY2UubmV4dCh7Y21kOnQsc2l6ZTplfSl9KX10aHJvdyhlKXtyZXR1cm4oMCxoLnNIKSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24qKCl7bG"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "lmKGUgaW5zdGFuY2VvZiByZClyZXR1cm4gbmV3IG5BKDAsby5WNSxpLlNjaGVtYSxlKTtpZihlIGluc3RhbmNlb2YgbkkpcmV0dXJuIG5ldyBuQSh0LG8uVjUsaS5SZWNvcmRCYXRjaCxlKTtpZihlIGluc3RhbmNlb2Ygbk8pcmV0dXJuIG5ldyBuQSh0LG8uVjUsaS5EaWN0aW9uYXJ5QmF0Y2gsZSk7dGhyb3cgRXJyb3IoYFVucmVjb2duaXplZCBNZXNzYWdlIGhlYWRlcjogJHtlfWApfWdldCB0eXBlKCl7cmV0dXJuIHRoaXMuaGVhZGVyVHlwZX1nZXQgdmVyc2lvbigpe3JldHVybiB0aGlzLl92ZXJzaW9ufWdldCBoZWFkZXJUeXBlKCl7cmV0dXJuIHRoaXMuX2hlYWRlclR5cGV9Z2V0IGJvZHlMZW5ndGgoKXtyZXR1cm4gdGhpcy5fYm9keUxlbmd0aH1oZWFkZXIoKXtyZXR1cm4gdGhpcy5fY3JlYXRlSGVhZGVyKCl9aXNTY2hlbWEoKXtyZXR1cm4gdGhpcy5oZWFkZXJUeXBlPT09aS5TY2hlbWF9aXNSZWNvcmRCYXRjaCgpe3JldHVybiB0aGlzLmhlYWRlclR5cGU9PT1pLlJlY29yZEJhdGNofWlzRGljdGlvbmFyeUJhdGNoKCl7cmV0dXJuIHRoaXMuaGVhZGVyVHlwZT09PWkuRGljdGlvbmFyeUJhdGNofWNvbnN0cnVjdG9yKGUsdCxyLG4pe3RoaXMuX3ZlcnNpb249dCx0aGlzLl9oZWFkZXJUeXBlPXIsdGhpcy5ib2R5PW5ldyBVaW50OEFycmF5KDApLG4mJih0aGlzLl9jcmVhdGVIZWFkZXI9KCk9Pm4pLHRoaXMuX2JvZHlMZW5ndGg9KDAsRy5pKShlKX19Y2xhc3Mgbkl7Z2V0IG5vZGVzKCl7cmV0dXJuIHRoaXMuX25vZGVzfWdldCBsZW5ndGgoKXtyZXR1cm4gdGhpcy5fbGVuZ3RofWdldCBidWZmZXJzKCl7cmV0dXJuIHRoaXMuX2J1ZmZlcnN9Y29uc3RydWN0b3IoZSx0LHIpe3RoaXMuX25vZGVzPXQsdGhpcy5fYnVmZmVycz1yLHRoaXMuX2xlbmd0aD0oMCxHLmkpKGUpfX1jbGFzcyBuT3tnZXQgaWQoKXtyZXR1cm4gdGhpcy5faWR9Z2V0IGRhdGEoKXtyZXR1cm4gdGhpcy5fZGF0YX1nZXQgaXNEZWx0YSgpe3JldHVybiB0aGlzLl9pc0RlbHRhfWdldCBsZW5ndGgoKXtyZXR1cm4gdGhpcy5kYXRhLmxlbmd0aH1nZXQgbm9kZXMoKXtyZXR1cm4gdGhpcy5kYXRhLm5vZGVzfWdldCBidWZmZXJzKCl7cmV0dXJuIHRoaXMuZGF0YS5idWZmZXJzfWNvbnN0cnVjdG9yKGUsdCxyPSExKXt0aGlzLl9kYXRhPWUsdGhpcy5faXNEZWx0YT1yLHRoaXMuX2lkPSgwLEcuaSkodCl9fWNsYXNzIG5Se2NvbnN0cnVjdG9yKGUsdCl7dGhpcy5vZmZzZXQ9KDAsRy5pKShlKSx0aGlzLmxlbmd0aD0oMCxHLmkpKHQpfX1jbGFzcyBuTntjb25zdHJ1Y3RvcihlLHQpe3RoaXMubGVuZ3RoPSgwLEcuaSkoZSksdGhpcy5udWxsQ291bnQ9KDAsRy5pKSh0KX19ZnVuY3Rpb24gbkMoZSx0KXtsZXQgcj1bXTtmb3IobGV0IG4saT0tMSxzPS0xLG89ZS5jaGlsZHJlbkxlbmd0aCgpOysraTxvOykobj1lLmNoaWxkcmVuKGkpKSYmKHJbKytzXT1yYy5kZWNvZGUobix0KSk7cmV0dXJuIHJ9ZnVuY3Rpb24gbkwoZSl7bGV0IHQ9bmV3IE1hcDtpZihlKWZvcihsZXQgcixuLGk9LTEscz1NYXRoLnRydW5jKGUuY3VzdG9tTWV0YWRhdGFMZW5ndGgoKSk7KytpPHM7KShyPWUuY3VzdG9tTWV0YWRhdGEoaSkpJiZudWxsIT0obj1yLmtleSgpKSYmdC5zZXQobixyLnZhbHVlKCkpO3JldHVybiB0fWZ1bmN0aW9uIG5EKGUpe3JldHVybiBuZXcgZWQuQWkoZS5pc1NpZ25lZCgpLGUuYml0V2lkdGgoKSl9ZnVuY3Rpb24gbkIoZSx0KXtsZXQgcj1lLnR5cGVUeXBlKCk7c3dpdGNoKHIpe2Nhc2UgdS5OT05FOmNhc2UgdS5OdWxsOnJldHVybiBuZXcgZWQuVXY7Y2FzZSB1LkJpbmFyeTpyZXR1cm4gbmV3IGVkLnlJO2Nhc2UgdS5MYXJnZUJpbmFyeTpyZXR1cm4gbmV3IGVkLkJTO2Nhc2UgdS5VdGY4OnJldHVybiBuZXcgZWQuWUU7Y2FzZSB1LkxhcmdlVXRmODpyZXR1cm4gbmV3IGVkLkpiO2Nhc2UgdS5Cb29sOnJldHVybiBuZXcgZWQueDtjYXNlIHUuTGlzdDpyZXR1cm4gbmV3IGVkLkI4KCh0fHxbXSlbMF0pO2Nhc2UgdS5TdHJ1Y3RfOnJldHVybiBuZXcgZWQuX2sodHx8W10pfXN3aXRjaChyKXtjYXNlIHUuSW50OntsZXQgdD1lLnR5cGUobmV3IHJzKTtyZXR1cm4gbmV3IGVkLkFpKHQuaXNTaWduZWQoKSx0LmJpdFdpZHRoKCkpfWNhc2UgdS5GbG9hdGluZ1BvaW50OntsZXQgdD1lLnR5cGUobmV3IHI5KTtyZXR1cm4gbmV3IGVkLm50KHQucHJlY2lzaW9uKCkpfWNhc2UgdS5EZWNpbWFsOntsZXQgdD1lLnR5cGUobmV3IG5lKTtyZXR1cm4gbmV3IGVkLld3KHQuc2NhbGUoKSx0LnByZWNpc2lvbigpLHQuYml0V2lkdGgoKSl9Y2FzZSB1LkRhdGU6e2xldCB0PWUudHlwZShuZXcgbnQpO3JldHVybiBuZXcgZWQuT0QodC51bml0KCkpfWNhc2UgdS5UaW1lOntsZXQgdD1lLnR5cGUobmV3IG5yKTtyZXR1cm4gbmV3IGVkLmdYKHQudW5pdCgpLHQuYml0V2lkdGgoKSl9Y2FzZSB1LlRpbWVzdGFtcDp7bGV0IHQ9ZS50eXBlKG5ldyBubik7cmV0dXJuIG5ldyBlZC5EYyh0LnVuaXQoKSx0LnRpbWV6b25lKCkpfWNhc2UgdS5JbnRlcnZhbDp7bGV0IHQ9ZS50eXBlKG5ldyBuaSk7cmV0dXJuIG5ldyBlZC5JWCh0LnVuaXQoKSl9Y2FzZSB1LkR1cmF0aW9uOntsZXQgdD1lLnR5cGUobmV3IG5zKTtyZXR1cm4gbmV3IGVkLmR3KHQudW5pdCgpKX1jYXNlIHUuVW5pb246e2xldCByPWUudHlwZShuZXcgbm8pO3JldHVybiBuZXcgZWQuZ1Aoci5tb2RlKCksci50eXBlSWRzQXJyYXkoKXx8W10sdHx8W10pfWNhc2UgdS5GaXhlZFNpemVCaW5hcnk6e2xldCB0PWUudHlwZShuZXcgbmEpO3JldHVybiBuZXcgZWQuUHYodC5ieXRlV2lkdGgoKSl9Y2FzZSB1LkZpeGVkU2l6ZUxpc3Q6e2xldCByPWUudHlwZShuZXcgbmwpO3JldHVybiBuZXcgZWQuWTEoci5saXN0U2l6ZSgpLCh0fHxbXSlbMF0pfWNhc2UgdS5NYXA6e2xldCByPWUudHlwZShuZXcgbnUpO3JldHVybiBuZXcgZWQuV0QoKHR8fFtdKVswXSxyLmtleXNTb3J0ZWQoKSl9fXRocm93IEVycm9yKGBVbnJlY29nbml6ZWQgdHlwZTogIiR7dVtyXX0iICgke3J9KWApfXJjLmVuY29kZT1mdW5jdGlvbihlLHQpe2xldCByPS0xLG49LTEsaT0tMSxzPXQudHlwZSxvPXQudHlwZUlkO2VkLnBlLmlzRGljdGlvbmFyeShzKT8obz1zLmRpY3Rpb25hcnkudHlwZUlkLGk9bnYudmlzaXQocyxlKSxuPW52LnZpc2l0KHMuZGljdGlvbmFyeSxlKSk6bj1udi52aXNpdChzLGUpO2xldCBhPShzLmNoaWxkcmVufHxbXSkubWFwKHQ9PnJjLmVuY29kZShlLHQpKSxsPXJhLmNyZWF0ZUNoaWxkcmVuVmVjdG9yKGUsYSksdT10Lm1ldGFkYXRhJiZ0Lm1ldGFkYXRhLnNpemU+MD9yYS5jcmVhdGVDdXN0b21NZXRhZGF0YVZlY3RvcihlLFsuLi50Lm1ldGFkYXRhXS5tYXAoKFt0LHJdKT0+e2xldCBuPWUuY3JlYXRlU3RyaW5nKGAke3R9YCksaT1lLmNyZWF0ZVN0cmluZyhgJHtyfWApO3JldHVybiByaS5zdGFydEtleVZhbHVlKGUpLHJpLmFkZEtleShlLG4pLHJpLmFkZFZhbHVlKGUsaSkscmkuZW5kS2V5VmFsdWUoZSl9KSk6LTE7cmV0dXJuIHQubmFtZSYmKHI9ZS5jcmVhdGVTdHJpbmcodC5uYW1lKSkscmEuc3RhcnRGaWVsZChlKSxyYS5hZGRUeXBlKGUsbikscmEuYWRkVHlwZVR5cGUoZSxvKSxyYS5hZGRDaGlsZHJlbihlLGwpLHJhLmFkZE51bGxhYmxlKGUsISF0Lm51bGxhYmxlKSwtMSE9PXImJnJhLmFkZE5hbWUoZSxyKSwtMSE9PWkmJnJhLmFkZERpY3Rpb25hcnkoZSxpKSwtMSE9PXUmJnJhLmFkZEN1c3RvbU1ldGFkYXRhKGUsdSkscmEuZW5kRmllbGQoZSl9LHJjLmRlY29kZT1mdW5jdGlvbihlLHQpe2xldCByLG4saSxzLG8sYTtyZXR1cm4gdCYmKGE9ZS5kaWN0aW9uYXJ5KCkpPyh0LmhhcyhyPSgwLEcuaSkoYS5pZCgpKSk/KHM9KHM9YS5pbmRleFR5cGUoKSk/bkQocyk6bmV3IGVkLlBfLG89bmV3IGVkLmJUKHQuZ2V0KHIpLHMscixhLmlzT3JkZXJlZCgpKSk6KHM9KHM9YS5pbmRleFR5cGUoKSk/bkQocyk6bmV3IGVkLlBfLHQuc2V0KHIsaT1uQihlLG5DKGUsdCkpKSxvPW5ldyBlZC5iVChpLHMscixhLmlzT3JkZXJlZCgpKSksbj1uZXcgcmMoZS5uYW1lKCksbyxlLm51bGxhYmxlKCksbkwoZSkpKTooaT1uQihlLG5DKGUsdCkpLG49bmV3IHJjKGUubmFtZSgpLGksZS5udWxsYWJsZSgpLG5MKGUpKSksbnx8bnVsbH0scmMuZnJvbUpTT049ZnVuY3Rpb24oZSx0KXtsZXQgcixuLGkscyxvLGE7cmV0dXJuIHQmJihzPWUuZGljdGlvbmFyeSk/KHQuaGFzKHI9cy5pZCk/KG49KG49cy5pbmRleFR5cGUpP25FKG4pOm5ldyBlZC5QXyxhPW5ldyBlZC5iVCh0LmdldChyKSxuLHIscy5pc09yZGVyZWQpKToobj0obj1zLmluZGV4VHlwZSk/bkUobik6bmV3IGVkLlBfLHQuc2V0KHIsbz1ueChlLG5UKGUsdCkpKSxhPW5ldyBlZC5iVChvLG4scixzLmlzT3JkZXJlZCkpLGk9bmV3IHJjKGUubmFtZSxhLGUubnVsbGFibGUsblMoZS5tZXRhZGF0YSkpKToobz1ueChlLG5UKGUsdCkpLGk9bmV3IHJjKGUubmFtZSxvLGUubnVsbGFibGUsblMoZS5tZXRhZGF0YSkpKSxpfHxudWxsfSxyZC5lbmNvZGU9ZnVuY3Rpb24oZSx0KXtsZXQgcj10LmZpZWxkcy5tYXAodD0+cmMuZW5jb2RlKGUsdCkpO3JsLnN0YXJ0RmllbGRzVmVjdG9yKGUsci5sZW5ndGgpO2xldCBuPXJsLmNyZWF0ZUZpZWxkc1ZlY3RvcihlLHIpLGk9dC5tZXRhZGF0YSYmdC5tZXRhZGF0YS5zaXplPjA/cmwuY3JlYXRlQ3VzdG9tTWV0YWRhdGFWZWN0b3IoZSxbLi4udC5tZXRhZGF0YV0ubWFwKChbdCxyXSk9PntsZXQgbj1lLmNyZWF0ZVN0cmluZyhgJHt0fWApLGk9ZS5jcmVhdGVTdHJpbmcoYCR7cn1gKTtyZXR1cm4gcmkuc3RhcnRLZXlWYWx1ZShlKSxyaS5hZGRLZXkoZSxuKSxyaS5hZGRWYWx1ZShlLGkpLHJpLmVuZEtleVZhbHVlKGUpfSkpOi0xO3JldHVybiBybC5zdGFydFNjaGVtYShlKSxybC5hZGRGaWVsZHMoZSxuKSxybC5hZGRFbmRpYW5uZXNzKGUsbms/YS5MaXR0bGU6YS5CaWcpLC0xIT09aSYmcmwuYWRkQ3VzdG9tTWV0YWRhdGEoZSxpKSxybC5lbmRTY2hlbWEoZSl9LHJkLmRlY29kZT1mdW5jdGlvbihlLHQ9bmV3IE1hcCxyPW8uVjUpe3JldHVybiBuZXcgcmQoZnVuY3Rpb24oZSx0KXtsZXQgcj1bXTtmb3IobGV0IG4saT0tMSxzPS0xLG89ZS5maWVsZHNMZW5ndGgoKTsrK2k8bzspKG49ZS5maWVsZHMoaSkpJiYoclsrK3NdPXJjLmRlY29kZShuLHQpKTtyZXR1cm4gcn0oZSx0KSxuTChlKSx0LHIpfSxyZC5mcm9tSlNPTj1mdW5jdGlvbihlLHQ9bmV3IE1hcCl7dmFyIHIsbjtyZXR1cm4gbmV3IHJkKChyPWUsbj10LChyLmZpZWxkc3x8W10pLmZpbHRlcihCb29sZWFuKS5tYXAoZT0+cmMuZnJvbUpTT04oZSxuKSkpLG5TKGUubWV0YWRhdGEpLHQpfSxuSS5lbmNvZGU9ZnVuY3Rpb24oZSx0KXtsZXQgcj10Lm5vZGVzfHxbXSxuPXQuYnVmZmVyc3x8W107Zm9yKGxldCB0IG9mKHI4LnN0YXJ0Tm9kZXNWZWN0b3IoZSxyLmxlbmd0aCksci5zbGljZSgpLnJldmVyc2UoKSkpbk4uZW5jb2RlKGUsdCk7bGV0IGk9ZS5lbmRWZWN0b3IoKTtmb3IobGV0IHQgb2Yocjguc3RhcnRCdWZmZXJzVmVjdG9yKGUsbi5sZW5ndGgpLG4uc2xpY2UoKS5yZXZlcnNlKCkpKW5SLmVuY29kZShlLHQpO2xldCBzPWUuZW5kVmVjdG9yKCk7cmV0dXJuIHI4LnN0YXJ0UmVjb3JkQmF0Y2goZSkscjguYWRkTGVuZ3RoKGUsQmlnSW50KHQubGVuZ3RoKSkscjguYWRkTm9kZXMoZSxpKSxyOC5hZGRCdWZmZXJzKGUscykscjguZW5kUmVjb3JkQmF0Y2goZSl9LG5JLmRlY29kZT1mdW5jdGlvbihlLHQ9by5WNSl7aWYobnVsbCE9PWUuY29tcHJlc3Npb24oKSl0aHJvdyBFcnJvcigiUmVjb3JkIGJhdGNoIGNvbXByZXNzaW9uIG5vdCBpbXBsZW1lbnRlZCIpO3JldHVybiBuZXcgbkkoZS5sZW5ndGgoKSxmdW5jdGlvbihlKXtsZXQgdD1bXTtmb3IobGV0IHIsbj0tMSxpPS0xLHM9ZS5ub2Rlc0xlbmd0aCgpOysrbjxzOykocj1lLm5vZGVzKG4pKSYmKHRbKytpXT1uTi5kZWNvZGUocikpO3JldHVybiB0fShlKSxmdW5jdGlvbihlLHQpe2xldCByPVtdO2ZvcihsZXQgbixpPS0xLHM9LTEsYT1lLmJ1ZmZlcnNMZW5ndGgoKTsrK2k8YTspKG49ZS5idWZmZXJzKGkpKSYmKHQ8by5WNCYmKG4uYmJfcG9zKz04KihpKzEpKSxyWysrc109blIuZGVjb2RlKG4pKTtyZXR1cm4gcn0oZSx0KSl9LG5JLmZyb21KU09OPW53LG5PLmVuY29kZT1mdW5jdGlvbihlLHQpe2xldCByPW5JLmVuY29kZShlLHQuZGF0YSk7cmV0dXJuIHI3LnN0"
     ""
     ""
     ""
     ""
     "cyhlKS5fd3JpdGVNZXNzYWdlKG8pLl93cml0ZUJvZHlCdWZmZXJzKGkpfV93cml0ZURpY3Rpb25hcnlCYXRjaChlLHQscj0hMSl7bGV0e2J5dGVMZW5ndGg6bixub2RlczppLGJ1ZmZlclJlZ2lvbnM6cyxidWZmZXJzOm99PWllLmFzc2VtYmxlKG5ldyB0MShbZV0pKSxhPW5ldyBuTyhuZXcgbkkoZS5sZW5ndGgsaSxzKSx0LHIpLGw9bkEuZnJvbShhLG4pO3JldHVybiB0aGlzLl93cml0ZU1lc3NhZ2UobCkuX3dyaXRlQm9keUJ1ZmZlcnMobyl9X3dyaXRlQm9keUJ1ZmZlcnMoZSl7bGV0IHQscixuO2ZvcihsZXQgaT0tMSxzPWUubGVuZ3RoOysraTxzOykodD1lW2ldKSYmKHI9dC5ieXRlTGVuZ3RoKT4wJiYodGhpcy5fd3JpdGUodCksKG49KHIrNyYtOCktcik+MCYmdGhpcy5fd3JpdGVQYWRkaW5nKG4pKTtyZXR1cm4gdGhpc31fd3JpdGVEaWN0aW9uYXJpZXMoZSl7dmFyIHQscjtmb3IobGV0W24saV1vZiBlLmRpY3Rpb25hcmllcyl7bGV0IGU9bnVsbCE9PSh0PW51bGw9PWk/dm9pZCAwOmkuZGF0YSkmJnZvaWQgMCE9PXQ/dDpbXSxzPXRoaXMuX3NlZW5EaWN0aW9uYXJpZXMuZ2V0KG4pLG89bnVsbCE9PShyPXRoaXMuX2RpY3Rpb25hcnlEZWx0YU9mZnNldHMuZ2V0KG4pKSYmdm9pZCAwIT09cj9yOjA7aWYocyYmcy5kYXRhWzBdPT09ZVswXSl7aWYobzxlLmxlbmd0aClmb3IobGV0IHQgb2YgZS5zbGljZShvKSl0aGlzLl93cml0ZURpY3Rpb25hcnlCYXRjaCh0LG4sITApfWVsc2UgZm9yKGxldFt0LHJdb2YgZS5lbnRyaWVzKCkpdGhpcy5fd3JpdGVEaWN0aW9uYXJ5QmF0Y2gocixuLHQ+MCk7dGhpcy5fc2VlbkRpY3Rpb25hcmllcy5zZXQobixpKSx0aGlzLl9kaWN0aW9uYXJ5RGVsdGFPZmZzZXRzLnNldChuLGUubGVuZ3RoKX1yZXR1cm4gdGhpc319Y2xhc3MgaWMgZXh0ZW5kcyBpZHtzdGF0aWMgd3JpdGVBbGwoZSx0KXtsZXQgcj1uZXcgaWModCk7cmV0dXJuIEUoZSk/ZS50aGVuKGU9PnIud3JpdGVBbGwoZSkpOkEoZSk/aW0ocixlKTppcChyLGUpfX1jbGFzcyBpaCBleHRlbmRzIGlke3N0YXRpYyB3cml0ZUFsbChlKXtsZXQgdD1uZXcgaWg7cmV0dXJuIEUoZSk/ZS50aGVuKGU9PnQud3JpdGVBbGwoZSkpOkEoZSk/aW0odCxlKTppcCh0LGUpfWNvbnN0cnVjdG9yKCl7c3VwZXIoKSx0aGlzLl9hdXRvRGVzdHJveT0hMH1fd3JpdGVTY2hlbWEoZSl7cmV0dXJuIHRoaXMuX3dyaXRlTWFnaWMoKS5fd3JpdGVQYWRkaW5nKDIpfV93cml0ZURpY3Rpb25hcnlCYXRjaChlLHQscj0hMSl7aWYoIXImJnRoaXMuX3NlZW5EaWN0aW9uYXJpZXMuaGFzKHQpKXRocm93IEVycm9yKCJUaGUgQXJyb3cgRmlsZSBmb3JtYXQgZG9lcyBub3Qgc3VwcG9ydCByZXBsYWNlbWVudCBkaWN0aW9uYXJpZXMuICIpO3JldHVybiBzdXBlci5fd3JpdGVEaWN0aW9uYXJ5QmF0Y2goZSx0LHIpfV93cml0ZUZvb3RlcihlKXtsZXQgdD1yZi5lbmNvZGUobmV3IHJmKGUsby5WNSx0aGlzLl9yZWNvcmRCYXRjaEJsb2Nrcyx0aGlzLl9kaWN0aW9uYXJ5QmxvY2tzKSk7cmV0dXJuIHN1cGVyLl93cml0ZUZvb3RlcihlKS5fd3JpdGUodCkuX3dyaXRlKEludDMyQXJyYXkub2YodC5ieXRlTGVuZ3RoKSkuX3dyaXRlTWFnaWMoKX19ZnVuY3Rpb24gaXAoZSx0KXtsZXQgcj10O2ZvcihsZXQgbiBvZih0IGluc3RhbmNlb2YgcjAmJihyPXQuYmF0Y2hlcyxlLnJlc2V0KHZvaWQgMCx0LnNjaGVtYSkpLHIpKWUud3JpdGUobik7cmV0dXJuIGUuZmluaXNoKCl9ZnVuY3Rpb24gaW0oZSx0KXtyZXR1cm4oMCxoLnNIKSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24qKCl7dmFyIHIsbixpLHMsbyxhLGw7dHJ5e2ZvcihyPSEwLG49KDAsaC54TikodCk7IShzPShpPXlpZWxkIG4ubmV4dCgpKS5kb25lKTtyPSEwKWw9aS52YWx1ZSxyPSExLGUud3JpdGUobCl9Y2F0Y2goZSl7bz17ZXJyb3I6ZX19ZmluYWxseXt0cnl7IXImJiFzJiYoYT1uLnJldHVybikmJih5aWVsZCBhLmNhbGwobikpfWZpbmFsbHl7aWYobyl0aHJvdyBvLmVycm9yfX1yZXR1cm4gZS5maW5pc2goKX0pfXZhciBpZz1PYmplY3QuY3JlYXRlLGl5PU9iamVjdC5kZWZpbmVQcm9wZXJ0eSxpYj1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yLGlfPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzLGl2PU9iamVjdC5nZXRQcm90b3R5cGVPZixpdz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LGlUPShlLHQscixuKT0+e2lmKHQmJiJvYmplY3QiPT10eXBlb2YgdHx8ImZ1bmN0aW9uIj09dHlwZW9mIHQpZm9yKGxldCBpIG9mIGlfKHQpKWl3LmNhbGwoZSxpKXx8aT09PXJ8fGl5KGUsaSx7Z2V0OigpPT50W2ldLGVudW1lcmFibGU6IShuPWliKHQsaSkpfHxuLmVudW1lcmFibGV9KTtyZXR1cm4gZX0saVM9KChlLHQpPT4oKT0+KHR8fGUoKHQ9e2V4cG9ydHM6e319KS5leHBvcnRzLHQpLHQuZXhwb3J0cykpKChlLHQpPT57dC5leHBvcnRzPVdvcmtlcn0pLGlFPShlPT4oZVtlLlVOREVGSU5FRD0wXT0iVU5ERUZJTkVEIixlW2UuQVVUT01BVElDPTFdPSJBVVRPTUFUSUMiLGVbZS5SRUFEX09OTFk9Ml09IlJFQURfT05MWSIsZVtlLlJFQURfV1JJVEU9M109IlJFQURfV1JJVEUiLGUpKShpRXx8e30pLGl4PShlPT4oZVtlLklERU5USUZJRVI9MF09IklERU5USUZJRVIiLGVbZS5OVU1FUklDX0NPTlNUQU5UPTFdPSJOVU1FUklDX0NPTlNUQU5UIixlW2UuU1RSSU5HX0NPTlNUQU5UPTJdPSJTVFJJTkdfQ09OU1RBTlQiLGVbZS5PUEVSQVRPUj0zXT0iT1BFUkFUT1IiLGVbZS5LRVlXT1JEPTRdPSJLRVlXT1JEIixlW2UuQ09NTUVOVD01XT0iQ09NTUVOVCIsZSkpKGl4fHx7fSksaUE9KGU9PihlW2UuTk9ORT0wXT0iTk9ORSIsZVtlLkRFQlVHPTFdPSJERUJVRyIsZVtlLklORk89Ml09IklORk8iLGVbZS5XQVJOSU5HPTNdPSJXQVJOSU5HIixlW2UuRVJST1I9NF09IkVSUk9SIixlKSkoaUF8fHt9KSxpST0oZT0+KGVbZS5OT05FPTBdPSJOT05FIixlW2UuQ09OTkVDVD0xXT0iQ09OTkVDVCIsZVtlLkRJU0NPTk5FQ1Q9Ml09IkRJU0NPTk5FQ1QiLGVbZS5PUEVOPTNdPSJPUEVOIixlW2UuUVVFUlk9NF09IlFVRVJZIixlW2UuSU5TVEFOVElBVEU9NV09IklOU1RBTlRJQVRFIixlKSkoaUl8fHt9KSxpTz0oZT0+KGVbZS5OT05FPTBdPSJOT05FIixlW2UuT0s9MV09Ik9LIixlW2UuRVJST1I9Ml09IkVSUk9SIixlW2UuU1RBUlQ9M109IlNUQVJUIixlW2UuUlVOPTRdPSJSVU4iLGVbZS5DQVBUVVJFPTVdPSJDQVBUVVJFIixlKSkoaU98fHt9KSxpUj0oZT0+KGVbZS5OT05FPTBdPSJOT05FIixlW2UuV0VCX1dPUktFUj0xXT0iV0VCX1dPUktFUiIsZVtlLk5PREVfV09SS0VSPTJdPSJOT0RFX1dPUktFUiIsZVtlLkJJTkRJTkdTPTNdPSJCSU5ESU5HUyIsZVtlLkFTWU5DX0RVQ0tEQj00XT0iQVNZTkNfRFVDS0RCIixlKSkoaVJ8fHt9KSxpTj1jbGFzc3tjb25zdHJ1Y3RvcihlPTIpe3RoaXMubGV2ZWw9ZX1sb2coZSl7ZS5sZXZlbD49dGhpcy5sZXZlbCYmY29uc29sZS5sb2coZSl9fSxpQz0oZT0+KGVbZS5TVUNDRVNTPTBdPSJTVUNDRVNTIixlW2UuTUFYX0FSUk9XX0VSUk9SPTI1NV09Ik1BWF9BUlJPV19FUlJPUiIsZVtlLkRVQ0tEQl9XQVNNX1JFVFJZPTI1Nl09IkRVQ0tEQl9XQVNNX1JFVFJZIixlKSkoaUN8fHt9KSxpTD1jbGFzc3tjb25zdHJ1Y3RvcihlLHQpe3RoaXMuX2JpbmRpbmdzPWUsdGhpcy5fY29ubj10fWdldCBiaW5kaW5ncygpe3JldHVybiB0aGlzLl9iaW5kaW5nc31hc3luYyBjbG9zZSgpe3JldHVybiB0aGlzLl9iaW5kaW5ncy5kaXNjb25uZWN0KHRoaXMuX2Nvbm4pfXVzZVVuc2FmZShlKXtyZXR1cm4gZSh0aGlzLl9iaW5kaW5ncyx0aGlzLl9jb25uKX1hc3luYyBxdWVyeShlKXt0aGlzLl9iaW5kaW5ncy5sb2dnZXIubG9nKHt0aW1lc3RhbXA6bmV3IERhdGUsbGV2ZWw6MixvcmlnaW46NCx0b3BpYzo0LGV2ZW50OjQsdmFsdWU6ZX0pO2xldCB0PWF3YWl0IHRoaXMuX2JpbmRpbmdzLnJ1blF1ZXJ5KHRoaXMuX2Nvbm4sZSkscj1ucS5mcm9tKHQpO3JldHVybiBjb25zb2xlLmFzc2VydChyLmlzU3luYygpLCJSZWFkZXIgaXMgbm90IHN5bmMiKSxjb25zb2xlLmFzc2VydChyLmlzRmlsZSgpLCJSZWFkZXIgaXMgbm90IGZpbGUiKSxuZXcgcjAocil9YXN5bmMgc2VuZChlLHQ9ITEpe3RoaXMuX2JpbmRpbmdzLmxvZ2dlci5sb2coe3RpbWVzdGFtcDpuZXcgRGF0ZSxsZXZlbDoyLG9yaWdpbjo0LHRvcGljOjQsZXZlbnQ6NCx2YWx1ZTplfSk7bGV0IHI9YXdhaXQgdGhpcy5fYmluZGluZ3Muc3RhcnRQZW5kaW5nUXVlcnkodGhpcy5fY29ubixlLHQpO2Zvcig7bnVsbD09cjspcj1hd2FpdCB0aGlzLl9iaW5kaW5ncy5wb2xsUGVuZGluZ1F1ZXJ5KHRoaXMuX2Nvbm4pO2xldCBuPW5ldyBpRCh0aGlzLl9iaW5kaW5ncyx0aGlzLl9jb25uLHIpLGk9YXdhaXQgbnEuZnJvbShuKTtyZXR1cm4gY29uc29sZS5hc3NlcnQoaS5pc0FzeW5jKCkpLGNvbnNvbGUuYXNzZXJ0KGkuaXNTdHJlYW0oKSksaX1hc3luYyBjYW5jZWxTZW50KCl7cmV0dXJuIGF3YWl0IHRoaXMuX2JpbmRpbmdzLmNhbmNlbFBlbmRpbmdRdWVyeSh0aGlzLl9jb25uKX1hc3luYyBnZXRUYWJsZU5hbWVzKGUpe3JldHVybiBhd2FpdCB0aGlzLl9iaW5kaW5ncy5nZXRUYWJsZU5hbWVzKHRoaXMuX2Nvbm4sZSl9YXN5bmMgcHJlcGFyZShlKXtsZXQgdD1hd2FpdCB0aGlzLl9iaW5kaW5ncy5jcmVhdGVQcmVwYXJlZCh0aGlzLl9jb25uLGUpO3JldHVybiBuZXcgaUIodGhpcy5fYmluZGluZ3MsdGhpcy5fY29ubix0KX1hc3luYyBpbnNlcnRBcnJvd1RhYmxlKGUsdCl7bGV0IHI9ZnVuY3Rpb24oZSx0PSJzdHJlYW0iKXtyZXR1cm4oInN0cmVhbSI9PT10P2ljOmloKS53cml0ZUFsbChlKS50b1VpbnQ4QXJyYXkoITApfShlLCJzdHJlYW0iKTthd2FpdCB0aGlzLmluc2VydEFycm93RnJvbUlQQ1N0cmVhbShyLHQpfWFzeW5jIGluc2VydEFycm93RnJvbUlQQ1N0cmVhbShlLHQpe2F3YWl0IHRoaXMuX2JpbmRpbmdzLmluc2VydEFycm93RnJvbUlQQ1N0cmVhbSh0aGlzLl9jb25uLGUsdCl9YXN5bmMgaW5zZXJ0Q1NWRnJvbVBhdGgoZSx0KXthd2FpdCB0aGlzLl9iaW5kaW5ncy5pbnNlcnRDU1ZGcm9tUGF0aCh0aGlzLl9jb25uLGUsdCl9YXN5bmMgaW5zZXJ0SlNPTkZyb21QYXRoKGUsdCl7YXdhaXQgdGhpcy5fYmluZGluZ3MuaW5zZXJ0SlNPTkZyb21QYXRoKHRoaXMuX2Nvbm4sZSx0KX19LGlEPWNsYXNze2NvbnN0cnVjdG9yKGUsdCxyKXt0aGlzLmRiPWUsdGhpcy5jb25uPXQsdGhpcy5oZWFkZXI9cix0aGlzLl9maXJzdD0hMCx0aGlzLl9kZXBsZXRlZD0hMSx0aGlzLl9pbkZsaWdodD1udWxsfWFzeW5jIG5leHQoKXtpZih0aGlzLl9maXJzdClyZXR1cm4gdGhpcy5fZmlyc3Q9ITEse2RvbmU6ITEsdmFsdWU6dGhpcy5oZWFkZXJ9O2lmKHRoaXMuX2RlcGxldGVkKXJldHVybntkb25lOiEwLHZhbHVlOm51bGx9O2xldCBlPW51bGw7Zm9yKG51bGwhPXRoaXMuX2luRmxpZ2h0JiYoZT1hd2FpdCB0aGlzLl9pbkZsaWdodCx0aGlzLl9pbkZsaWdodD1udWxsKTtudWxsPT1lOyllPWF3YWl0IHRoaXMuZGIuZmV0Y2hRdWVyeVJlc3VsdHModGhpcy5jb25uKTtyZXR1cm4gdGhpcy5fZGVwbGV0ZWQ9MD09ZS5sZW5ndGgsdGhpcy5fZGVwbGV0ZWR8fCh0aGlzLl9pbkZsaWdodD10aGlzLmRiLmZldGNoUXVlcnlSZXN1bHRzKHRoaXMuY29ubikpLHtkb25lOnRoaXMuX2RlcGxldGVkLHZhbHVlOmV9fVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKXtyZXR1cm4gdGhpc319LGlCPWNsYXNze2NvbnN0cnVjdG9yKGUsdCxyKXt0aGlzLmJpbmRpbmdzPWUsdGhpcy5jb25uZWN0aW9uSWQ9dCx0aGlzLnN0YXRlbWVudElkPXJ9YXN5bmMgY2xvc2UoKXthd2FpdCB0aGlzLmJpbmRpbmdzLmNsb3NlUHJlcGFyZWQodGhpcy5jb25uZWN0aW9uSWQsdGhpcy5zdGF0ZW1lbnRJZCl9YXN5bmMgcXVlcnkoLi4uZSl7bGV0IHQ9YXdhaXQgdGhpcy5iaW5kaW5ncy5ydW5QcmVwYXJlZCh0aGlzLmNvbm5lY3Rpb25JZCx0aGlzLnN0YXRlbWVudElkLGUpLHI9bnEuZnJvbSh0KTtyZXR1cm4gY29uc29sZS5hc3NlcnQoci5pc1N5bmMoKSksY29uc29sZS5hc3NlcnQoci5pc0ZpbGUoKSksbmV3IHIwKHIpfWFzeW5jIHNlbmQoLi4uZSl7bGV0IHQ9YXdhaXQgdGhpcy5iaW5kaW5ncy5zZW5kUHJlcGFyZWQodGhpcy5jb25uZWN0aW9uSWQsdGhpcy5zdGF0ZW1lbnRJZCxlKSxyPW"
     ""
     ""
     ""
     "X2V4dHJhIixlLkZMRVhMQVlPVVRfX1NQTElUVEVSXz0iZmxleGxheW91dF9fc3BsaXR0ZXJfIixlLkZMRVhMQVlPVVRfX1NQTElUVEVSX0JPUkRFUj0iZmxleGxheW91dF9fc3BsaXR0ZXJfYm9yZGVyIixlLkZMRVhMQVlPVVRfX1NQTElUVEVSX0RSQUc9ImZsZXhsYXlvdXRfX3NwbGl0dGVyX2RyYWciLGUuRkxFWExBWU9VVF9fVEFCPSJmbGV4bGF5b3V0X190YWIiLGUuRkxFWExBWU9VVF9fVEFCU0VUPSJmbGV4bGF5b3V0X190YWJzZXQiLGUuRkxFWExBWU9VVF9fVEFCU0VUX0hFQURFUj0iZmxleGxheW91dF9fdGFic2V0X2hlYWRlciIsZS5GTEVYTEFZT1VUX19UQUJTRVRfSEVBREVSX1NJWkVSPSJmbGV4bGF5b3V0X190YWJzZXRfaGVhZGVyX3NpemVyIixlLkZMRVhMQVlPVVRfX1RBQlNFVF9IRUFERVJfQ09OVEVOVD0iZmxleGxheW91dF9fdGFic2V0X2hlYWRlcl9jb250ZW50IixlLkZMRVhMQVlPVVRfX1RBQlNFVF9NQVhJTUlaRUQ9ImZsZXhsYXlvdXRfX3RhYnNldC1tYXhpbWl6ZWQiLGUuRkxFWExBWU9VVF9fVEFCU0VUX1NFTEVDVEVEPSJmbGV4bGF5b3V0X190YWJzZXQtc2VsZWN0ZWQiLGUuRkxFWExBWU9VVF9fVEFCU0VUX1NJWkVSPSJmbGV4bGF5b3V0X190YWJzZXRfc2l6ZXIiLGUuRkxFWExBWU9VVF9fVEFCU0VUX1RBQl9ESVZJREVSPSJmbGV4bGF5b3V0X190YWJzZXRfdGFiX2RpdmlkZXIiLGUuRkxFWExBWU9VVF9fVEFCU0VUX0NPTlRFTlQ9ImZsZXhsYXlvdXRfX3RhYnNldF9jb250ZW50IixlLkZMRVhMQVlPVVRfX1RBQlNFVF9UQUJCQVJfSU5ORVI9ImZsZXhsYXlvdXRfX3RhYnNldF90YWJiYXJfaW5uZXIiLGUuRkxFWExBWU9VVF9fVEFCU0VUX1RBQkJBUl9JTk5FUl89ImZsZXhsYXlvdXRfX3RhYnNldF90YWJiYXJfaW5uZXJfIixlLkZMRVhMQVlPVVRfX1RBQlNFVF9UQUJCQVJfSU5ORVJfVEFCX0NPTlRBSU5FUj0iZmxleGxheW91dF9fdGFic2V0X3RhYmJhcl9pbm5lcl90YWJfY29udGFpbmVyIixlLkZMRVhMQVlPVVRfX1RBQlNFVF9UQUJCQVJfSU5ORVJfVEFCX0NPTlRBSU5FUl89ImZsZXhsYXlvdXRfX3RhYnNldF90YWJiYXJfaW5uZXJfdGFiX2NvbnRhaW5lcl8iLGUuRkxFWExBWU9VVF9fVEFCU0VUX1RBQkJBUl9PVVRFUj0iZmxleGxheW91dF9fdGFic2V0X3RhYmJhcl9vdXRlciIsZS5GTEVYTEFZT1VUX19UQUJTRVRfVEFCQkFSX09VVEVSXz0iZmxleGxheW91dF9fdGFic2V0X3RhYmJhcl9vdXRlcl8iLGUuRkxFWExBWU9VVF9fVEFCX0JPUkRFUj0iZmxleGxheW91dF9fdGFiX2JvcmRlciIsZS5GTEVYTEFZT1VUX19UQUJfQk9SREVSXz0iZmxleGxheW91dF9fdGFiX2JvcmRlcl8iLGUuRkxFWExBWU9VVF9fVEFCX0JVVFRPTj0iZmxleGxheW91dF9fdGFiX2J1dHRvbiIsZS5GTEVYTEFZT1VUX19UQUJfQlVUVE9OX1NUUkVUQ0g9ImZsZXhsYXlvdXRfX3RhYl9idXR0b25fc3RyZXRjaCIsZS5GTEVYTEFZT1VUX19UQUJfQlVUVE9OX0NPTlRFTlQ9ImZsZXhsYXlvdXRfX3RhYl9idXR0b25fY29udGVudCIsZS5GTEVYTEFZT1VUX19UQUJfQlVUVE9OX0xFQURJTkc9ImZsZXhsYXlvdXRfX3RhYl9idXR0b25fbGVhZGluZyIsZS5GTEVYTEFZT1VUX19UQUJfQlVUVE9OX09WRVJGTE9XPSJmbGV4bGF5b3V0X190YWJfYnV0dG9uX292ZXJmbG93IixlLkZMRVhMQVlPVVRfX1RBQl9CVVRUT05fT1ZFUkZMT1dfQ09VTlQ9ImZsZXhsYXlvdXRfX3RhYl9idXR0b25fb3ZlcmZsb3dfY291bnQiLGUuRkxFWExBWU9VVF9fVEFCX0JVVFRPTl9URVhUQk9YPSJmbGV4bGF5b3V0X190YWJfYnV0dG9uX3RleHRib3giLGUuRkxFWExBWU9VVF9fVEFCX0JVVFRPTl9UUkFJTElORz0iZmxleGxheW91dF9fdGFiX2J1dHRvbl90cmFpbGluZyIsZS5GTEVYTEFZT1VUX19UQUJfQlVUVE9OX1NUQU1QPSJmbGV4bGF5b3V0X190YWJfYnV0dG9uX3N0YW1wIixlLkZMRVhMQVlPVVRfX1RBQl9GTE9BVElORz0iZmxleGxheW91dF9fdGFiX2Zsb2F0aW5nIixlLkZMRVhMQVlPVVRfX1RBQl9GTE9BVElOR19JTk5FUj0iZmxleGxheW91dF9fdGFiX2Zsb2F0aW5nX2lubmVyIixlLkZMRVhMQVlPVVRfX1RBQl9UT09MQkFSPSJmbGV4bGF5b3V0X190YWJfdG9vbGJhciIsZS5GTEVYTEFZT1VUX19UQUJfVE9PTEJBUl9CVVRUT049ImZsZXhsYXlvdXRfX3RhYl90b29sYmFyX2J1dHRvbiIsZS5GTEVYTEFZT1VUX19UQUJfVE9PTEJBUl9CVVRUT05fPSJmbGV4bGF5b3V0X190YWJfdG9vbGJhcl9idXR0b24tIixlLkZMRVhMQVlPVVRfX1RBQl9UT09MQkFSX0JVVFRPTl9GTE9BVD0iZmxleGxheW91dF9fdGFiX3Rvb2xiYXJfYnV0dG9uLWZsb2F0IixlLkZMRVhMQVlPVVRfX1RBQl9UT09MQkFSX1NUSUNLWV9CVVRUT05TX0NPTlRBSU5FUj0iZmxleGxheW91dF9fdGFiX3Rvb2xiYXJfc3RpY2t5X2J1dHRvbnNfY29udGFpbmVyIixlLkZMRVhMQVlPVVRfX1RBQl9UT09MQkFSX0JVVFRPTl9DTE9TRT0iZmxleGxheW91dF9fdGFiX3Rvb2xiYXJfYnV0dG9uLWNsb3NlIixlLkZMRVhMQVlPVVRfX1BPUFVQX01FTlVfQ09OVEFJTkVSPSJmbGV4bGF5b3V0X19wb3B1cF9tZW51X2NvbnRhaW5lciIsZS5GTEVYTEFZT1VUX19QT1BVUF9NRU5VX0lURU09ImZsZXhsYXlvdXRfX3BvcHVwX21lbnVfaXRlbSIsZS5GTEVYTEFZT1VUX19QT1BVUF9NRU5VPSJmbGV4bGF5b3V0X19wb3B1cF9tZW51In0odC5DTEFTU0VTfHwodC5DTEFTU0VTPXt9KSl9LDQwNDk0OihlLHQscik9PnsidXNlIHN0cmljdCI7ci5kKHQse0E6KCk9Pm59KTtsZXQgbj0oMCxyKDY0Mjg2KS5BKSgiQ2FsZW5kYXIiLFtbInBhdGgiLHtkOiJNOCAydjQiLGtleToiMWNtcHltIn1dLFsicGF0aCIse2Q6Ik0xNiAydjQiLGtleToiNG04MXZrIn1dLFsicmVjdCIse3dpZHRoOiIxOCIsaGVpZ2h0OiIxOCIseDoiMyIseToiNCIscng6IjIiLGtleToiMWhvcGN5In1dLFsicGF0aCIse2Q6Ik0zIDEwaDE4IixrZXk6Ijh0b2VuOCJ9XV0pfSw0MDc3NDooZSx0LHIpPT57InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSx0LkRvY2tMb2NhdGlvbj12b2lkIDA7bGV0IG49cig4NzY2MCksaT1yKDc1NTI4KTtjbGFzcyBze3N0YXRpYyBnZXRCeU5hbWUoZSl7cmV0dXJuIHMudmFsdWVzW2VdfXN0YXRpYyBnZXRMb2NhdGlvbihlLHQscil7aWYodD0odC1lLngpL2Uud2lkdGgscj0oci1lLnkpL2UuaGVpZ2h0LHQ+PS4yNSYmdDwuNzUmJnI+PS4yNSYmcjwuNzUpcmV0dXJuIHMuQ0VOVEVSO2xldCBuPXI+PXQsaT1yPj0xLXQ7cmV0dXJuIG4/aT9zLkJPVFRPTTpzLkxFRlQ6aT9zLlJJR0hUOnMuVE9QfWNvbnN0cnVjdG9yKGUsdCxyKXt0aGlzLl9uYW1lPWUsdGhpcy5fb3JpZW50YXRpb249dCx0aGlzLl9pbmRleFBsdXM9cixzLnZhbHVlc1t0aGlzLl9uYW1lXT10aGlzfWdldE5hbWUoKXtyZXR1cm4gdGhpcy5fbmFtZX1nZXRPcmllbnRhdGlvbigpe3JldHVybiB0aGlzLl9vcmllbnRhdGlvbn1nZXREb2NrUmVjdChlKXtyZXR1cm4gdGhpcz09PXMuVE9QP25ldyBpLlJlY3QoZS54LGUueSxlLndpZHRoLGUuaGVpZ2h0LzIpOnRoaXM9PT1zLkJPVFRPTT9uZXcgaS5SZWN0KGUueCxlLmdldEJvdHRvbSgpLWUuaGVpZ2h0LzIsZS53aWR0aCxlLmhlaWdodC8yKTp0aGlzPT09cy5MRUZUP25ldyBpLlJlY3QoZS54LGUueSxlLndpZHRoLzIsZS5oZWlnaHQpOnRoaXM9PT1zLlJJR0hUP25ldyBpLlJlY3QoZS5nZXRSaWdodCgpLWUud2lkdGgvMixlLnksZS53aWR0aC8yLGUuaGVpZ2h0KTplLmNsb25lKCl9c3BsaXQoZSx0KXtyZXR1cm4gdGhpcz09PXMuVE9QP3tzdGFydDpuZXcgaS5SZWN0KGUueCxlLnksZS53aWR0aCx0KSxlbmQ6bmV3IGkuUmVjdChlLngsZS55K3QsZS53aWR0aCxlLmhlaWdodC10KX06dGhpcz09PXMuTEVGVD97c3RhcnQ6bmV3IGkuUmVjdChlLngsZS55LHQsZS5oZWlnaHQpLGVuZDpuZXcgaS5SZWN0KGUueCt0LGUueSxlLndpZHRoLXQsZS5oZWlnaHQpfTp0aGlzPT09cy5SSUdIVD97c3RhcnQ6bmV3IGkuUmVjdChlLmdldFJpZ2h0KCktdCxlLnksdCxlLmhlaWdodCksZW5kOm5ldyBpLlJlY3QoZS54LGUueSxlLndpZHRoLXQsZS5oZWlnaHQpfTp7c3RhcnQ6bmV3IGkuUmVjdChlLngsZS5nZXRCb3R0b20oKS10LGUud2lkdGgsdCksZW5kOm5ldyBpLlJlY3QoZS54LGUueSxlLndpZHRoLGUuaGVpZ2h0LXQpfX1yZWZsZWN0KCl7cmV0dXJuIHRoaXM9PT1zLlRPUD9zLkJPVFRPTTp0aGlzPT09cy5MRUZUP3MuUklHSFQ6dGhpcz09PXMuUklHSFQ/cy5MRUZUOnMuVE9QfXRvU3RyaW5nKCl7cmV0dXJuIihEb2NrTG9jYXRpb246IG5hbWU9Iit0aGlzLl9uYW1lKyIsIG9yaWVudGF0aW9uPSIrdGhpcy5fb3JpZW50YXRpb24rIikifX10LkRvY2tMb2NhdGlvbj1zLHMudmFsdWVzPXt9LHMuVE9QPW5ldyBzKCJ0b3AiLG4uT3JpZW50YXRpb24uVkVSVCwwKSxzLkJPVFRPTT1uZXcgcygiYm90dG9tIixuLk9yaWVudGF0aW9uLlZFUlQsMSkscy5MRUZUPW5ldyBzKCJsZWZ0IixuLk9yaWVudGF0aW9uLkhPUlosMCkscy5SSUdIVD1uZXcgcygicmlnaHQiLG4uT3JpZW50YXRpb24uSE9SWiwxKSxzLkNFTlRFUj1uZXcgcygiY2VudGVyIixuLk9yaWVudGF0aW9uLlZFUlQsMCl9LDQxMzIwOihlLHQscik9PnsidXNlIHN0cmljdCI7ci5kKHQse0E6KCk9Pm59KTtsZXQgbj0oMCxyKDY0Mjg2KS5BKSgiU2hhcmUyIixbWyJjaXJjbGUiLHtjeDoiMTgiLGN5OiI1IixyOiIzIixrZXk6ImdxOGFjZCJ9XSxbImNpcmNsZSIse2N4OiI2IixjeToiMTIiLHI6IjMiLGtleToidzducWR3In1dLFsiY2lyY2xlIix7Y3g6IjE4IixjeToiMTkiLHI6IjMiLGtleToiMXh0MGdnIn1dLFsibGluZSIse3gxOiI4LjU5Iix4MjoiMTUuNDIiLHkxOiIxMy41MSIseTI6IjE3LjQ5IixrZXk6IjQ3bXluayJ9XSxbImxpbmUiLHt4MToiMTUuNDEiLHgyOiI4LjU5Iix5MToiNi41MSIseTI6IjEwLjQ5IixrZXk6IjFuM21laSJ9XV0pfSw0Mjg3MTplPT57IWZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciB0PXsxMTQ6ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlKXtpZigic3RyaW5nIiE9dHlwZW9mIGUpdGhyb3cgVHlwZUVycm9yKCJQYXRoIG11c3QgYmUgYSBzdHJpbmcuIFJlY2VpdmVkICIrSlNPTi5zdHJpbmdpZnkoZSkpfWZ1bmN0aW9uIHIoZSx0KXtmb3IodmFyIHIsbj0iIixpPTAscz0tMSxvPTAsYT0wO2E8PWUubGVuZ3RoOysrYSl7aWYoYTxlLmxlbmd0aClyPWUuY2hhckNvZGVBdChhKTtlbHNlIGlmKDQ3PT09cilicmVhaztlbHNlIHI9NDc7aWYoNDc9PT1yKXtpZihzPT09YS0xfHwxPT09byk7ZWxzZSBpZihzIT09YS0xJiYyPT09byl7aWYobi5sZW5ndGg8Mnx8MiE9PWl8fDQ2IT09bi5jaGFyQ29kZUF0KG4ubGVuZ3RoLTEpfHw0NiE9PW4uY2hhckNvZGVBdChuLmxlbmd0aC0yKSl7aWYobi5sZW5ndGg+Mil7dmFyIGw9bi5sYXN0SW5kZXhPZigiLyIpO2lmKGwhPT1uLmxlbmd0aC0xKXstMT09PWw/KG49IiIsaT0wKTppPShuPW4uc2xpY2UoMCxsKSkubGVuZ3RoLTEtbi5sYXN0SW5kZXhPZigiLyIpLHM9YSxvPTA7Y29udGludWV9fWVsc2UgaWYoMj09PW4ubGVuZ3RofHwxPT09bi5sZW5ndGgpe249IiIsaT0wLHM9YSxvPTA7Y29udGludWV9fXQmJihuLmxlbmd0aD4wP24rPSIvLi4iOm49Ii4uIixpPTIpfWVsc2Ugbi5sZW5ndGg+MD9uKz0iLyIrZS5zbGljZShzKzEsYSk6bj1lLnNsaWNlKHMrMSxhKSxpPWEtcy0xO3M9YSxvPTB9ZWxzZSA0Nj09PXImJi0xIT09bz8rK286bz0tMX1yZXR1cm4gbn12YXIgbj17cmVzb2x2ZTpmdW5jdGlvbigpe2Zvcih2YXIgZSxuLGk9IiIscz0hMSxvPWFyZ3VtZW50cy5sZW5ndGgtMTtvPj0tMSYmIXM7by0tKW8+PTA/bj1hcmd1bWVudHNbb106KHZvaWQgMD09PWUmJihlPSIiKSxuPWUpLHQobiksMCE9PW4ubGVuZ3RoJiYoaT1uKyIvIitpLHM9NDc9PT1uLmNoYXJDb2RlQXQoMCkpO3JldHVybihpPXIoaSwhcykscyk/aS5sZW5ndGg+MD8iLyIraToiLyI6aS5sZW5ndGg+MD9pOiIuIn0sbm9ybWFsaXplOmZ1bmN0aW9uKGUpe2lmKHQoZSksMD09PWUubGVuZ3RoKXJldHVybiIuIjt2YXIgbj00Nz09PWUuY2hhckNvZGVBdCgwKSxpPTQ3PT09ZS5jaGFyQ29kZUF0KGUubGVuZ3RoLTEpO3JldHVybigwIT09KGU9cihlLCFuKSkubGVuZ3RofHxufHwoZT0iLiIpLGUubGVuZ3RoPjAmJmkmJihlKz0iLyIpLG4pPyIvIitlOm"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "ssZVEsZTAsZTEsZTI9cigzMjI4OSkuQnVmZmVyLGU0PWZ1bmN0aW9uKGUsdCxyLG4saSl7aWYoIm0iPT09bil0aHJvdyBUeXBlRXJyb3IoIlByaXZhdGUgbWV0aG9kIGlzIG5vdCB3cml0YWJsZSIpO2lmKCJhIj09PW4mJiFpKXRocm93IFR5cGVFcnJvcigiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgc2V0dGVyIik7aWYoImZ1bmN0aW9uIj09dHlwZW9mIHQ/ZSE9PXR8fCFpOiF0LmhhcyhlKSl0aHJvdyBUeXBlRXJyb3IoIkNhbm5vdCB3cml0ZSBwcml2YXRlIG1lbWJlciB0byBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0Iik7cmV0dXJuImEiPT09bj9pLmNhbGwoZSxyKTppP2kudmFsdWU9cjp0LnNldChlLHIpLHJ9LGUzPWZ1bmN0aW9uKGUsdCxyLG4pe2lmKCJhIj09PXImJiFuKXRocm93IFR5cGVFcnJvcigiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgZ2V0dGVyIik7aWYoImZ1bmN0aW9uIj09dHlwZW9mIHQ/ZSE9PXR8fCFuOiF0LmhhcyhlKSl0aHJvdyBUeXBlRXJyb3IoIkNhbm5vdCByZWFkIHByaXZhdGUgbWVtYmVyIGZyb20gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdCIpO3JldHVybiJtIj09PXI/bjoiYSI9PT1yP24uY2FsbChlKTpuP24udmFsdWU6dC5nZXQoZSl9O2NsYXNzIGU2e2NvbnN0cnVjdG9yKCl7Vy5zZXQodGhpcyx2b2lkIDApLHRoaXMuYnVmZmVyPW5ldyBVaW50OEFycmF5LGU0KHRoaXMsVyxudWxsLCJmIil9ZGVjb2RlKGUpe2xldCB0O2lmKG51bGw9PWUpcmV0dXJuW107bGV0IHI9ZSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyP25ldyBVaW50OEFycmF5KGUpOiJzdHJpbmciPT10eXBlb2YgZT9uZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoZSk6ZSxuPW5ldyBVaW50OEFycmF5KHRoaXMuYnVmZmVyLmxlbmd0aCtyLmxlbmd0aCk7bi5zZXQodGhpcy5idWZmZXIpLG4uc2V0KHIsdGhpcy5idWZmZXIubGVuZ3RoKSx0aGlzLmJ1ZmZlcj1uO2xldCBpPVtdO2Zvcig7bnVsbCE9KHQ9ZnVuY3Rpb24oZSx0KXtmb3IobGV0IHI9dD8/MDtyPGUubGVuZ3RoO3IrKyl7aWYoMTA9PT1lW3JdKXJldHVybntwcmVjZWRpbmc6cixpbmRleDpyKzEsY2FycmlhZ2U6ITF9O2lmKDEzPT09ZVtyXSlyZXR1cm57cHJlY2VkaW5nOnIsaW5kZXg6cisxLGNhcnJpYWdlOiEwfX1yZXR1cm4gbnVsbH0odGhpcy5idWZmZXIsZTModGhpcyxXLCJmIikpKTspe2lmKHQuY2FycmlhZ2UmJm51bGw9PWUzKHRoaXMsVywiZiIpKXtlNCh0aGlzLFcsdC5pbmRleCwiZiIpO2NvbnRpbnVlfWlmKG51bGwhPWUzKHRoaXMsVywiZiIpJiYodC5pbmRleCE9PWUzKHRoaXMsVywiZiIpKzF8fHQuY2FycmlhZ2UpKXtpLnB1c2godGhpcy5kZWNvZGVUZXh0KHRoaXMuYnVmZmVyLnNsaWNlKDAsZTModGhpcyxXLCJmIiktMSkpKSx0aGlzLmJ1ZmZlcj10aGlzLmJ1ZmZlci5zbGljZShlMyh0aGlzLFcsImYiKSksZTQodGhpcyxXLG51bGwsImYiKTtjb250aW51ZX1sZXQgZT1udWxsIT09ZTModGhpcyxXLCJmIik/dC5wcmVjZWRpbmctMTp0LnByZWNlZGluZyxyPXRoaXMuZGVjb2RlVGV4dCh0aGlzLmJ1ZmZlci5zbGljZSgwLGUpKTtpLnB1c2gociksdGhpcy5idWZmZXI9dGhpcy5idWZmZXIuc2xpY2UodC5pbmRleCksZTQodGhpcyxXLG51bGwsImYiKX1yZXR1cm4gaX1kZWNvZGVUZXh0KGUpe2lmKG51bGw9PWUpcmV0dXJuIiI7aWYoInN0cmluZyI9PXR5cGVvZiBlKXJldHVybiBlO2lmKHZvaWQgMCE9PWUyKXtpZihlIGluc3RhbmNlb2YgZTIpcmV0dXJuIGUudG9TdHJpbmcoKTtpZihlIGluc3RhbmNlb2YgVWludDhBcnJheSlyZXR1cm4gZTIuZnJvbShlKS50b1N0cmluZygpO3Rocm93IG5ldyBOKGBVbmV4cGVjdGVkOiByZWNlaXZlZCBub24tVWludDhBcnJheSAoJHtlLmNvbnN0cnVjdG9yLm5hbWV9KSBzdHJlYW0gY2h1bmsgaW4gYW4gZW52aXJvbm1lbnQgd2l0aCBhIGdsb2JhbCAiQnVmZmVyIiBkZWZpbmVkLCB3aGljaCB0aGlzIGxpYnJhcnkgYXNzdW1lcyB0byBiZSBOb2RlLiBQbGVhc2UgcmVwb3J0IHRoaXMgZXJyb3IuYCl9aWYoInVuZGVmaW5lZCIhPXR5cGVvZiBUZXh0RGVjb2Rlcil7aWYoZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXl8fGUgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcilyZXR1cm4gdGhpcy50ZXh0RGVjb2Rlcj8/KHRoaXMudGV4dERlY29kZXI9bmV3IFRleHREZWNvZGVyKCJ1dGY4IikpLHRoaXMudGV4dERlY29kZXIuZGVjb2RlKGUpO3Rocm93IG5ldyBOKGBVbmV4cGVjdGVkOiByZWNlaXZlZCBub24tVWludDhBcnJheS9BcnJheUJ1ZmZlciAoJHtlLmNvbnN0cnVjdG9yLm5hbWV9KSBpbiBhIHdlYiBwbGF0Zm9ybS4gUGxlYXNlIHJlcG9ydCB0aGlzIGVycm9yLmApfXRocm93IG5ldyBOKCJVbmV4cGVjdGVkOiBuZWl0aGVyIEJ1ZmZlciBub3IgVGV4dERlY29kZXIgYXJlIGF2YWlsYWJsZSBhcyBnbG9iYWxzLiBQbGVhc2UgcmVwb3J0IHRoaXMgZXJyb3IuIil9Zmx1c2goKXtyZXR1cm4gdGhpcy5idWZmZXIubGVuZ3RoP3RoaXMuZGVjb2RlKCJcbiIpOltdfX1mdW5jdGlvbiBlNShlKXtpZihlW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSlyZXR1cm4gZTtsZXQgdD1lLmdldFJlYWRlcigpO3JldHVybnthc3luYyBuZXh0KCl7dHJ5e2xldCBlPWF3YWl0IHQucmVhZCgpO3JldHVybiBlPy5kb25lJiZ0LnJlbGVhc2VMb2NrKCksZX1jYXRjaChlKXt0aHJvdyB0LnJlbGVhc2VMb2NrKCksZX19LGFzeW5jIHJldHVybigpe2xldCBlPXQuY2FuY2VsKCk7cmV0dXJuIHQucmVsZWFzZUxvY2soKSxhd2FpdCBlLHtkb25lOiEwLHZhbHVlOnZvaWQgMH19LFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKXtyZXR1cm4gdGhpc319fVc9bmV3IFdlYWtNYXAsZTYuTkVXTElORV9DSEFSUz1uZXcgU2V0KFsiXG4iLCJcciJdKSxlNi5ORVdMSU5FX1JFR0VYUD0vXHJcbnxbXG5ccl0vZztjbGFzcyBlOHtjb25zdHJ1Y3RvcihlLHQpe3RoaXMuaXRlcmF0b3I9ZSx0aGlzLmNvbnRyb2xsZXI9dH1zdGF0aWMgZnJvbVNTRVJlc3BvbnNlKGUsdCl7bGV0IHI9ITE7YXN5bmMgZnVuY3Rpb24qbigpe2lmKHIpdGhyb3cgRXJyb3IoIkNhbm5vdCBpdGVyYXRlIG92ZXIgYSBjb25zdW1lZCBzdHJlYW0sIHVzZSBgLnRlZSgpYCB0byBzcGxpdCB0aGUgc3RyZWFtLiIpO3I9ITA7bGV0IG49ITE7dHJ5e2ZvciBhd2FpdChsZXQgciBvZiBlNyhlLHQpKWlmKCFuKXtpZihyLmRhdGEuc3RhcnRzV2l0aCgiW0RPTkVdIikpe249ITA7Y29udGludWV9aWYobnVsbD09PXIuZXZlbnR8fHIuZXZlbnQuc3RhcnRzV2l0aCgicmVzcG9uc2UuIil8fHIuZXZlbnQuc3RhcnRzV2l0aCgidHJhbnNjcmlwdC4iKSl7bGV0IHQ7dHJ5e3Q9SlNPTi5wYXJzZShyLmRhdGEpfWNhdGNoKGUpe3Rocm93IGNvbnNvbGUuZXJyb3IoIkNvdWxkIG5vdCBwYXJzZSBtZXNzYWdlIGludG8gSlNPTjoiLHIuZGF0YSksY29uc29sZS5lcnJvcigiRnJvbSBjaHVuazoiLHIucmF3KSxlfWlmKHQmJnQuZXJyb3IpdGhyb3cgbmV3IEModm9pZCAwLHQuZXJyb3Isdm9pZCAwLHR4KGUuaGVhZGVycykpO3lpZWxkIHR9ZWxzZXtsZXQgZTt0cnl7ZT1KU09OLnBhcnNlKHIuZGF0YSl9Y2F0Y2goZSl7dGhyb3cgY29uc29sZS5lcnJvcigiQ291bGQgbm90IHBhcnNlIG1lc3NhZ2UgaW50byBKU09OOiIsci5kYXRhKSxjb25zb2xlLmVycm9yKCJGcm9tIGNodW5rOiIsci5yYXcpLGV9aWYoImVycm9yIj09ci5ldmVudCl0aHJvdyBuZXcgQyh2b2lkIDAsZS5lcnJvcixlLm1lc3NhZ2Usdm9pZCAwKTt5aWVsZHtldmVudDpyLmV2ZW50LGRhdGE6ZX19fW49ITB9Y2F0Y2goZSl7aWYoZSBpbnN0YW5jZW9mIEVycm9yJiYiQWJvcnRFcnJvciI9PT1lLm5hbWUpcmV0dXJuO3Rocm93IGV9ZmluYWxseXtufHx0LmFib3J0KCl9fXJldHVybiBuZXcgZTgobix0KX1zdGF0aWMgZnJvbVJlYWRhYmxlU3RyZWFtKGUsdCl7bGV0IHI9ITE7YXN5bmMgZnVuY3Rpb24qbigpe2xldCB0PW5ldyBlNjtmb3IgYXdhaXQobGV0IHIgb2YgZTUoZSkpZm9yKGxldCBlIG9mIHQuZGVjb2RlKHIpKXlpZWxkIGU7Zm9yKGxldCBlIG9mIHQuZmx1c2goKSl5aWVsZCBlfXJldHVybiBuZXcgZTgoYXN5bmMgZnVuY3Rpb24qKCl7aWYocil0aHJvdyBFcnJvcigiQ2Fubm90IGl0ZXJhdGUgb3ZlciBhIGNvbnN1bWVkIHN0cmVhbSwgdXNlIGAudGVlKClgIHRvIHNwbGl0IHRoZSBzdHJlYW0uIik7cj0hMDtsZXQgZT0hMTt0cnl7Zm9yIGF3YWl0KGxldCB0IG9mIG4oKSkhZSYmdCYmKHlpZWxkIEpTT04ucGFyc2UodCkpO2U9ITB9Y2F0Y2goZSl7aWYoZSBpbnN0YW5jZW9mIEVycm9yJiYiQWJvcnRFcnJvciI9PT1lLm5hbWUpcmV0dXJuO3Rocm93IGV9ZmluYWxseXtlfHx0LmFib3J0KCl9fSx0KX1bU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCl7cmV0dXJuIHRoaXMuaXRlcmF0b3IoKX10ZWUoKXtsZXQgZT1bXSx0PVtdLHI9dGhpcy5pdGVyYXRvcigpLG49bj0+KHtuZXh0OigpPT57aWYoMD09PW4ubGVuZ3RoKXtsZXQgbj1yLm5leHQoKTtlLnB1c2gobiksdC5wdXNoKG4pfXJldHVybiBuLnNoaWZ0KCl9fSk7cmV0dXJuW25ldyBlOCgoKT0+bihlKSx0aGlzLmNvbnRyb2xsZXIpLG5ldyBlOCgoKT0+bih0KSx0aGlzLmNvbnRyb2xsZXIpXX10b1JlYWRhYmxlU3RyZWFtKCl7bGV0IGU7bGV0IHQ9dGhpcyxyPW5ldyBUZXh0RW5jb2RlcjtyZXR1cm4gbmV3IGwoe2FzeW5jIHN0YXJ0KCl7ZT10W1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpfSxhc3luYyBwdWxsKHQpe3RyeXtsZXR7dmFsdWU6bixkb25lOml9PWF3YWl0IGUubmV4dCgpO2lmKGkpcmV0dXJuIHQuY2xvc2UoKTtsZXQgcz1yLmVuY29kZShKU09OLnN0cmluZ2lmeShuKSsiXG4iKTt0LmVucXVldWUocyl9Y2F0Y2goZSl7dC5lcnJvcihlKX19LGFzeW5jIGNhbmNlbCgpe2F3YWl0IGUucmV0dXJuPy4oKX19KX19YXN5bmMgZnVuY3Rpb24qZTcoZSx0KXtpZighZS5ib2R5KXRocm93IHQuYWJvcnQoKSxuZXcgTigiQXR0ZW1wdGVkIHRvIGl0ZXJhdGUgb3ZlciBhIHJlc3BvbnNlIHdpdGggbm8gYm9keSIpO2xldCByPW5ldyB0ZSxuPW5ldyBlNjtmb3IgYXdhaXQobGV0IHQgb2YgZTkoZTUoZS5ib2R5KSkpZm9yKGxldCBlIG9mIG4uZGVjb2RlKHQpKXtsZXQgdD1yLmRlY29kZShlKTt0JiYoeWllbGQgdCl9Zm9yKGxldCBlIG9mIG4uZmx1c2goKSl7bGV0IHQ9ci5kZWNvZGUoZSk7dCYmKHlpZWxkIHQpfX1hc3luYyBmdW5jdGlvbiplOShlKXtsZXQgdD1uZXcgVWludDhBcnJheTtmb3IgYXdhaXQobGV0IHIgb2YgZSl7bGV0IGU7aWYobnVsbD09ciljb250aW51ZTtsZXQgbj1yIGluc3RhbmNlb2YgQXJyYXlCdWZmZXI/bmV3IFVpbnQ4QXJyYXkocik6InN0cmluZyI9PXR5cGVvZiByP25ldyBUZXh0RW5jb2RlcigpLmVuY29kZShyKTpyLGk9bmV3IFVpbnQ4QXJyYXkodC5sZW5ndGgrbi5sZW5ndGgpO2ZvcihpLnNldCh0KSxpLnNldChuLHQubGVuZ3RoKSx0PWk7LTEhPT0oZT1mdW5jdGlvbihlKXtmb3IobGV0IHQ9MDt0PGUubGVuZ3RoLTE7dCsrKXtpZigxMD09PWVbdF0mJjEwPT09ZVt0KzFdfHwxMz09PWVbdF0mJjEzPT09ZVt0KzFdKXJldHVybiB0KzI7aWYoMTM9PT1lW3RdJiYxMD09PWVbdCsxXSYmdCszPGUubGVuZ3RoJiYxMz09PWVbdCsyXSYmMTA9PT1lW3QrM10pcmV0dXJuIHQrNH1yZXR1cm4gLTF9KHQpKTspeWllbGQgdC5zbGljZSgwLGUpLHQ9dC5zbGljZShlKX10Lmxlbmd0aD4wJiYoeWllbGQgdCl9Y2xhc3MgdGV7Y29uc3RydWN0b3IoKXt0aGlzLmV2ZW50PW51bGwsdGhpcy5kYXRhPVtdLHRoaXMuY2h1bmtzPVtdfWRlY29kZShlKXtpZihlLmVuZHNXaXRoKCJcciIpJiYoZT1lLnN1YnN0cmluZygwLGUubGVuZ3RoLTEpKSwhZSl7aWYoIXRoaXMuZXZlbnQmJiF0aGlzLmRhdGEubGVuZ3RoKXJldHVybiBudWxsO2xldCBlPXtldmVudDp0aGlzLmV2ZW50LGRhdGE6dGhpcy5kYXRhLmpvaW4oIlxuIikscmF3OnRoaXMuY2h1bmtzfTtyZXR1cm4gdGhpcy5ldmVudD1udWxsLHRoaXMuZGF0YT1bXSx0aGlzLmNodW5rcz1bXSxlfWlmKHRoaXMuY2h1bmtzLnB1c2goZSksZS5zdGFydHNXaXRoKCI6IikpcmV0dXJuIG51bGw7bGV0W3QscixuXT1mdW5jdGlvbihlLHQpe2xldCByPWUuaW5kZXhPZigiOiIpO3JldHVybiAtMSE9PXI/W2Uuc3Vic3RyaW5nKDAsciksdCxlLnN1YnN0cmluZyhyK3QubGVuZ3Ro"
     ""
     ""
     ""
     ""
     ""
     ""
     "aW9uOntuYW1lOmUuZnVuY3Rpb24ubmFtZXx8ZS5mdW5jdGlvbi5mdW5jdGlvbi5uYW1lLHBhcmFtZXRlcnM6ZS5mdW5jdGlvbi5wYXJhbWV0ZXJzLGRlc2NyaXB0aW9uOmUuZnVuY3Rpb24uZGVzY3JpcHRpb24sc3RyaWN0OmUuZnVuY3Rpb24uc3RyaWN0fX06ZSk6dm9pZCAwO2ZvcihsZXQgZSBvZiB0Lm1lc3NhZ2VzKXRoaXMuX2FkZE1lc3NhZ2UoZSwhMSk7Zm9yKGxldCB0PTA7dDxsOysrdCl7bGV0IHQ9YXdhaXQgdGhpcy5fY3JlYXRlQ2hhdENvbXBsZXRpb24oZSx7Li4ubyx0b29sX2Nob2ljZTppLHRvb2xzOmMsbWVzc2FnZXM6Wy4uLnRoaXMubWVzc2FnZXNdfSxyKSxzPXQuY2hvaWNlc1swXT8ubWVzc2FnZTtpZighcyl0aHJvdyBuZXcgTigibWlzc2luZyBtZXNzYWdlIGluIENoYXRDb21wbGV0aW9uIHJlc3BvbnNlIik7aWYoIXMudG9vbF9jYWxscz8ubGVuZ3RoKWJyZWFrO2ZvcihsZXQgZSBvZiBzLnRvb2xfY2FsbHMpe2xldCB0O2lmKCJmdW5jdGlvbiIhPT1lLnR5cGUpY29udGludWU7bGV0IHI9ZS5pZCx7bmFtZTppLGFyZ3VtZW50czpzfT1lLmZ1bmN0aW9uLG89ZFtpXTtpZihvKXtpZihhJiZhIT09aSl7bGV0IGU9YEludmFsaWQgdG9vbF9jYWxsOiAke0pTT04uc3RyaW5naWZ5KGkpfS4gJHtKU09OLnN0cmluZ2lmeShhKX0gcmVxdWVzdGVkLiBQbGVhc2UgdHJ5IGFnYWluYDt0aGlzLl9hZGRNZXNzYWdlKHtyb2xlOm4sdG9vbF9jYWxsX2lkOnIsY29udGVudDplfSk7Y29udGludWV9fWVsc2V7bGV0IGU9YEludmFsaWQgdG9vbF9jYWxsOiAke0pTT04uc3RyaW5naWZ5KGkpfS4gQXZhaWxhYmxlIG9wdGlvbnMgYXJlOiAke09iamVjdC5rZXlzKGQpLm1hcChlPT5KU09OLnN0cmluZ2lmeShlKSkuam9pbigiLCAiKX0uIFBsZWFzZSB0cnkgYWdhaW5gO3RoaXMuX2FkZE1lc3NhZ2Uoe3JvbGU6bix0b29sX2NhbGxfaWQ6cixjb250ZW50OmV9KTtjb250aW51ZX10cnl7dD1yTihvKT9hd2FpdCBvLnBhcnNlKHMpOnN9Y2F0Y2godCl7bGV0IGU9dCBpbnN0YW5jZW9mIEVycm9yP3QubWVzc2FnZTpTdHJpbmcodCk7dGhpcy5fYWRkTWVzc2FnZSh7cm9sZTpuLHRvb2xfY2FsbF9pZDpyLGNvbnRlbnQ6ZX0pO2NvbnRpbnVlfWxldCBsPWF3YWl0IG8uZnVuY3Rpb24odCx0aGlzKSx1PXJ6KHRoaXMsZW8sIm0iLGVwKS5jYWxsKHRoaXMsbCk7aWYodGhpcy5fYWRkTWVzc2FnZSh7cm9sZTpuLHRvb2xfY2FsbF9pZDpyLGNvbnRlbnQ6dX0pLGEpcmV0dXJufX19fWVvPW5ldyBXZWFrU2V0LGVhPWZ1bmN0aW9uKCl7cmV0dXJuIHJ6KHRoaXMsZW8sIm0iLGVsKS5jYWxsKHRoaXMpLmNvbnRlbnQ/P251bGx9LGVsPWZ1bmN0aW9uKCl7bGV0IGU9dGhpcy5tZXNzYWdlcy5sZW5ndGg7Zm9yKDtlLS0gPjA7KXtsZXQgdD10aGlzLm1lc3NhZ2VzW2VdO2lmKHJDKHQpKXtsZXR7ZnVuY3Rpb25fY2FsbDplLC4uLnJ9PXQsbj17Li4ucixjb250ZW50OnQuY29udGVudD8/bnVsbCxyZWZ1c2FsOnQucmVmdXNhbD8/bnVsbH07cmV0dXJuIGUmJihuLmZ1bmN0aW9uX2NhbGw9ZSksbn19dGhyb3cgbmV3IE4oInN0cmVhbSBlbmRlZCB3aXRob3V0IHByb2R1Y2luZyBhIENoYXRDb21wbGV0aW9uTWVzc2FnZSB3aXRoIHJvbGU9YXNzaXN0YW50Iil9LGV1PWZ1bmN0aW9uKCl7Zm9yKGxldCBlPXRoaXMubWVzc2FnZXMubGVuZ3RoLTE7ZT49MDtlLS0pe2xldCB0PXRoaXMubWVzc2FnZXNbZV07aWYockModCkmJnQ/LmZ1bmN0aW9uX2NhbGwpcmV0dXJuIHQuZnVuY3Rpb25fY2FsbDtpZihyQyh0KSYmdD8udG9vbF9jYWxscz8ubGVuZ3RoKXJldHVybiB0LnRvb2xfY2FsbHMuYXQoLTEpPy5mdW5jdGlvbn19LGVkPWZ1bmN0aW9uKCl7Zm9yKGxldCBlPXRoaXMubWVzc2FnZXMubGVuZ3RoLTE7ZT49MDtlLS0pe2xldCB0PXRoaXMubWVzc2FnZXNbZV07aWYockwodCkmJm51bGwhPXQuY29udGVudHx8ckQodCkmJm51bGwhPXQuY29udGVudCYmInN0cmluZyI9PXR5cGVvZiB0LmNvbnRlbnQmJnRoaXMubWVzc2FnZXMuc29tZShlPT4iYXNzaXN0YW50Ij09PWUucm9sZSYmZS50b29sX2NhbGxzPy5zb21lKGU9PiJmdW5jdGlvbiI9PT1lLnR5cGUmJmUuaWQ9PT10LnRvb2xfY2FsbF9pZCkpKXJldHVybiB0LmNvbnRlbnR9fSxlYz1mdW5jdGlvbigpe2xldCBlPXtjb21wbGV0aW9uX3Rva2VuczowLHByb21wdF90b2tlbnM6MCx0b3RhbF90b2tlbnM6MH07Zm9yKGxldHt1c2FnZTp0fW9mIHRoaXMuX2NoYXRDb21wbGV0aW9ucyl0JiYoZS5jb21wbGV0aW9uX3Rva2Vucys9dC5jb21wbGV0aW9uX3Rva2VucyxlLnByb21wdF90b2tlbnMrPXQucHJvbXB0X3Rva2VucyxlLnRvdGFsX3Rva2Vucys9dC50b3RhbF90b2tlbnMpO3JldHVybiBlfSxlaD1mdW5jdGlvbihlKXtpZihudWxsIT1lLm4mJmUubj4xKXRocm93IG5ldyBOKCJDaGF0Q29tcGxldGlvbiBjb252ZW5pZW5jZSBoZWxwZXJzIG9ubHkgc3VwcG9ydCBuPTEgYXQgdGhpcyB0aW1lLiBUbyB1c2Ugbj4xLCBwbGVhc2UgdXNlIGNoYXQuY29tcGxldGlvbnMuY3JlYXRlKCkgZGlyZWN0bHkuIil9LGVwPWZ1bmN0aW9uKGUpe3JldHVybiJzdHJpbmciPT10eXBlb2YgZT9lOnZvaWQgMD09PWU/InVuZGVmaW5lZCI6SlNPTi5zdHJpbmdpZnkoZSl9O2NsYXNzIHJIIGV4dGVuZHMgciR7c3RhdGljIHJ1bkZ1bmN0aW9ucyhlLHQscil7bGV0IG49bmV3IHJILGk9ey4uLnIsaGVhZGVyczp7Li4ucj8uaGVhZGVycywiWC1TdGFpbmxlc3MtSGVscGVyLU1ldGhvZCI6InJ1bkZ1bmN0aW9ucyJ9fTtyZXR1cm4gbi5fcnVuKCgpPT5uLl9ydW5GdW5jdGlvbnMoZSx0LGkpKSxufXN0YXRpYyBydW5Ub29scyhlLHQscil7bGV0IG49bmV3IHJILGk9ey4uLnIsaGVhZGVyczp7Li4ucj8uaGVhZGVycywiWC1TdGFpbmxlc3MtSGVscGVyLU1ldGhvZCI6InJ1blRvb2xzIn19O3JldHVybiBuLl9ydW4oKCk9Pm4uX3J1blRvb2xzKGUsdCxpKSksbn1fYWRkTWVzc2FnZShlLHQ9ITApe3N1cGVyLl9hZGRNZXNzYWdlKGUsdCksckMoZSkmJmUuY29udGVudCYmdGhpcy5fZW1pdCgiY29udGVudCIsZS5jb250ZW50KX19bGV0IHJaPXtTVFI6MSxOVU06MixBUlI6NCxPQko6OCxOVUxMOjE2LEJPT0w6MzIsTkFOOjY0LElORklOSVRZOjEyOCxNSU5VU19JTkZJTklUWToyNTYsQUxMOjUxMX07Y2xhc3MgclcgZXh0ZW5kcyBFcnJvcnt9Y2xhc3MgclYgZXh0ZW5kcyBFcnJvcnt9bGV0IHJZPShlLHQpPT57bGV0IHI9ZS5sZW5ndGgsbj0wLGk9ZT0+e3Rocm93IG5ldyByVyhgJHtlfSBhdCBwb3NpdGlvbiAke259YCl9LHM9ZT0+e3Rocm93IG5ldyByVihgJHtlfSBhdCBwb3NpdGlvbiAke259YCl9LG89KCk9PihjKCksbj49ciYmaSgiVW5leHBlY3RlZCBlbmQgb2YgaW5wdXQiKSwnIic9PT1lW25dKT9hKCk6InsiPT09ZVtuXT9sKCk6IlsiPT09ZVtuXT91KCk6Im51bGwiPT09ZS5zdWJzdHJpbmcobixuKzQpfHxyWi5OVUxMJnQmJnItbjw0JiYibnVsbCIuc3RhcnRzV2l0aChlLnN1YnN0cmluZyhuKSk/KG4rPTQsbnVsbCk6InRydWUiPT09ZS5zdWJzdHJpbmcobixuKzQpfHxyWi5CT09MJnQmJnItbjw0JiYidHJ1ZSIuc3RhcnRzV2l0aChlLnN1YnN0cmluZyhuKSk/KG4rPTQsITApOiJmYWxzZSI9PT1lLnN1YnN0cmluZyhuLG4rNSl8fHJaLkJPT0wmdCYmci1uPDUmJiJmYWxzZSIuc3RhcnRzV2l0aChlLnN1YnN0cmluZyhuKSk/KG4rPTUsITEpOiJJbmZpbml0eSI9PT1lLnN1YnN0cmluZyhuLG4rOCl8fHJaLklORklOSVRZJnQmJnItbjw4JiYiSW5maW5pdHkiLnN0YXJ0c1dpdGgoZS5zdWJzdHJpbmcobikpPyhuKz04LDEvMCk6Ii1JbmZpbml0eSI9PT1lLnN1YnN0cmluZyhuLG4rOSl8fHJaLk1JTlVTX0lORklOSVRZJnQmJjE8ci1uJiZyLW48OSYmIi1JbmZpbml0eSIuc3RhcnRzV2l0aChlLnN1YnN0cmluZyhuKSk/KG4rPTksLTEvMCk6Ik5hTiI9PT1lLnN1YnN0cmluZyhuLG4rMyl8fHJaLk5BTiZ0JiZyLW48MyYmIk5hTiIuc3RhcnRzV2l0aChlLnN1YnN0cmluZyhuKSk/KG4rPTMsTmFOKTpkKCksYT0oKT0+e2xldCBvPW4sYT0hMTtmb3IobisrO248ciYmKCciJyE9PWVbbl18fGEmJiJcXCI9PT1lW24tMV0pOylhPSJcXCI9PT1lW25dJiYhYSxuKys7aWYoJyInPT1lLmNoYXJBdChuKSl0cnl7cmV0dXJuIEpTT04ucGFyc2UoZS5zdWJzdHJpbmcobywrK24tTnVtYmVyKGEpKSl9Y2F0Y2goZSl7cyhTdHJpbmcoZSkpfWVsc2UgaWYoclouU1RSJnQpdHJ5e3JldHVybiBKU09OLnBhcnNlKGUuc3Vic3RyaW5nKG8sbi1OdW1iZXIoYSkpKyciJyl9Y2F0Y2godCl7cmV0dXJuIEpTT04ucGFyc2UoZS5zdWJzdHJpbmcobyxlLmxhc3RJbmRleE9mKCJcXCIpKSsnIicpfWkoIlVudGVybWluYXRlZCBzdHJpbmcgbGl0ZXJhbCIpfSxsPSgpPT57bisrLGMoKTtsZXQgcz17fTt0cnl7Zm9yKDsifSIhPT1lW25dOyl7aWYoYygpLG4+PXImJnJaLk9CSiZ0KXJldHVybiBzO2xldCBpPWEoKTtjKCksbisrO3RyeXtsZXQgZT1vKCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KHMsaSx7dmFsdWU6ZSx3cml0YWJsZTohMCxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pfWNhdGNoKGUpe2lmKHJaLk9CSiZ0KXJldHVybiBzO3Rocm93IGV9YygpLCIsIj09PWVbbl0mJm4rK319Y2F0Y2goZSl7aWYoclouT0JKJnQpcmV0dXJuIHM7aSgiRXhwZWN0ZWQgJ30nIGF0IGVuZCBvZiBvYmplY3QiKX1yZXR1cm4gbisrLHN9LHU9KCk9PntuKys7bGV0IHI9W107dHJ5e2Zvcig7Il0iIT09ZVtuXTspci5wdXNoKG8oKSksYygpLCIsIj09PWVbbl0mJm4rK31jYXRjaChlKXtpZihyWi5BUlImdClyZXR1cm4gcjtpKCJFeHBlY3RlZCAnXScgYXQgZW5kIG9mIGFycmF5Iil9cmV0dXJuIG4rKyxyfSxkPSgpPT57aWYoMD09PW4peyItIj09PWUmJnJaLk5VTSZ0JiZpKCJOb3Qgc3VyZSB3aGF0ICctJyBpcyIpO3RyeXtyZXR1cm4gSlNPTi5wYXJzZShlKX1jYXRjaChyKXtpZihyWi5OVU0mdCl0cnl7aWYoIi4iPT09ZVtlLmxlbmd0aC0xXSlyZXR1cm4gSlNPTi5wYXJzZShlLnN1YnN0cmluZygwLGUubGFzdEluZGV4T2YoIi4iKSkpO3JldHVybiBKU09OLnBhcnNlKGUuc3Vic3RyaW5nKDAsZS5sYXN0SW5kZXhPZigiZSIpKSl9Y2F0Y2goZSl7fXMoU3RyaW5nKHIpKX19bGV0IG89bjtmb3IoIi0iPT09ZVtuXSYmbisrO2Vbbl0mJiEiLF19Ii5pbmNsdWRlcyhlW25dKTspbisrO24hPXJ8fHJaLk5VTSZ0fHxpKCJVbnRlcm1pbmF0ZWQgbnVtYmVyIGxpdGVyYWwiKTt0cnl7cmV0dXJuIEpTT04ucGFyc2UoZS5zdWJzdHJpbmcobyxuKSl9Y2F0Y2gocil7Ii0iPT09ZS5zdWJzdHJpbmcobyxuKSYmclouTlVNJnQmJmkoIk5vdCBzdXJlIHdoYXQgJy0nIGlzIik7dHJ5e3JldHVybiBKU09OLnBhcnNlKGUuc3Vic3RyaW5nKG8sZS5sYXN0SW5kZXhPZigiZSIpKSl9Y2F0Y2goZSl7cyhTdHJpbmcoZSkpfX19LGM9KCk9Pntmb3IoO248ciYmIiBcblxyCSIuaW5jbHVkZXMoZVtuXSk7KW4rK307cmV0dXJuIG8oKX0sckc9ZT0+KGZ1bmN0aW9uKGUsdD1yWi5BTEwpe2lmKCJzdHJpbmciIT10eXBlb2YgZSl0aHJvdyBUeXBlRXJyb3IoYGV4cGVjdGluZyBzdHIsIGdvdCAke3R5cGVvZiBlfWApO2lmKCFlLnRyaW0oKSl0aHJvdyBFcnJvcihgJHtlfSBpcyBlbXB0eWApO3JldHVybiByWShlLnRyaW0oKSx0KX0pKGUsclouQUxMXnJaLk5VTSk7dmFyIHJYPWZ1bmN0aW9uKGUsdCxyLG4saSl7aWYoIm0iPT09bil0aHJvdyBUeXBlRXJyb3IoIlByaXZhdGUgbWV0aG9kIGlzIG5vdCB3cml0YWJsZSIpO2lmKCJhIj09PW4mJiFpKXRocm93IFR5cGVFcnJvcigiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgc2V0dGVyIik7aWYoImZ1bmN0aW9uIj09dHlwZW9mIHQ/ZSE9PXR8fCFpOiF0LmhhcyhlKSl0aHJvdyBUeXBlRXJyb3IoIkNhbm5vdCB3cml0ZSBwcml2YXRlIG1lbWJlciB0byBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0Iik7cmV0dXJuImEiPT09bj9pLmNhbGwoZSxyKTppP2kudmFsdWU9cjp0LnNldChlLHIpLHJ9LHJxPWZ1bmN0aW9uKGUsdCxyLG4pe2lmKCJhIj09PXImJiFuKXRocm93IFR5cGVFcnJvcigiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgZ2V0dGVyIik7aWYoImZ1bmN0aW9uIj09dHlwZW9mIHQ/ZSE9PXR8fCFuOiF0LmhhcyhlKSl0aHJvdyBUeXBlRXJyb3IoIkNhbm5vdCByZWFkIHByaXZhdGUgbW"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "KCJ0YWJCb3JkZXJXaWR0aCIsLTEpLnNldFR5cGUobi5BdHRyaWJ1dGUuTlVNQkVSKSxlLmFkZCgidGFiQm9yZGVySGVpZ2h0IiwtMSkuc2V0VHlwZShuLkF0dHJpYnV0ZS5OVU1CRVIpLGUuYWRkKCJ0YWJTZXRFbmFibGVEZWxldGVXaGVuRW1wdHkiLCEwKS5zZXRUeXBlKG4uQXR0cmlidXRlLkJPT0xFQU4pLGUuYWRkKCJ0YWJTZXRFbmFibGVEcm9wIiwhMCkuc2V0VHlwZShuLkF0dHJpYnV0ZS5CT09MRUFOKSxlLmFkZCgidGFiU2V0RW5hYmxlRHJhZyIsITApLnNldFR5cGUobi5BdHRyaWJ1dGUuQk9PTEVBTiksZS5hZGQoInRhYlNldEVuYWJsZURpdmlkZSIsITApLnNldFR5cGUobi5BdHRyaWJ1dGUuQk9PTEVBTiksZS5hZGQoInRhYlNldEVuYWJsZU1heGltaXplIiwhMCkuc2V0VHlwZShuLkF0dHJpYnV0ZS5CT09MRUFOKSxlLmFkZCgidGFiU2V0RW5hYmxlQ2xvc2UiLCExKS5zZXRUeXBlKG4uQXR0cmlidXRlLkJPT0xFQU4pLGUuYWRkKCJ0YWJTZXRFbmFibGVTaW5nbGVUYWJTdHJldGNoIiwhMSkuc2V0VHlwZShuLkF0dHJpYnV0ZS5CT09MRUFOKSxlLmFkZCgidGFiU2V0QXV0b1NlbGVjdFRhYiIsITApLnNldFR5cGUobi5BdHRyaWJ1dGUuQk9PTEVBTiksZS5hZGQoInRhYlNldENsYXNzTmFtZVRhYlN0cmlwIix2b2lkIDApLnNldFR5cGUobi5BdHRyaWJ1dGUuU1RSSU5HKSxlLmFkZCgidGFiU2V0Q2xhc3NOYW1lSGVhZGVyIix2b2lkIDApLnNldFR5cGUobi5BdHRyaWJ1dGUuU1RSSU5HKSxlLmFkZCgidGFiU2V0RW5hYmxlVGFiU3RyaXAiLCEwKS5zZXRUeXBlKG4uQXR0cmlidXRlLkJPT0xFQU4pLGUuYWRkKCJ0YWJTZXRIZWFkZXJIZWlnaHQiLDApLnNldFR5cGUobi5BdHRyaWJ1dGUuTlVNQkVSKSxlLmFkZCgidGFiU2V0VGFiU3RyaXBIZWlnaHQiLDApLnNldFR5cGUobi5BdHRyaWJ1dGUuTlVNQkVSKSxlLmFkZCgidGFiU2V0TWFyZ2luSW5zZXRzIix7dG9wOjAscmlnaHQ6MCxib3R0b206MCxsZWZ0OjB9KS5zZXRUeXBlKCJJSW5zZXRzIiksZS5hZGQoInRhYlNldEJvcmRlckluc2V0cyIse3RvcDowLHJpZ2h0OjAsYm90dG9tOjAsbGVmdDowfSkuc2V0VHlwZSgiSUluc2V0cyIpLGUuYWRkKCJ0YWJTZXRUYWJMb2NhdGlvbiIsInRvcCIpLnNldFR5cGUoIklUYWJMb2NhdGlvbiIpLGUuYWRkKCJ0YWJTZXRNaW5XaWR0aCIsMCkuc2V0VHlwZShuLkF0dHJpYnV0ZS5OVU1CRVIpLGUuYWRkKCJ0YWJTZXRNaW5IZWlnaHQiLDApLnNldFR5cGUobi5BdHRyaWJ1dGUuTlVNQkVSKSxlLmFkZCgiYm9yZGVyU2l6ZSIsMjAwKS5zZXRUeXBlKG4uQXR0cmlidXRlLk5VTUJFUiksZS5hZGQoImJvcmRlck1pblNpemUiLDApLnNldFR5cGUobi5BdHRyaWJ1dGUuTlVNQkVSKSxlLmFkZCgiYm9yZGVyQmFyU2l6ZSIsMCkuc2V0VHlwZShuLkF0dHJpYnV0ZS5OVU1CRVIpLGUuYWRkKCJib3JkZXJFbmFibGVEcm9wIiwhMCkuc2V0VHlwZShuLkF0dHJpYnV0ZS5CT09MRUFOKSxlLmFkZCgiYm9yZGVyQXV0b1NlbGVjdFRhYldoZW5PcGVuIiwhMCkuc2V0VHlwZShuLkF0dHJpYnV0ZS5CT09MRUFOKSxlLmFkZCgiYm9yZGVyQXV0b1NlbGVjdFRhYldoZW5DbG9zZWQiLCExKS5zZXRUeXBlKG4uQXR0cmlidXRlLkJPT0xFQU4pLGUuYWRkKCJib3JkZXJDbGFzc05hbWUiLHZvaWQgMCkuc2V0VHlwZShuLkF0dHJpYnV0ZS5TVFJJTkcpLGUuYWRkKCJib3JkZXJFbmFibGVBdXRvSGlkZSIsITEpLnNldFR5cGUobi5BdHRyaWJ1dGUuQk9PTEVBTiksZX1jb25zdHJ1Y3Rvcigpe3RoaXMuX2JvcmRlclJlY3RzPXtpbm5lcjphLlJlY3QuZW1wdHkoKSxvdXRlcjphLlJlY3QuZW1wdHkoKX0sdGhpcy5fYXR0cmlidXRlcz17fSx0aGlzLl9pZE1hcD17fSx0aGlzLl9ib3JkZXJzPW5ldyBkLkJvcmRlclNldCh0aGlzKSx0aGlzLl9wb2ludGVyRmluZT0hMCx0aGlzLl9zaG93SGlkZGVuQm9yZGVyPXMuRG9ja0xvY2F0aW9uLkNFTlRFUn1fc2V0Q2hhbmdlTGlzdGVuZXIoZSl7dGhpcy5fY2hhbmdlTGlzdGVuZXI9ZX1nZXRBY3RpdmVUYWJzZXQoKXtyZXR1cm4gdGhpcy5fYWN0aXZlVGFiU2V0JiZ0aGlzLmdldE5vZGVCeUlkKHRoaXMuX2FjdGl2ZVRhYlNldC5nZXRJZCgpKT90aGlzLl9hY3RpdmVUYWJTZXQ6dm9pZCAwfV9nZXRTaG93SGlkZGVuQm9yZGVyKCl7cmV0dXJuIHRoaXMuX3Nob3dIaWRkZW5Cb3JkZXJ9X3NldFNob3dIaWRkZW5Cb3JkZXIoZSl7dGhpcy5fc2hvd0hpZGRlbkJvcmRlcj1lfV9zZXRBY3RpdmVUYWJzZXQoZSl7dGhpcy5fYWN0aXZlVGFiU2V0PWV9Z2V0TWF4aW1pemVkVGFic2V0KCl7cmV0dXJuIHRoaXMuX21heGltaXplZFRhYlNldH1fc2V0TWF4aW1pemVkVGFic2V0KGUpe3RoaXMuX21heGltaXplZFRhYlNldD1lfWdldFJvb3QoKXtyZXR1cm4gdGhpcy5fcm9vdH1pc1Jvb3RPcmllbnRhdGlvblZlcnRpY2FsKCl7cmV0dXJuIHRoaXMuX2F0dHJpYnV0ZXMucm9vdE9yaWVudGF0aW9uVmVydGljYWx9aXNVc2VWaXNpYmlsaXR5KCl7cmV0dXJuIHRoaXMuX2F0dHJpYnV0ZXMuZW5hYmxlVXNlVmlzaWJpbGl0eX1pc0VuYWJsZVJvdGF0ZUJvcmRlckljb25zKCl7cmV0dXJuIHRoaXMuX2F0dHJpYnV0ZXMuZW5hYmxlUm90YXRlQm9yZGVySWNvbnN9Z2V0Qm9yZGVyU2V0KCl7cmV0dXJuIHRoaXMuX2JvcmRlcnN9X2dldE91dGVySW5uZXJSZWN0cygpe3JldHVybiB0aGlzLl9ib3JkZXJSZWN0c31fZ2V0UG9pbnRlckZpbmUoKXtyZXR1cm4gdGhpcy5fcG9pbnRlckZpbmV9X3NldFBvaW50ZXJGaW5lKGUpe3RoaXMuX3BvaW50ZXJGaW5lPWV9dmlzaXROb2RlcyhlKXt0aGlzLl9ib3JkZXJzLl9mb3JFYWNoTm9kZShlKSx0aGlzLl9yb290Ll9mb3JFYWNoTm9kZShlLDApfWdldE5vZGVCeUlkKGUpe3JldHVybiB0aGlzLl9pZE1hcFtlXX1nZXRGaXJzdFRhYlNldChlPXRoaXMuX3Jvb3Qpe2xldCB0PWUuZ2V0Q2hpbGRyZW4oKVswXTtyZXR1cm4gdCBpbnN0YW5jZW9mIHAuVGFiU2V0Tm9kZT90OnRoaXMuZ2V0Rmlyc3RUYWJTZXQodCl9ZG9BY3Rpb24oZSl7bGV0IHQ7c3dpdGNoKGUudHlwZSl7Y2FzZSBsLkFjdGlvbnMuQUREX05PREU6e2xldCByPW5ldyBoLlRhYk5vZGUodGhpcyxlLmRhdGEuanNvbiwhMCksbj10aGlzLl9pZE1hcFtlLmRhdGEudG9Ob2RlXTsobiBpbnN0YW5jZW9mIHAuVGFiU2V0Tm9kZXx8biBpbnN0YW5jZW9mIHUuQm9yZGVyTm9kZXx8biBpbnN0YW5jZW9mIGMuUm93Tm9kZSkmJihuLmRyb3AocixzLkRvY2tMb2NhdGlvbi5nZXRCeU5hbWUoZS5kYXRhLmxvY2F0aW9uKSxlLmRhdGEuaW5kZXgsZS5kYXRhLnNlbGVjdCksdD1yKTticmVha31jYXNlIGwuQWN0aW9ucy5NT1ZFX05PREU6e2xldCB0PXRoaXMuX2lkTWFwW2UuZGF0YS5mcm9tTm9kZV07aWYodCBpbnN0YW5jZW9mIGguVGFiTm9kZXx8dCBpbnN0YW5jZW9mIHAuVGFiU2V0Tm9kZSl7bGV0IHI9dGhpcy5faWRNYXBbZS5kYXRhLnRvTm9kZV07KHIgaW5zdGFuY2VvZiBwLlRhYlNldE5vZGV8fHIgaW5zdGFuY2VvZiB1LkJvcmRlck5vZGV8fHIgaW5zdGFuY2VvZiBjLlJvd05vZGUpJiZyLmRyb3AodCxzLkRvY2tMb2NhdGlvbi5nZXRCeU5hbWUoZS5kYXRhLmxvY2F0aW9uKSxlLmRhdGEuaW5kZXgsZS5kYXRhLnNlbGVjdCl9YnJlYWt9Y2FzZSBsLkFjdGlvbnMuREVMRVRFX1RBQjp7bGV0IHQ9dGhpcy5faWRNYXBbZS5kYXRhLm5vZGVdO3QgaW5zdGFuY2VvZiBoLlRhYk5vZGUmJnQuX2RlbGV0ZSgpO2JyZWFrfWNhc2UgbC5BY3Rpb25zLkRFTEVURV9UQUJTRVQ6e2xldCB0PXRoaXMuX2lkTWFwW2UuZGF0YS5ub2RlXTtpZih0IGluc3RhbmNlb2YgcC5UYWJTZXROb2RlKXtsZXQgZT1bLi4udC5nZXRDaGlsZHJlbigpXTtmb3IobGV0IHQ9MDt0PGUubGVuZ3RoO3QrKyl7bGV0IHI9ZVt0XTtyLmlzRW5hYmxlQ2xvc2UoKSYmci5fZGVsZXRlKCl9MD09PXQuZ2V0Q2hpbGRyZW4oKS5sZW5ndGgmJnQuX2RlbGV0ZSgpLHRoaXMuX3RpZHkoKX1icmVha31jYXNlIGwuQWN0aW9ucy5GTE9BVF9UQUI6e2xldCB0PXRoaXMuX2lkTWFwW2UuZGF0YS5ub2RlXTt0IGluc3RhbmNlb2YgaC5UYWJOb2RlJiYodC5fc2V0RmxvYXRpbmcoITApLCgwLGYuYWRqdXN0U2VsZWN0ZWRJbmRleEFmdGVyRmxvYXQpKHQpKTticmVha31jYXNlIGwuQWN0aW9ucy5VTkZMT0FUX1RBQjp7bGV0IHQ9dGhpcy5faWRNYXBbZS5kYXRhLm5vZGVdO3QgaW5zdGFuY2VvZiBoLlRhYk5vZGUmJih0Ll9zZXRGbG9hdGluZyghMSksKDAsZi5hZGp1c3RTZWxlY3RlZEluZGV4QWZ0ZXJEb2NrKSh0KSk7YnJlYWt9Y2FzZSBsLkFjdGlvbnMuUkVOQU1FX1RBQjp7bGV0IHQ9dGhpcy5faWRNYXBbZS5kYXRhLm5vZGVdO3QgaW5zdGFuY2VvZiBoLlRhYk5vZGUmJnQuX3NldE5hbWUoZS5kYXRhLnRleHQpO2JyZWFrfWNhc2UgbC5BY3Rpb25zLlNFTEVDVF9UQUI6e2xldCB0PXRoaXMuX2lkTWFwW2UuZGF0YS50YWJOb2RlXTtpZih0IGluc3RhbmNlb2YgaC5UYWJOb2RlKXtsZXQgZT10LmdldFBhcmVudCgpLHI9ZS5nZXRDaGlsZHJlbigpLmluZGV4T2YodCk7ZSBpbnN0YW5jZW9mIHUuQm9yZGVyTm9kZT9lLmdldFNlbGVjdGVkKCk9PT1yP2UuX3NldFNlbGVjdGVkKC0xKTplLl9zZXRTZWxlY3RlZChyKTplIGluc3RhbmNlb2YgcC5UYWJTZXROb2RlJiYoZS5nZXRTZWxlY3RlZCgpIT09ciYmZS5fc2V0U2VsZWN0ZWQociksdGhpcy5fYWN0aXZlVGFiU2V0PWUpfWJyZWFrfWNhc2UgbC5BY3Rpb25zLlNFVF9BQ1RJVkVfVEFCU0VUOmlmKHZvaWQgMD09PWUuZGF0YS50YWJzZXROb2RlKXRoaXMuX2FjdGl2ZVRhYlNldD12b2lkIDA7ZWxzZXtsZXQgdD10aGlzLl9pZE1hcFtlLmRhdGEudGFic2V0Tm9kZV07dCBpbnN0YW5jZW9mIHAuVGFiU2V0Tm9kZSYmKHRoaXMuX2FjdGl2ZVRhYlNldD10KX1icmVhaztjYXNlIGwuQWN0aW9ucy5BREpVU1RfU1BMSVQ6e2xldCB0PXRoaXMuX2lkTWFwW2UuZGF0YS5ub2RlMV0scj10aGlzLl9pZE1hcFtlLmRhdGEubm9kZTJdOyh0IGluc3RhbmNlb2YgcC5UYWJTZXROb2RlfHx0IGluc3RhbmNlb2YgYy5Sb3dOb2RlKSYmKHIgaW5zdGFuY2VvZiBwLlRhYlNldE5vZGV8fHIgaW5zdGFuY2VvZiBjLlJvd05vZGUpJiYodGhpcy5fYWRqdXN0U3BsaXRTaWRlKHQsZS5kYXRhLndlaWdodDEsZS5kYXRhLnBpeGVsV2lkdGgxKSx0aGlzLl9hZGp1c3RTcGxpdFNpZGUocixlLmRhdGEud2VpZ2h0MixlLmRhdGEucGl4ZWxXaWR0aDIpKTticmVha31jYXNlIGwuQWN0aW9ucy5BREpVU1RfQk9SREVSX1NQTElUOntsZXQgdD10aGlzLl9pZE1hcFtlLmRhdGEubm9kZV07dCBpbnN0YW5jZW9mIHUuQm9yZGVyTm9kZSYmdC5fc2V0U2l6ZShlLmRhdGEucG9zKTticmVha31jYXNlIGwuQWN0aW9ucy5NQVhJTUlaRV9UT0dHTEU6e2xldCB0PXRoaXMuX2lkTWFwW2UuZGF0YS5ub2RlXTt0IGluc3RhbmNlb2YgcC5UYWJTZXROb2RlJiYodD09PXRoaXMuX21heGltaXplZFRhYlNldD90aGlzLl9tYXhpbWl6ZWRUYWJTZXQ9dm9pZCAwOih0aGlzLl9tYXhpbWl6ZWRUYWJTZXQ9dCx0aGlzLl9hY3RpdmVUYWJTZXQ9dCkpO2JyZWFrfWNhc2UgbC5BY3Rpb25zLlVQREFURV9NT0RFTF9BVFRSSUJVVEVTOnRoaXMuX3VwZGF0ZUF0dHJzKGUuZGF0YS5qc29uKTticmVhaztjYXNlIGwuQWN0aW9ucy5VUERBVEVfTk9ERV9BVFRSSUJVVEVTOnRoaXMuX2lkTWFwW2UuZGF0YS5ub2RlXS5fdXBkYXRlQXR0cnMoZS5kYXRhLmpzb24pfXJldHVybiB0aGlzLl91cGRhdGVJZE1hcCgpLHZvaWQgMCE9PXRoaXMuX2NoYW5nZUxpc3RlbmVyJiZ0aGlzLl9jaGFuZ2VMaXN0ZW5lcihlKSx0fV91cGRhdGVJZE1hcCgpe3RoaXMuX2lkTWFwPXt9LHRoaXMudmlzaXROb2RlcyhlPT50aGlzLl9pZE1hcFtlLmdldElkKCldPWUpfV9hZGp1c3RTcGxpdFNpZGUoZSx0LHIpe2UuX3NldFdlaWdodCh0KSxudWxsIT1lLmdldFdpZHRoKCkmJmUuZ2V0T3JpZW50YXRpb24oKT09PW8uT3JpZW50YXRpb24uVkVSVD9lLl91cGRhdGVBdHRycyh7d2lkdGg6cn0pOm51bGwhPWUuZ2V0SGVpZ2h0KCkmJmUuZ2V0T3JpZW50YXRpb24oKT09PW8uT3JpZW50YXRpb24uSE9SWiYmZS5fdXBkYXRlQXR0cnMoe2hlaWdodDpyfSl9dG9Kc29uKCl7bGV0IGU9e307cmV0dXJuIG0uX2F0dHJpYnV0ZURlZmluaXRpb25zLnRvSnNvbihlLHRoaXMuX2F0dHJpYnV0ZXMpLHRoaXMudmlzaXROb2RlcyhlPT57ZS5fZmlyZUV2ZW50KCJzYXZlIix2b2lkIDApfSkse2"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "B0aW9uQ2xhc3NOYW1lOm51bGw9PWI/dm9pZCAwOmIuZGVzY3JpcHRpb25DbGFzc05hbWUsaW52ZXJ0OnIsdmlzaWJsZVRvYXN0czp5LGNsb3NlQnV0dG9uOm51bGwhPSh1PW51bGw9PWI/dm9pZCAwOmIuY2xvc2VCdXR0b24pP3U6bCxpbnRlcmFjdGluZzpCLHBvc2l0aW9uOnQsc3R5bGU6bnVsbD09Yj92b2lkIDA6Yi5zdHlsZSx1bnN0eWxlZDpudWxsPT1iP3ZvaWQgMDpiLnVuc3R5bGVkLGNsYXNzTmFtZXM6bnVsbD09Yj92b2lkIDA6Yi5jbGFzc05hbWVzLGNhbmNlbEJ1dHRvblN0eWxlOm51bGw9PWI/dm9pZCAwOmIuY2FuY2VsQnV0dG9uU3R5bGUsYWN0aW9uQnV0dG9uU3R5bGU6bnVsbD09Yj92b2lkIDA6Yi5hY3Rpb25CdXR0b25TdHlsZSxyZW1vdmVUb2FzdDokLHRvYXN0czpJLmZpbHRlcihlPT5lLnBvc2l0aW9uPT1pLnBvc2l0aW9uKSxoZWlnaHRzOk4uZmlsdGVyKGU9PmUucG9zaXRpb249PWkucG9zaXRpb24pLHNldEhlaWdodHM6QyxleHBhbmRCeURlZmF1bHQ6YSxnYXA6VCxsb2FkaW5nSWNvbjpTLGV4cGFuZGVkOkwscGF1c2VXaGVuUGFnZUlzSGlkZGVuOkEsc3dpcGVEaXJlY3Rpb25zOmUuc3dpcGVEaXJlY3Rpb25zfSl9KSk6bnVsbH0pKX0pfSw2NzQ5ODooZSx0LHIpPT57InVzZSBzdHJpY3QiO3IuZCh0LHtHNTooKT0+WCxIXzooKT0+JCxKVTooKT0+aixQYjooKT0+WSxVQzooKT0+RixWRjooKT0+VyxZSjooKT0+UCxaTDooKT0+VSxaUDooKT0+RyxiTDooKT0+ayxoTjooKT0+WixsOTooKT0+TSxxNzooKT0+eix3djooKT0+Vix6NjooKT0+SH0pO3ZhciBuPXIoNDAxNyksaT1yKDI0MTU3KSxzPXIoNjEwMzMpLG89cigxNTEzKSxhPXIoMTUyODIpLGw9cig1NzA2KSx1PXIoMzk1ODIpLGQ9cig2MjQ1MyksYz0iQ29udGV4dE1lbnUiLFtoLHBdPSgwLHMuQSkoYyxbYS5VRV0pLGY9KDAsYS5VRSkoKSxbbSxnXT1oKGMpLHk9ZT0+e2xldHtfX3Njb3BlQ29udGV4dE1lbnU6dCxjaGlsZHJlbjpyLG9uT3BlbkNoYW5nZTppLGRpcjpzLG1vZGFsOm89ITB9PWUsW3UsY109bi51c2VTdGF0ZSghMSksaD1mKHQpLHA9KDAsbC5jKShpKSxnPW4udXNlQ2FsbGJhY2soZT0+e2MoZSkscChlKX0sW3BdKTtyZXR1cm4oMCxkLmpzeCkobSx7c2NvcGU6dCxvcGVuOnUsb25PcGVuQ2hhbmdlOmcsbW9kYWw6byxjaGlsZHJlbjooMCxkLmpzeCkoYS5iTCx7Li4uaCxkaXI6cyxvcGVuOnUsb25PcGVuQ2hhbmdlOmcsbW9kYWw6byxjaGlsZHJlbjpyfSl9KX07eS5kaXNwbGF5TmFtZT1jO3ZhciBiPSJDb250ZXh0TWVudVRyaWdnZXIiLF89bi5mb3J3YXJkUmVmKChlLHQpPT57bGV0e19fc2NvcGVDb250ZXh0TWVudTpyLGRpc2FibGVkOnM9ITEsLi4ubH09ZSx1PWcoYixyKSxjPWYociksaD1uLnVzZVJlZih7eDowLHk6MH0pLHA9bi51c2VSZWYoe2dldEJvdW5kaW5nQ2xpZW50UmVjdDooKT0+RE9NUmVjdC5mcm9tUmVjdCh7d2lkdGg6MCxoZWlnaHQ6MCwuLi5oLmN1cnJlbnR9KX0pLG09bi51c2VSZWYoMCkseT1uLnVzZUNhbGxiYWNrKCgpPT53aW5kb3cuY2xlYXJUaW1lb3V0KG0uY3VycmVudCksW10pLF89ZT0+e2guY3VycmVudD17eDplLmNsaWVudFgseTplLmNsaWVudFl9LHUub25PcGVuQ2hhbmdlKCEwKX07cmV0dXJuIG4udXNlRWZmZWN0KCgpPT55LFt5XSksbi51c2VFZmZlY3QoKCk9PnZvaWQocyYmeSgpKSxbcyx5XSksKDAsZC5qc3hzKShkLkZyYWdtZW50LHtjaGlsZHJlbjpbKDAsZC5qc3gpKGEuTXosey4uLmMsdmlydHVhbFJlZjpwfSksKDAsZC5qc3gpKG8uc0cuc3Bhbix7ImRhdGEtc3RhdGUiOnUub3Blbj8ib3BlbiI6ImNsb3NlZCIsImRhdGEtZGlzYWJsZWQiOnM/IiI6dm9pZCAwLC4uLmwscmVmOnQsc3R5bGU6e1dlYmtpdFRvdWNoQ2FsbG91dDoibm9uZSIsLi4uZS5zdHlsZX0sb25Db250ZXh0TWVudTpzP2Uub25Db250ZXh0TWVudTooMCxpLm0pKGUub25Db250ZXh0TWVudSxlPT57eSgpLF8oZSksZS5wcmV2ZW50RGVmYXVsdCgpfSksb25Qb2ludGVyRG93bjpzP2Uub25Qb2ludGVyRG93bjooMCxpLm0pKGUub25Qb2ludGVyRG93bixCKGU9Pnt5KCksbS5jdXJyZW50PXdpbmRvdy5zZXRUaW1lb3V0KCgpPT5fKGUpLDcwMCl9KSksb25Qb2ludGVyTW92ZTpzP2Uub25Qb2ludGVyTW92ZTooMCxpLm0pKGUub25Qb2ludGVyTW92ZSxCKHkpKSxvblBvaW50ZXJDYW5jZWw6cz9lLm9uUG9pbnRlckNhbmNlbDooMCxpLm0pKGUub25Qb2ludGVyQ2FuY2VsLEIoeSkpLG9uUG9pbnRlclVwOnM/ZS5vblBvaW50ZXJVcDooMCxpLm0pKGUub25Qb2ludGVyVXAsQih5KSl9KV19KX0pO18uZGlzcGxheU5hbWU9Yjt2YXIgdj1lPT57bGV0e19fc2NvcGVDb250ZXh0TWVudTp0LC4uLnJ9PWUsbj1mKHQpO3JldHVybigwLGQuanN4KShhLlpMLHsuLi5uLC4uLnJ9KX07di5kaXNwbGF5TmFtZT0iQ29udGV4dE1lbnVQb3J0YWwiO3ZhciB3PSJDb250ZXh0TWVudUNvbnRlbnQiLFQ9bi5mb3J3YXJkUmVmKChlLHQpPT57bGV0e19fc2NvcGVDb250ZXh0TWVudTpyLC4uLml9PWUscz1nKHcsciksbz1mKHIpLGw9bi51c2VSZWYoITEpO3JldHVybigwLGQuanN4KShhLlVDLHsuLi5vLC4uLmkscmVmOnQsc2lkZToicmlnaHQiLHNpZGVPZmZzZXQ6MixhbGlnbjoic3RhcnQiLG9uQ2xvc2VBdXRvRm9jdXM6dD0+e3ZhciByO251bGw9PT0ocj1lLm9uQ2xvc2VBdXRvRm9jdXMpfHx2b2lkIDA9PT1yfHxyLmNhbGwoZSx0KSwhdC5kZWZhdWx0UHJldmVudGVkJiZsLmN1cnJlbnQmJnQucHJldmVudERlZmF1bHQoKSxsLmN1cnJlbnQ9ITF9LG9uSW50ZXJhY3RPdXRzaWRlOnQ9Pnt2YXIgcjtudWxsPT09KHI9ZS5vbkludGVyYWN0T3V0c2lkZSl8fHZvaWQgMD09PXJ8fHIuY2FsbChlLHQpLHQuZGVmYXVsdFByZXZlbnRlZHx8cy5tb2RhbHx8KGwuY3VycmVudD0hMCl9LHN0eWxlOnsuLi5lLnN0eWxlLCItLXJhZGl4LWNvbnRleHQtbWVudS1jb250ZW50LXRyYW5zZm9ybS1vcmlnaW4iOiJ2YXIoLS1yYWRpeC1wb3BwZXItdHJhbnNmb3JtLW9yaWdpbikiLCItLXJhZGl4LWNvbnRleHQtbWVudS1jb250ZW50LWF2YWlsYWJsZS13aWR0aCI6InZhcigtLXJhZGl4LXBvcHBlci1hdmFpbGFibGUtd2lkdGgpIiwiLS1yYWRpeC1jb250ZXh0LW1lbnUtY29udGVudC1hdmFpbGFibGUtaGVpZ2h0IjoidmFyKC0tcmFkaXgtcG9wcGVyLWF2YWlsYWJsZS1oZWlnaHQpIiwiLS1yYWRpeC1jb250ZXh0LW1lbnUtdHJpZ2dlci13aWR0aCI6InZhcigtLXJhZGl4LXBvcHBlci1hbmNob3Itd2lkdGgpIiwiLS1yYWRpeC1jb250ZXh0LW1lbnUtdHJpZ2dlci1oZWlnaHQiOiJ2YXIoLS1yYWRpeC1wb3BwZXItYW5jaG9yLWhlaWdodCkifX0pfSk7VC5kaXNwbGF5TmFtZT13O3ZhciBTPW4uZm9yd2FyZFJlZigoZSx0KT0+e2xldHtfX3Njb3BlQ29udGV4dE1lbnU6ciwuLi5ufT1lLGk9ZihyKTtyZXR1cm4oMCxkLmpzeCkoYS5ZSix7Li4uaSwuLi5uLHJlZjp0fSl9KTtTLmRpc3BsYXlOYW1lPSJDb250ZXh0TWVudUdyb3VwIjt2YXIgRT1uLmZvcndhcmRSZWYoKGUsdCk9PntsZXR7X19zY29wZUNvbnRleHRNZW51OnIsLi4ubn09ZSxpPWYocik7cmV0dXJuKDAsZC5qc3gpKGEuSlUsey4uLmksLi4ubixyZWY6dH0pfSk7RS5kaXNwbGF5TmFtZT0iQ29udGV4dE1lbnVMYWJlbCI7dmFyIHg9bi5mb3J3YXJkUmVmKChlLHQpPT57bGV0e19fc2NvcGVDb250ZXh0TWVudTpyLC4uLm59PWUsaT1mKHIpO3JldHVybigwLGQuanN4KShhLnE3LHsuLi5pLC4uLm4scmVmOnR9KX0pO3guZGlzcGxheU5hbWU9IkNvbnRleHRNZW51SXRlbSI7dmFyIEE9bi5mb3J3YXJkUmVmKChlLHQpPT57bGV0e19fc2NvcGVDb250ZXh0TWVudTpyLC4uLm59PWUsaT1mKHIpO3JldHVybigwLGQuanN4KShhLkhfLHsuLi5pLC4uLm4scmVmOnR9KX0pO0EuZGlzcGxheU5hbWU9IkNvbnRleHRNZW51Q2hlY2tib3hJdGVtIjt2YXIgST1uLmZvcndhcmRSZWYoKGUsdCk9PntsZXR7X19zY29wZUNvbnRleHRNZW51OnIsLi4ubn09ZSxpPWYocik7cmV0dXJuKDAsZC5qc3gpKGEuejYsey4uLmksLi4ubixyZWY6dH0pfSk7SS5kaXNwbGF5TmFtZT0iQ29udGV4dE1lbnVSYWRpb0dyb3VwIjt2YXIgTz1uLmZvcndhcmRSZWYoKGUsdCk9PntsZXR7X19zY29wZUNvbnRleHRNZW51OnIsLi4ubn09ZSxpPWYocik7cmV0dXJuKDAsZC5qc3gpKGEuaE4sey4uLmksLi4ubixyZWY6dH0pfSk7Ty5kaXNwbGF5TmFtZT0iQ29udGV4dE1lbnVSYWRpb0l0ZW0iO3ZhciBSPW4uZm9yd2FyZFJlZigoZSx0KT0+e2xldHtfX3Njb3BlQ29udGV4dE1lbnU6ciwuLi5ufT1lLGk9ZihyKTtyZXR1cm4oMCxkLmpzeCkoYS5WRix7Li4uaSwuLi5uLHJlZjp0fSl9KTtSLmRpc3BsYXlOYW1lPSJDb250ZXh0TWVudUl0ZW1JbmRpY2F0b3IiO3ZhciBOPW4uZm9yd2FyZFJlZigoZSx0KT0+e2xldHtfX3Njb3BlQ29udGV4dE1lbnU6ciwuLi5ufT1lLGk9ZihyKTtyZXR1cm4oMCxkLmpzeCkoYS53dix7Li4uaSwuLi5uLHJlZjp0fSl9KTtOLmRpc3BsYXlOYW1lPSJDb250ZXh0TWVudVNlcGFyYXRvciIsbi5mb3J3YXJkUmVmKChlLHQpPT57bGV0e19fc2NvcGVDb250ZXh0TWVudTpyLC4uLm59PWUsaT1mKHIpO3JldHVybigwLGQuanN4KShhLmkzLHsuLi5pLC4uLm4scmVmOnR9KX0pLmRpc3BsYXlOYW1lPSJDb250ZXh0TWVudUFycm93Ijt2YXIgQz1lPT57bGV0e19fc2NvcGVDb250ZXh0TWVudTp0LGNoaWxkcmVuOnIsb25PcGVuQ2hhbmdlOm4sb3BlbjppLGRlZmF1bHRPcGVuOnN9PWUsbz1mKHQpLFtsLGNdPSgwLHUuaSkoe3Byb3A6aSxkZWZhdWx0UHJvcDpzLG9uQ2hhbmdlOm59KTtyZXR1cm4oMCxkLmpzeCkoYS5QYix7Li4ubyxvcGVuOmwsb25PcGVuQ2hhbmdlOmMsY2hpbGRyZW46cn0pfTtDLmRpc3BsYXlOYW1lPSJDb250ZXh0TWVudVN1YiI7dmFyIEw9bi5mb3J3YXJkUmVmKChlLHQpPT57bGV0e19fc2NvcGVDb250ZXh0TWVudTpyLC4uLm59PWUsaT1mKHIpO3JldHVybigwLGQuanN4KShhLlpQLHsuLi5pLC4uLm4scmVmOnR9KX0pO0wuZGlzcGxheU5hbWU9IkNvbnRleHRNZW51U3ViVHJpZ2dlciI7dmFyIEQ9bi5mb3J3YXJkUmVmKChlLHQpPT57bGV0e19fc2NvcGVDb250ZXh0TWVudTpyLC4uLm59PWUsaT1mKHIpO3JldHVybigwLGQuanN4KShhLkc1LHsuLi5pLC4uLm4scmVmOnQsc3R5bGU6ey4uLmUuc3R5bGUsIi0tcmFkaXgtY29udGV4dC1tZW51LWNvbnRlbnQtdHJhbnNmb3JtLW9yaWdpbiI6InZhcigtLXJhZGl4LXBvcHBlci10cmFuc2Zvcm0tb3JpZ2luKSIsIi0tcmFkaXgtY29udGV4dC1tZW51LWNvbnRlbnQtYXZhaWxhYmxlLXdpZHRoIjoidmFyKC0tcmFkaXgtcG9wcGVyLWF2YWlsYWJsZS13aWR0aCkiLCItLXJhZGl4LWNvbnRleHQtbWVudS1jb250ZW50LWF2YWlsYWJsZS1oZWlnaHQiOiJ2YXIoLS1yYWRpeC1wb3BwZXItYXZhaWxhYmxlLWhlaWdodCkiLCItLXJhZGl4LWNvbnRleHQtbWVudS10cmlnZ2VyLXdpZHRoIjoidmFyKC0tcmFkaXgtcG9wcGVyLWFuY2hvci13aWR0aCkiLCItLXJhZGl4LWNvbnRleHQtbWVudS10cmlnZ2VyLWhlaWdodCI6InZhcigtLXJhZGl4LXBvcHBlci1hbmNob3ItaGVpZ2h0KSJ9fSl9KTtmdW5jdGlvbiBCKGUpe3JldHVybiB0PT4ibW91c2UiIT09dC5wb2ludGVyVHlwZT9lKHQpOnZvaWQgMH1ELmRpc3BsYXlOYW1lPSJDb250ZXh0TWVudVN1YkNvbnRlbnQiO3ZhciBrPXksTT1fLFU9dixGPVQsUD1TLGo9RSx6PXgsJD1BLEg9SSxaPU8sVz1SLFY9TixZPUMsRz1MLFg9RH0sNjc2MjY6KGUsdCxyKT0+eyJ1c2Ugc3RyaWN0IjtyLmQodCx7ZjooKT0+c30pO3ZhciBuPXIoOTgwNzApO2Z1bmN0aW9uIGkoZSl7cmV0dXJuIGV9ZnVuY3Rpb24gcyhlKXt2b2lkIDA9PT1lJiYoZT17fSk7dmFyIHQscixzLG8sYT0odD1udWxsLHZvaWQgMD09PXImJihyPWkpLHM9W10sbz0hMSx7cmVhZDpmdW5jdGlvbigpe2lmKG8pdGhyb3cgRXJyb3IoIlNpZGVjYXI6IGNvdWxkIG5vdCBgcmVhZGAgZnJvbSBhbiBgYXNzaWduZWRgIG1lZGl1bS4gYHJlYWRgIGNvdWxkIGJlIHVzZWQgb25seSB3aXRoIGB1c2VNZWRpdW1gLiIpO3JldHVybiBzLmxlbmd0aD9zW3MubGVuZ3RoLTFdOm51bGx9LHVzZU1lZGl1bTpmdW5jdGlvbihlKXt2YXIgdD1yKGUsbyk7cmV0dXJuIHMucHVzaCh0KSxmdW5jdGlvbigpe3M9cy5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGUhPT10fSl9fSxhc3NpZ25TeW5jTWVkaXVt"
     ""
     ""
     "bmN0aW9uKGUsdCxyLG4saSl7dmFyIGM9YShudWxsKTtpZihudWxsPT09Yy5jdXJyZW50KXt2YXIgaD17aGFzVmFsdWU6ITEsdmFsdWU6bnVsbH07Yy5jdXJyZW50PWh9ZWxzZSBoPWMuY3VycmVudDt2YXIgcD1vKGUsKGM9dShmdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7aWYoIWwpe2lmKGw9ITAsbz1lLGU9bihlKSx2b2lkIDAhPT1pJiZoLmhhc1ZhbHVlKXt2YXIgdD1oLnZhbHVlO2lmKGkodCxlKSlyZXR1cm4gYT10fXJldHVybiBhPWV9aWYodD1hLHMobyxlKSlyZXR1cm4gdDt2YXIgcj1uKGUpO3JldHVybiB2b2lkIDAhPT1pJiZpKHQscik/KG89ZSx0KToobz1lLGE9cil9dmFyIG8sYSxsPSExLHU9dm9pZCAwPT09cj9udWxsOnI7cmV0dXJuW2Z1bmN0aW9uKCl7cmV0dXJuIGUodCgpKX0sbnVsbD09PXU/dm9pZCAwOmZ1bmN0aW9uKCl7cmV0dXJuIGUodSgpKX1dfSxbdCxyLG4saV0pKVswXSxjWzFdKTtyZXR1cm4gbChmdW5jdGlvbigpe2guaGFzVmFsdWU9ITAsaC52YWx1ZT1wfSxbcF0pLGQocCkscH19LDc1NTI4OihlLHQscik9PnsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHQuUmVjdD12b2lkIDA7bGV0IG49cig4NzY2MCk7Y2xhc3MgaXtzdGF0aWMgZW1wdHkoKXtyZXR1cm4gbmV3IGkoMCwwLDAsMCl9Y29uc3RydWN0b3IoZSx0LHIsbil7dGhpcy54PWUsdGhpcy55PXQsdGhpcy53aWR0aD1yLHRoaXMuaGVpZ2h0PW59c3RhdGljIGZyb21FbGVtZW50KGUpe2xldHt4OnQseTpyLHdpZHRoOm4saGVpZ2h0OnN9PWUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7cmV0dXJuIG5ldyBpKHQscixuLHMpfWNsb25lKCl7cmV0dXJuIG5ldyBpKHRoaXMueCx0aGlzLnksdGhpcy53aWR0aCx0aGlzLmhlaWdodCl9ZXF1YWxzKGUpe3JldHVybiB0aGlzLng9PT0obnVsbD09ZT92b2lkIDA6ZS54KSYmdGhpcy55PT09KG51bGw9PWU/dm9pZCAwOmUueSkmJnRoaXMud2lkdGg9PT0obnVsbD09ZT92b2lkIDA6ZS53aWR0aCkmJnRoaXMuaGVpZ2h0PT09KG51bGw9PWU/dm9pZCAwOmUuaGVpZ2h0KX1nZXRCb3R0b20oKXtyZXR1cm4gdGhpcy55K3RoaXMuaGVpZ2h0fWdldFJpZ2h0KCl7cmV0dXJuIHRoaXMueCt0aGlzLndpZHRofWdldENlbnRlcigpe3JldHVybnt4OnRoaXMueCt0aGlzLndpZHRoLzIseTp0aGlzLnkrdGhpcy5oZWlnaHQvMn19cG9zaXRpb25FbGVtZW50KGUsdCl7dGhpcy5zdHlsZVdpdGhQb3NpdGlvbihlLnN0eWxlLHQpfXN0eWxlV2l0aFBvc2l0aW9uKGUsdD0iYWJzb2x1dGUiKXtyZXR1cm4gZS5sZWZ0PXRoaXMueCsicHgiLGUudG9wPXRoaXMueSsicHgiLGUud2lkdGg9TWF0aC5tYXgoMCx0aGlzLndpZHRoKSsicHgiLGUuaGVpZ2h0PU1hdGgubWF4KDAsdGhpcy5oZWlnaHQpKyJweCIsZS5wb3NpdGlvbj10LGV9Y29udGFpbnMoZSx0KXtyZXR1cm4hISh0aGlzLng8PWUmJmU8PXRoaXMuZ2V0UmlnaHQoKSYmdGhpcy55PD10JiZ0PD10aGlzLmdldEJvdHRvbSgpKX1yZW1vdmVJbnNldHMoZSl7cmV0dXJuIG5ldyBpKHRoaXMueCtlLmxlZnQsdGhpcy55K2UudG9wLE1hdGgubWF4KDAsdGhpcy53aWR0aC1lLmxlZnQtZS5yaWdodCksTWF0aC5tYXgoMCx0aGlzLmhlaWdodC1lLnRvcC1lLmJvdHRvbSkpfWNlbnRlckluUmVjdChlKXt0aGlzLng9KGUud2lkdGgtdGhpcy53aWR0aCkvMix0aGlzLnk9KGUuaGVpZ2h0LXRoaXMuaGVpZ2h0KS8yfV9nZXRTaXplKGUpe2xldCB0PXRoaXMud2lkdGg7cmV0dXJuIGU9PT1uLk9yaWVudGF0aW9uLlZFUlQmJih0PXRoaXMuaGVpZ2h0KSx0fXRvU3RyaW5nKCl7cmV0dXJuIihSZWN0OiB4PSIrdGhpcy54KyIsIHk9Iit0aGlzLnkrIiwgd2lkdGg9Iit0aGlzLndpZHRoKyIsIGhlaWdodD0iK3RoaXMuaGVpZ2h0KyIpIn19dC5SZWN0PWl9LDc3MzQ4OihlLHQscik9PnsidXNlIHN0cmljdCI7ci5kKHQse0M6KCk9Pm99KTt2YXIgbj1yKDQwMTcpLGk9cig3MTY1Nykscz1yKDYyMTI2KSxvPWU9PntsZXR7cHJlc2VudDp0LGNoaWxkcmVuOnJ9PWUsbz1mdW5jdGlvbihlKXt2YXIgdCxyO2xldFtpLG9dPW4udXNlU3RhdGUoKSxsPW4udXNlUmVmKHt9KSx1PW4udXNlUmVmKGUpLGQ9bi51c2VSZWYoIm5vbmUiKSxbYyxoXT0odD1lPyJtb3VudGVkIjoidW5tb3VudGVkIixyPXttb3VudGVkOntVTk1PVU5UOiJ1bm1vdW50ZWQiLEFOSU1BVElPTl9PVVQ6InVubW91bnRTdXNwZW5kZWQifSx1bm1vdW50U3VzcGVuZGVkOntNT1VOVDoibW91bnRlZCIsQU5JTUFUSU9OX0VORDoidW5tb3VudGVkIn0sdW5tb3VudGVkOntNT1VOVDoibW91bnRlZCJ9fSxuLnVzZVJlZHVjZXIoKGUsdCk9PntsZXQgbj1yW2VdW3RdO3JldHVybiBudWxsIT1uP246ZX0sdCkpO3JldHVybiBuLnVzZUVmZmVjdCgoKT0+e2xldCBlPWEobC5jdXJyZW50KTtkLmN1cnJlbnQ9Im1vdW50ZWQiPT09Yz9lOiJub25lIn0sW2NdKSwoMCxzLk4pKCgpPT57bGV0IHQ9bC5jdXJyZW50LHI9dS5jdXJyZW50O2lmKHIhPT1lKXtsZXQgbj1kLmN1cnJlbnQsaT1hKHQpO2U/aCgiTU9VTlQiKToibm9uZSI9PT1pfHwobnVsbD09dD92b2lkIDA6dC5kaXNwbGF5KT09PSJub25lIj9oKCJVTk1PVU5UIik6ciYmbiE9PWk/aCgiQU5JTUFUSU9OX09VVCIpOmgoIlVOTU9VTlQiKSx1LmN1cnJlbnQ9ZX19LFtlLGhdKSwoMCxzLk4pKCgpPT57aWYoaSl7dmFyIGU7bGV0IHQ7bGV0IHI9bnVsbCE9PShlPWkub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldykmJnZvaWQgMCE9PWU/ZTp3aW5kb3csbj1lPT57bGV0IG49YShsLmN1cnJlbnQpLmluY2x1ZGVzKGUuYW5pbWF0aW9uTmFtZSk7aWYoZS50YXJnZXQ9PT1pJiZuJiYoaCgiQU5JTUFUSU9OX0VORCIpLCF1LmN1cnJlbnQpKXtsZXQgZT1pLnN0eWxlLmFuaW1hdGlvbkZpbGxNb2RlO2kuc3R5bGUuYW5pbWF0aW9uRmlsbE1vZGU9ImZvcndhcmRzIix0PXIuc2V0VGltZW91dCgoKT0+eyJmb3J3YXJkcyI9PT1pLnN0eWxlLmFuaW1hdGlvbkZpbGxNb2RlJiYoaS5zdHlsZS5hbmltYXRpb25GaWxsTW9kZT1lKX0pfX0scz1lPT57ZS50YXJnZXQ9PT1pJiYoZC5jdXJyZW50PWEobC5jdXJyZW50KSl9O3JldHVybiBpLmFkZEV2ZW50TGlzdGVuZXIoImFuaW1hdGlvbnN0YXJ0IixzKSxpLmFkZEV2ZW50TGlzdGVuZXIoImFuaW1hdGlvbmNhbmNlbCIsbiksaS5hZGRFdmVudExpc3RlbmVyKCJhbmltYXRpb25lbmQiLG4pLCgpPT57ci5jbGVhclRpbWVvdXQodCksaS5yZW1vdmVFdmVudExpc3RlbmVyKCJhbmltYXRpb25zdGFydCIscyksaS5yZW1vdmVFdmVudExpc3RlbmVyKCJhbmltYXRpb25jYW5jZWwiLG4pLGkucmVtb3ZlRXZlbnRMaXN0ZW5lcigiYW5pbWF0aW9uZW5kIixuKX19aCgiQU5JTUFUSU9OX0VORCIpfSxbaSxoXSkse2lzUHJlc2VudDpbIm1vdW50ZWQiLCJ1bm1vdW50U3VzcGVuZGVkIl0uaW5jbHVkZXMoYykscmVmOm4udXNlQ2FsbGJhY2soZT0+e2UmJihsLmN1cnJlbnQ9Z2V0Q29tcHV0ZWRTdHlsZShlKSksbyhlKX0sW10pfX0odCksbD0iZnVuY3Rpb24iPT10eXBlb2Ygcj9yKHtwcmVzZW50Om8uaXNQcmVzZW50fSk6bi5DaGlsZHJlbi5vbmx5KHIpLHU9KDAsaS5zKShvLnJlZixmdW5jdGlvbihlKXt2YXIgdCxyO2xldCBuPW51bGw9PT0odD1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUucHJvcHMsInJlZiIpKXx8dm9pZCAwPT09dD92b2lkIDA6dC5nZXQsaT1uJiYiaXNSZWFjdFdhcm5pbmciaW4gbiYmbi5pc1JlYWN0V2FybmluZztyZXR1cm4gaT9lLnJlZjooaT0obj1udWxsPT09KHI9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLCJyZWYiKSl8fHZvaWQgMD09PXI/dm9pZCAwOnIuZ2V0KSYmImlzUmVhY3RXYXJuaW5nImluIG4mJm4uaXNSZWFjdFdhcm5pbmcpP2UucHJvcHMucmVmOmUucHJvcHMucmVmfHxlLnJlZn0obCkpO3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiByfHxvLmlzUHJlc2VudD9uLmNsb25lRWxlbWVudChsLHtyZWY6dX0pOm51bGx9O2Z1bmN0aW9uIGEoZSl7cmV0dXJuKG51bGw9PWU/dm9pZCAwOmUuYW5pbWF0aW9uTmFtZSl8fCJub25lIn1vLmRpc3BsYXlOYW1lPSJQcmVzZW5jZSJ9LDc4NDE3OihlLHQscik9PnsidXNlIHN0cmljdCI7ci5kKHQse0E6KCk9Pm59KTtsZXQgbj0oMCxyKDY0Mjg2KS5BKSgiVHJhc2gyIixbWyJwYXRoIix7ZDoiTTMgNmgxOCIsa2V5OiJkMHdtMGoifV0sWyJwYXRoIix7ZDoiTTE5IDZ2MTRjMCAxLTEgMi0yIDJIN2MtMSAwLTItMS0yLTJWNiIsa2V5OiI0YWxydDQifV0sWyJwYXRoIix7ZDoiTTggNlY0YzAtMSAxLTIgMi0yaDRjMSAwIDIgMSAyIDJ2MiIsa2V5OiJ2MDdzMGUifV0sWyJsaW5lIix7eDE6IjEwIix4MjoiMTAiLHkxOiIxMSIseTI6IjE3IixrZXk6IjF1dWZyNSJ9XSxbImxpbmUiLHt4MToiMTQiLHgyOiIxNCIseTE6IjExIix5MjoiMTciLGtleToieHR4a2QifV1dKX0sNzg0NDA6KGUsdCxyKT0+eyJ1c2Ugc3RyaWN0IjtyLmQodCx7WjooKT0+bH0pO3ZhciBuPXIoNDAxNyksaT1yKDY1MTA4KSxzPXIoMTUxMyksbz1yKDYyMTI2KSxhPXIoNjI0NTMpLGw9bi5mb3J3YXJkUmVmKChlLHQpPT57dmFyIHIsbDtsZXR7Y29udGFpbmVyOnUsLi4uZH09ZSxbYyxoXT1uLnVzZVN0YXRlKCExKTsoMCxvLk4pKCgpPT5oKCEwKSxbXSk7bGV0IHA9dXx8YyYmKG51bGw9PT0obD1nbG9iYWxUaGlzKXx8dm9pZCAwPT09bD92b2lkIDA6bnVsbD09PShyPWwuZG9jdW1lbnQpfHx2b2lkIDA9PT1yP3ZvaWQgMDpyLmJvZHkpO3JldHVybiBwP2kuY3JlYXRlUG9ydGFsKCgwLGEuanN4KShzLnNHLmRpdix7Li4uZCxyZWY6dH0pLHApOm51bGx9KTtsLmRpc3BsYXlOYW1lPSJQb3J0YWwifSw4MDAyNTooZSx0LHIpPT57InVzZSBzdHJpY3QiO3IuZCh0LHtPaDooKT0+c30pO3ZhciBuPXIoNDAxNyksaT0wO2Z1bmN0aW9uIHMoKXtuLnVzZUVmZmVjdCgoKT0+e3ZhciBlLHQ7bGV0IHI9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiW2RhdGEtcmFkaXgtZm9jdXMtZ3VhcmRdIik7cmV0dXJuIGRvY3VtZW50LmJvZHkuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KCJhZnRlcmJlZ2luIixudWxsIT09KGU9clswXSkmJnZvaWQgMCE9PWU/ZTpvKCkpLGRvY3VtZW50LmJvZHkuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KCJiZWZvcmVlbmQiLG51bGwhPT0odD1yWzFdKSYmdm9pZCAwIT09dD90Om8oKSksaSsrLCgpPT57MT09PWkmJmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIltkYXRhLXJhZGl4LWZvY3VzLWd1YXJkXSIpLmZvckVhY2goZT0+ZS5yZW1vdmUoKSksaS0tfX0sW10pfWZ1bmN0aW9uIG8oKXtsZXQgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIik7cmV0dXJuIGUuc2V0QXR0cmlidXRlKCJkYXRhLXJhZGl4LWZvY3VzLWd1YXJkIiwiIiksZS50YWJJbmRleD0wLGUuc3R5bGUub3V0bGluZT0ibm9uZSIsZS5zdHlsZS5vcGFjaXR5PSIwIixlLnN0eWxlLnBvc2l0aW9uPSJmaXhlZCIsZS5zdHlsZS5wb2ludGVyRXZlbnRzPSJub25lIixlfX0sODExMzg6KGUsdCxyKT0+eyJ1c2Ugc3RyaWN0IjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksdC5GbG9hdGluZ1dpbmRvdz12b2lkIDA7bGV0IG49cig0MDE3KSxpPXIoNjUxMDgpLHM9cig3NTUyOCksbz1yKDQwMjUxKTt0LkZsb2F0aW5nV2luZG93PWU9PntsZXR7dGl0bGU6dCxpZDpyLHVybDphLHJlY3Q6bCxvbkNsb3NlV2luZG93OnUsb25TZXRXaW5kb3c6ZCxjaGlsZHJlbjpjfT1lLGg9bi51c2VSZWYobnVsbCkscD1uLnVzZVJlZihudWxsKSxbZixtXT1uLnVzZVN0YXRlKHZvaWQgMCk7cmV0dXJuKG4udXNlTGF5b3V0RWZmZWN0KCgpPT57cC5jdXJyZW50JiZjbGVhclRpbWVvdXQocC5jdXJyZW50KTtsZXQgZT0hMCxuPWx8fG5ldyBzLlJlY3QoMCwwLDEwMCwxMDApLGk9QXJyYXkuZnJvbSh3aW5kb3cuZG9jdW1lbnQuc3R5bGVTaGVldHMpLnJlZHVjZSgoZSx0KT0+e2xldCByO3RyeXtyPXQuY3NzUnVsZXN9Y2F0Y2goZSl7fXRyeXtyZXR1cm5bLi4uZSx7aHJlZjp0LmhyZWYsdHlwZTp0LnR5cGUscnVsZXM6cj9BcnJheS5mcm9tKHIpLm1hcChlPT5lLmNzc1RleHQpOm51bGx9XX1jYXRjaCh0KXtyZXR1cm4gZX19LFtdKTtyZXR1cm4gaC5jdXJyZW50PXdpbmRvdy5vcGVuKGEscixgbGVmdD0ke24ueH0sdG9wPSR7bi55fSx3aWR0aD0ke24ud2lkdGh9LG"
     ""
     ""
     "JpYnV0ZURlZmluaXRpb25zKCl7cmV0dXJuIGYuX2F0dHJpYnV0ZURlZmluaXRpb25zfV91cGRhdGVBdHRycyhlKXtmLl9hdHRyaWJ1dGVEZWZpbml0aW9ucy51cGRhdGUoZSx0aGlzLl9hdHRyaWJ1dGVzKX1zdGF0aWMgZ2V0QXR0cmlidXRlRGVmaW5pdGlvbnMoKXtyZXR1cm4gZi5fYXR0cmlidXRlRGVmaW5pdGlvbnN9fXQuUm93Tm9kZT1mLGYuVFlQRT0icm93IixmLl9hdHRyaWJ1dGVEZWZpbml0aW9ucz1mLl9jcmVhdGVBdHRyaWJ1dGVEZWZpbml0aW9ucygpfSw4NTQ1NTooZSx0LHIpPT57InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSx0LkFjdGlvbnM9dm9pZCAwO2xldCBuPXIoNDY2OTApO2NsYXNzIGl7c3RhdGljIGFkZE5vZGUoZSx0LHIscyxvKXtyZXR1cm4gbmV3IG4uQWN0aW9uKGkuQUREX05PREUse2pzb246ZSx0b05vZGU6dCxsb2NhdGlvbjpyLmdldE5hbWUoKSxpbmRleDpzLHNlbGVjdDpvfSl9c3RhdGljIG1vdmVOb2RlKGUsdCxyLHMsbyl7cmV0dXJuIG5ldyBuLkFjdGlvbihpLk1PVkVfTk9ERSx7ZnJvbU5vZGU6ZSx0b05vZGU6dCxsb2NhdGlvbjpyLmdldE5hbWUoKSxpbmRleDpzLHNlbGVjdDpvfSl9c3RhdGljIGRlbGV0ZVRhYihlKXtyZXR1cm4gbmV3IG4uQWN0aW9uKGkuREVMRVRFX1RBQix7bm9kZTplfSl9c3RhdGljIGRlbGV0ZVRhYnNldChlKXtyZXR1cm4gbmV3IG4uQWN0aW9uKGkuREVMRVRFX1RBQlNFVCx7bm9kZTplfSl9c3RhdGljIHJlbmFtZVRhYihlLHQpe3JldHVybiBuZXcgbi5BY3Rpb24oaS5SRU5BTUVfVEFCLHtub2RlOmUsdGV4dDp0fSl9c3RhdGljIHNlbGVjdFRhYihlKXtyZXR1cm4gbmV3IG4uQWN0aW9uKGkuU0VMRUNUX1RBQix7dGFiTm9kZTplfSl9c3RhdGljIHNldEFjdGl2ZVRhYnNldChlKXtyZXR1cm4gbmV3IG4uQWN0aW9uKGkuU0VUX0FDVElWRV9UQUJTRVQse3RhYnNldE5vZGU6ZX0pfXN0YXRpYyBhZGp1c3RTcGxpdChlKXtsZXQgdD1lLm5vZGUxSWQscj1lLm5vZGUySWQ7cmV0dXJuIG5ldyBuLkFjdGlvbihpLkFESlVTVF9TUExJVCx7bm9kZTE6dCx3ZWlnaHQxOmUud2VpZ2h0MSxwaXhlbFdpZHRoMTplLnBpeGVsV2lkdGgxLG5vZGUyOnIsd2VpZ2h0MjplLndlaWdodDIscGl4ZWxXaWR0aDI6ZS5waXhlbFdpZHRoMn0pfXN0YXRpYyBhZGp1c3RCb3JkZXJTcGxpdChlLHQpe3JldHVybiBuZXcgbi5BY3Rpb24oaS5BREpVU1RfQk9SREVSX1NQTElULHtub2RlOmUscG9zOnR9KX1zdGF0aWMgbWF4aW1pemVUb2dnbGUoZSl7cmV0dXJuIG5ldyBuLkFjdGlvbihpLk1BWElNSVpFX1RPR0dMRSx7bm9kZTplfSl9c3RhdGljIHVwZGF0ZU1vZGVsQXR0cmlidXRlcyhlKXtyZXR1cm4gbmV3IG4uQWN0aW9uKGkuVVBEQVRFX01PREVMX0FUVFJJQlVURVMse2pzb246ZX0pfXN0YXRpYyB1cGRhdGVOb2RlQXR0cmlidXRlcyhlLHQpe3JldHVybiBuZXcgbi5BY3Rpb24oaS5VUERBVEVfTk9ERV9BVFRSSUJVVEVTLHtub2RlOmUsanNvbjp0fSl9c3RhdGljIGZsb2F0VGFiKGUpe3JldHVybiBuZXcgbi5BY3Rpb24oaS5GTE9BVF9UQUIse25vZGU6ZX0pfXN0YXRpYyB1bkZsb2F0VGFiKGUpe3JldHVybiBuZXcgbi5BY3Rpb24oaS5VTkZMT0FUX1RBQix7bm9kZTplfSl9fXQuQWN0aW9ucz1pLGkuQUREX05PREU9IkZsZXhMYXlvdXRfQWRkTm9kZSIsaS5NT1ZFX05PREU9IkZsZXhMYXlvdXRfTW92ZU5vZGUiLGkuREVMRVRFX1RBQj0iRmxleExheW91dF9EZWxldGVUYWIiLGkuREVMRVRFX1RBQlNFVD0iRmxleExheW91dF9EZWxldGVUYWJzZXQiLGkuUkVOQU1FX1RBQj0iRmxleExheW91dF9SZW5hbWVUYWIiLGkuU0VMRUNUX1RBQj0iRmxleExheW91dF9TZWxlY3RUYWIiLGkuU0VUX0FDVElWRV9UQUJTRVQ9IkZsZXhMYXlvdXRfU2V0QWN0aXZlVGFic2V0IixpLkFESlVTVF9TUExJVD0iRmxleExheW91dF9BZGp1c3RTcGxpdCIsaS5BREpVU1RfQk9SREVSX1NQTElUPSJGbGV4TGF5b3V0X0FkanVzdEJvcmRlclNwbGl0IixpLk1BWElNSVpFX1RPR0dMRT0iRmxleExheW91dF9NYXhpbWl6ZVRvZ2dsZSIsaS5VUERBVEVfTU9ERUxfQVRUUklCVVRFUz0iRmxleExheW91dF9VcGRhdGVNb2RlbEF0dHJpYnV0ZXMiLGkuVVBEQVRFX05PREVfQVRUUklCVVRFUz0iRmxleExheW91dF9VcGRhdGVOb2RlQXR0cmlidXRlcyIsaS5GTE9BVF9UQUI9IkZsZXhMYXlvdXRfRmxvYXRUYWIiLGkuVU5GTE9BVF9UQUI9IkZsZXhMYXlvdXRfVW5GbG9hdFRhYiJ9LDg1OTUxOihlLHQscik9PnsidXNlIHN0cmljdCI7ci5kKHQse0Q6KCk9PmQsTjooKT0+Y30pO3ZhciBuPXIoNDAxNyksaT0oZSx0LHIsbixpLHMsbyxhKT0+e2xldCBsPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudCx1PVsibGlnaHQiLCJkYXJrIl07ZnVuY3Rpb24gZCh0KXt2YXIgcjsoQXJyYXkuaXNBcnJheShlKT9lOltlXSkuZm9yRWFjaChlPT57bGV0IHI9ImNsYXNzIj09PWUsbj1yJiZzP2kubWFwKGU9PnNbZV18fGUpOmk7cj8obC5jbGFzc0xpc3QucmVtb3ZlKC4uLm4pLGwuY2xhc3NMaXN0LmFkZCh0KSk6bC5zZXRBdHRyaWJ1dGUoZSx0KX0pLHI9dCxhJiZ1LmluY2x1ZGVzKHIpJiYobC5zdHlsZS5jb2xvclNjaGVtZT1yKX1pZihuKWQobik7ZWxzZSB0cnl7bGV0IGU9bG9jYWxTdG9yYWdlLmdldEl0ZW0odCl8fHIsbj1vJiYic3lzdGVtIj09PWU/d2luZG93Lm1hdGNoTWVkaWEoIihwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaykiKS5tYXRjaGVzPyJkYXJrIjoibGlnaHQiOmU7ZChuKX1jYXRjaChlKXt9fSxzPVsibGlnaHQiLCJkYXJrIl0sbz0iKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKSIsYT0idW5kZWZpbmVkIj09dHlwZW9mIHdpbmRvdyxsPW4uY3JlYXRlQ29udGV4dCh2b2lkIDApLHU9e3NldFRoZW1lOmU9Pnt9LHRoZW1lczpbXX0sZD0oKT0+e3ZhciBlO3JldHVybiBudWxsIT0oZT1uLnVzZUNvbnRleHQobCkpP2U6dX0sYz1lPT5uLnVzZUNvbnRleHQobCk/bi5jcmVhdGVFbGVtZW50KG4uRnJhZ21lbnQsbnVsbCxlLmNoaWxkcmVuKTpuLmNyZWF0ZUVsZW1lbnQocCx7Li4uZX0pLGg9WyJsaWdodCIsImRhcmsiXSxwPWU9PntsZXR7Zm9yY2VkVGhlbWU6dCxkaXNhYmxlVHJhbnNpdGlvbk9uQ2hhbmdlOnI9ITEsZW5hYmxlU3lzdGVtOmk9ITAsZW5hYmxlQ29sb3JTY2hlbWU6YT0hMCxzdG9yYWdlS2V5OnU9InRoZW1lIix0aGVtZXM6ZD1oLGRlZmF1bHRUaGVtZTpjPWk/InN5c3RlbSI6ImxpZ2h0IixhdHRyaWJ1dGU6cD0iZGF0YS10aGVtZSIsdmFsdWU6YixjaGlsZHJlbjpfLG5vbmNlOnYsc2NyaXB0UHJvcHM6d309ZSxbVCxTXT1uLnVzZVN0YXRlKCgpPT5tKHUsYykpLFtFLHhdPW4udXNlU3RhdGUoKCk9Pm0odSkpLEE9Yj9PYmplY3QudmFsdWVzKGIpOmQsST1uLnVzZUNhbGxiYWNrKGU9PntsZXQgdD1lO2lmKCF0KXJldHVybjsic3lzdGVtIj09PWUmJmkmJih0PXkoKSk7bGV0IG49Yj9iW3RdOnQsbz1yP2codik6bnVsbCxsPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudCx1PWU9PnsiY2xhc3MiPT09ZT8obC5jbGFzc0xpc3QucmVtb3ZlKC4uLkEpLG4mJmwuY2xhc3NMaXN0LmFkZChuKSk6ZS5zdGFydHNXaXRoKCJkYXRhLSIpJiYobj9sLnNldEF0dHJpYnV0ZShlLG4pOmwucmVtb3ZlQXR0cmlidXRlKGUpKX07aWYoQXJyYXkuaXNBcnJheShwKT9wLmZvckVhY2godSk6dShwKSxhKXtsZXQgZT1zLmluY2x1ZGVzKGMpP2M6bnVsbCxyPXMuaW5jbHVkZXModCk/dDplO2wuc3R5bGUuY29sb3JTY2hlbWU9cn1udWxsPT1vfHxvKCl9LFt2XSksTz1uLnVzZUNhbGxiYWNrKGU9PntsZXQgdD0iZnVuY3Rpb24iPT10eXBlb2YgZT9lKFQpOmU7Uyh0KTt0cnl7bG9jYWxTdG9yYWdlLnNldEl0ZW0odSx0KX1jYXRjaChlKXt9fSxbVF0pLFI9bi51c2VDYWxsYmFjayhlPT57eCh5KGUpKSwic3lzdGVtIj09PVQmJmkmJiF0JiZJKCJzeXN0ZW0iKX0sW1QsdF0pO24udXNlRWZmZWN0KCgpPT57bGV0IGU9d2luZG93Lm1hdGNoTWVkaWEobyk7cmV0dXJuIGUuYWRkTGlzdGVuZXIoUiksUihlKSwoKT0+ZS5yZW1vdmVMaXN0ZW5lcihSKX0sW1JdKSxuLnVzZUVmZmVjdCgoKT0+e2xldCBlPWU9PntlLmtleT09PXUmJihlLm5ld1ZhbHVlP1MoZS5uZXdWYWx1ZSk6TyhjKSl9O3JldHVybiB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigic3RvcmFnZSIsZSksKCk9PndpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCJzdG9yYWdlIixlKX0sW09dKSxuLnVzZUVmZmVjdCgoKT0+e0kobnVsbCE9dD90OlQpfSxbdCxUXSk7bGV0IE49bi51c2VNZW1vKCgpPT4oe3RoZW1lOlQsc2V0VGhlbWU6Tyxmb3JjZWRUaGVtZTp0LHJlc29sdmVkVGhlbWU6InN5c3RlbSI9PT1UP0U6VCx0aGVtZXM6aT9bLi4uZCwic3lzdGVtIl06ZCxzeXN0ZW1UaGVtZTppP0U6dm9pZCAwfSksW1QsTyx0LEUsaSxkXSk7cmV0dXJuIG4uY3JlYXRlRWxlbWVudChsLlByb3ZpZGVyLHt2YWx1ZTpOfSxuLmNyZWF0ZUVsZW1lbnQoZix7Zm9yY2VkVGhlbWU6dCxzdG9yYWdlS2V5OnUsYXR0cmlidXRlOnAsZW5hYmxlU3lzdGVtOmksZW5hYmxlQ29sb3JTY2hlbWU6YSxkZWZhdWx0VGhlbWU6Yyx2YWx1ZTpiLHRoZW1lczpkLG5vbmNlOnYsc2NyaXB0UHJvcHM6d30pLF8pfSxmPW4ubWVtbyhlPT57bGV0e2ZvcmNlZFRoZW1lOnQsc3RvcmFnZUtleTpyLGF0dHJpYnV0ZTpzLGVuYWJsZVN5c3RlbTpvLGVuYWJsZUNvbG9yU2NoZW1lOmEsZGVmYXVsdFRoZW1lOmwsdmFsdWU6dSx0aGVtZXM6ZCxub25jZTpjLHNjcmlwdFByb3BzOmh9PWUscD1KU09OLnN0cmluZ2lmeShbcyxyLGwsdCxkLHUsbyxhXSkuc2xpY2UoMSwtMSk7cmV0dXJuIG4uY3JlYXRlRWxlbWVudCgic2NyaXB0Iix7Li4uaCxzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmc6ITAsbm9uY2U6InVuZGVmaW5lZCI9PXR5cGVvZiB3aW5kb3c/YzoiIixkYW5nZXJvdXNseVNldElubmVySFRNTDp7X19odG1sOiIoIi5jb25jYXQoaS50b1N0cmluZygpLCIpKCIpLmNvbmNhdChwLCIpIil9fSl9KSxtPShlLHQpPT57bGV0IHI7aWYoIWEpe3RyeXtyPWxvY2FsU3RvcmFnZS5nZXRJdGVtKGUpfHx2b2lkIDB9Y2F0Y2goZSl7fXJldHVybiByfHx0fX0sZz1lPT57bGV0IHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3R5bGUiKTtyZXR1cm4gZSYmdC5zZXRBdHRyaWJ1dGUoIm5vbmNlIixlKSx0LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCIqLCo6OmJlZm9yZSwqOjphZnRlcnstd2Via2l0LXRyYW5zaXRpb246bm9uZSFpbXBvcnRhbnQ7LW1vei10cmFuc2l0aW9uOm5vbmUhaW1wb3J0YW50Oy1vLXRyYW5zaXRpb246bm9uZSFpbXBvcnRhbnQ7LW1zLXRyYW5zaXRpb246bm9uZSFpbXBvcnRhbnQ7dHJhbnNpdGlvbjpub25lIWltcG9ydGFudH0iKSksZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZCh0KSwoKT0+e3dpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmJvZHkpLHNldFRpbWVvdXQoKCk9Pntkb2N1bWVudC5oZWFkLnJlbW92ZUNoaWxkKHQpfSwxKX19LHk9ZT0+KGV8fChlPXdpbmRvdy5tYXRjaE1lZGlhKG8pKSxlLm1hdGNoZXM/ImRhcmsiOiJsaWdodCIpfSw4NzEwMjooZSx0LHIpPT57InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSx0KXtsZXQgcjt0cnl7cj1lKCl9Y2F0Y2goZSl7cmV0dXJufXJldHVybntnZXRJdGVtOmU9Pnt2YXIgbjtsZXQgaT1lPT5udWxsPT09ZT9udWxsOkpTT04ucGFyc2UoZSxudWxsPT10P3ZvaWQgMDp0LnJldml2ZXIpLHM9bnVsbCE9KG49ci5nZXRJdGVtKGUpKT9uOm51bGw7cmV0dXJuIHMgaW5zdGFuY2VvZiBQcm9taXNlP3MudGhlbihpKTppKHMpfSxzZXRJdGVtOihlLG4pPT5yLnNldEl0ZW0oZSxKU09OLnN0cmluZ2lmeShuLG51bGw9PXQ/dm9pZCAwOnQucmVwbGFjZXIpKSxyZW1vdmVJdGVtOmU9PnIucmVtb3ZlSXRlbShlKX19ci5kKHQse0tVOigpPT5uLFpyOigpPT5hfSk7bGV0IGk9ZT0+dD0+e3RyeXtsZXQgcj1lKHQpO2lmKHIgaW5zdGFuY2VvZiBQcm9taXNlKXJldHVybiByO3JldHVybnt0aGVuOmU9PmkoZSkociksY2F0Y2goZSl7cmV0dXJuIHRoaXN9fX1jYXRjaChlKXtyZXR1cm57dGhlbihlKXtyZXR1cm4gdGhpc30sY2F0Y2g6dD0+aSh0KShlKX19fSxzPShlLHQpPT4ocixuLHMpPT57bGV0IG8sYSxsPXtnZXRTdG9yYWdlOigpPT5sb2NhbFN0b3JhZ2Usc2VyaWFsaXplOkpTT04uc3Ry"
     ""
     ""
     ""
     ""
     "YXIiLHM9IndpdGgtc2Nyb2xsLWJhcnMtaGlkZGVuIixvPSItLXJlbW92ZWQtYm9keS1zY3JvbGwtYmFyLXNpemUifSw5ODA3MDooZSx0LHIpPT57InVzZSBzdHJpY3QiO3IuZCh0LHtBUTooKT0+ZCxDNjooKT0+aSxDbDooKT0+cyxNZTooKT0+YyxOMzooKT0+dSxUdDooKT0+byxmWDooKT0+bCxzSDooKT0+YSx4TjooKT0+aH0pO3ZhciBuPWZ1bmN0aW9uKGUsdCl7cmV0dXJuKG49T2JqZWN0LnNldFByb3RvdHlwZU9mfHwoe19fcHJvdG9fXzpbXX0paW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24oZSx0KXtlLl9fcHJvdG9fXz10fXx8ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHIgaW4gdClPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxyKSYmKGVbcl09dFtyXSl9KShlLHQpfTtmdW5jdGlvbiBpKGUsdCl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IFR5cGVFcnJvcigiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSAiK1N0cmluZyh0KSsiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGwiKTtmdW5jdGlvbiByKCl7dGhpcy5jb25zdHJ1Y3Rvcj1lfW4oZSx0KSxlLnByb3RvdHlwZT1udWxsPT09dD9PYmplY3QuY3JlYXRlKHQpOihyLnByb3RvdHlwZT10LnByb3RvdHlwZSxuZXcgcil9dmFyIHM9ZnVuY3Rpb24oKXtyZXR1cm4ocz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQscj0xLG49YXJndW1lbnRzLmxlbmd0aDtyPG47cisrKWZvcih2YXIgaSBpbiB0PWFyZ3VtZW50c1tyXSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxpKSYmKGVbaV09dFtpXSk7cmV0dXJuIGV9KS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2Z1bmN0aW9uIG8oZSx0KXt2YXIgcj17fTtmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmMD50LmluZGV4T2YobikmJihyW25dPWVbbl0pO2lmKG51bGwhPWUmJiJmdW5jdGlvbiI9PXR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKWZvcih2YXIgaT0wLG49T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTtpPG4ubGVuZ3RoO2krKykwPnQuaW5kZXhPZihuW2ldKSYmT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGUsbltpXSkmJihyW25baV1dPWVbbltpXV0pO3JldHVybiByfWZ1bmN0aW9uIGEoZSx0LHIsbil7cmV0dXJuIG5ldyhyfHwocj1Qcm9taXNlKSkoZnVuY3Rpb24oaSxzKXtmdW5jdGlvbiBvKGUpe3RyeXtsKG4ubmV4dChlKSl9Y2F0Y2goZSl7cyhlKX19ZnVuY3Rpb24gYShlKXt0cnl7bChuLnRocm93KGUpKX1jYXRjaChlKXtzKGUpfX1mdW5jdGlvbiBsKGUpe3ZhciB0O2UuZG9uZT9pKGUudmFsdWUpOigodD1lLnZhbHVlKWluc3RhbmNlb2Ygcj90Om5ldyByKGZ1bmN0aW9uKGUpe2UodCl9KSkudGhlbihvLGEpfWwoKG49bi5hcHBseShlLHR8fFtdKSkubmV4dCgpKX0pfU9iamVjdC5jcmVhdGU7ZnVuY3Rpb24gbChlLHQscil7aWYocnx8Mj09YXJndW1lbnRzLmxlbmd0aClmb3IodmFyIG4saT0wLHM9dC5sZW5ndGg7aTxzO2krKykhbiYmaSBpbiB0fHwobnx8KG49QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodCwwLGkpKSxuW2ldPXRbaV0pO3JldHVybiBlLmNvbmNhdChufHxBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0KSl9ZnVuY3Rpb24gdShlKXtyZXR1cm4gdGhpcyBpbnN0YW5jZW9mIHU/KHRoaXMudj1lLHRoaXMpOm5ldyB1KGUpfWZ1bmN0aW9uIGQoZSx0LHIpe2lmKCFTeW1ib2wuYXN5bmNJdGVyYXRvcil0aHJvdyBUeXBlRXJyb3IoIlN5bWJvbC5hc3luY0l0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLiIpO3ZhciBuLGk9ci5hcHBseShlLHR8fFtdKSxzPVtdO3JldHVybiBuPU9iamVjdC5jcmVhdGUoKCJmdW5jdGlvbiI9PXR5cGVvZiBBc3luY0l0ZXJhdG9yP0FzeW5jSXRlcmF0b3I6T2JqZWN0KS5wcm90b3R5cGUpLG8oIm5leHQiKSxvKCJ0aHJvdyIpLG8oInJldHVybiIsZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBQcm9taXNlLnJlc29sdmUodCkudGhlbihlLGQpfX0pLG5bU3ltYm9sLmFzeW5jSXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LG47ZnVuY3Rpb24gbyhlLHQpe2lbZV0mJihuW2VdPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyLG4pe3MucHVzaChbZSx0LHIsbl0pPjF8fGEoZSx0KX0pfSx0JiYobltlXT10KG5bZV0pKSl9ZnVuY3Rpb24gYShlLHQpe3RyeXt2YXIgcjsocj1pW2VdKHQpKS52YWx1ZSBpbnN0YW5jZW9mIHU/UHJvbWlzZS5yZXNvbHZlKHIudmFsdWUudikudGhlbihsLGQpOmMoc1swXVsyXSxyKX1jYXRjaChlKXtjKHNbMF1bM10sZSl9fWZ1bmN0aW9uIGwoZSl7YSgibmV4dCIsZSl9ZnVuY3Rpb24gZChlKXthKCJ0aHJvdyIsZSl9ZnVuY3Rpb24gYyhlLHQpe2UodCkscy5zaGlmdCgpLHMubGVuZ3RoJiZhKHNbMF1bMF0sc1swXVsxXSl9fWZ1bmN0aW9uIGMoZSl7dmFyIHQscjtyZXR1cm4gdD17fSxuKCJuZXh0IiksbigidGhyb3ciLGZ1bmN0aW9uKGUpe3Rocm93IGV9KSxuKCJyZXR1cm4iKSx0W1N5bWJvbC5pdGVyYXRvcl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30sdDtmdW5jdGlvbiBuKG4saSl7dFtuXT1lW25dP2Z1bmN0aW9uKHQpe3JldHVybihyPSFyKT97dmFsdWU6dShlW25dKHQpKSxkb25lOiExfTppP2kodCk6dH06aX19ZnVuY3Rpb24gaChlKXtpZighU3ltYm9sLmFzeW5jSXRlcmF0b3IpdGhyb3cgVHlwZUVycm9yKCJTeW1ib2wuYXN5bmNJdGVyYXRvciBpcyBub3QgZGVmaW5lZC4iKTt2YXIgdCxyPWVbU3ltYm9sLmFzeW5jSXRlcmF0b3JdO3JldHVybiByP3IuY2FsbChlKTooZT1mdW5jdGlvbihlKXt2YXIgdD0iZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3Iscj10JiZlW3RdLG49MDtpZihyKXJldHVybiByLmNhbGwoZSk7aWYoZSYmIm51bWJlciI9PXR5cGVvZiBlLmxlbmd0aClyZXR1cm57bmV4dDpmdW5jdGlvbigpe3JldHVybiBlJiZuPj1lLmxlbmd0aCYmKGU9dm9pZCAwKSx7dmFsdWU6ZSYmZVtuKytdLGRvbmU6IWV9fX07dGhyb3cgVHlwZUVycm9yKHQ/Ik9iamVjdCBpcyBub3QgaXRlcmFibGUuIjoiU3ltYm9sLml0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLiIpfShlKSx0PXt9LG4oIm5leHQiKSxuKCJ0aHJvdyIpLG4oInJldHVybiIpLHRbU3ltYm9sLmFzeW5jSXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LHQpO2Z1bmN0aW9uIG4ocil7dFtyXT1lW3JdJiZmdW5jdGlvbih0KXtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24obixpKXshZnVuY3Rpb24oZSx0LHIsbil7UHJvbWlzZS5yZXNvbHZlKG4pLnRoZW4oZnVuY3Rpb24odCl7ZSh7dmFsdWU6dCxkb25lOnJ9KX0sdCl9KG4saSwodD1lW3JdKHQpKS5kb25lLHQudmFsdWUpfSl9fX1PYmplY3QuY3JlYXRlLCJmdW5jdGlvbiI9PXR5cGVvZiBTdXBwcmVzc2VkRXJyb3ImJlN1cHByZXNzZWRFcnJvcn0sOTg2Mzg6KGUsdCk9PnsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHQuQXR0cmlidXRlPXZvaWQgMDtjbGFzcyBye2NvbnN0cnVjdG9yKGUsdCxyLG4pe3RoaXMubmFtZT1lLHRoaXMubW9kZWxOYW1lPXQsdGhpcy5kZWZhdWx0VmFsdWU9cix0aGlzLmFsd2F5c1dyaXRlSnNvbj1uLHRoaXMucmVxdWlyZWQ9ITEsdGhpcy5maXhlZD0hMSx0aGlzLnR5cGU9ImFueSJ9c2V0VHlwZShlKXtyZXR1cm4gdGhpcy50eXBlPWUsdGhpc31zZXRSZXF1aXJlZCgpe3JldHVybiB0aGlzLnJlcXVpcmVkPSEwLHRoaXN9c2V0Rml4ZWQoKXtyZXR1cm4gdGhpcy5maXhlZD0hMCx0aGlzfX10LkF0dHJpYnV0ZT1yLHIuTlVNQkVSPSJudW1iZXIiLHIuU1RSSU5HPSJzdHJpbmciLHIuQk9PTEVBTj0iYm9vbGVhbiJ9fV0pOw==",    //
     1037164, //
     "application/javascript", //
     "/_next/static/chunks/951-7067eb44ad499754.js/", //
     
};
}
