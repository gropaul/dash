
#pragma once
#include "files.hpp"
namespace duckdb {
const File FILE_NEXT_STATIC_CHUNKS_APP_PAGE_D9DA5F6326651BCA_JS = {
     // Content
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "5nXV06dGV4dC1tdXRlZC1mb3JlZ3JvdW5kIixhKSwuLi5ufSl9KTttLmRpc3BsYXlOYW1lPXIudUIuR3JvdXAuZGlzcGxheU5hbWUsbi5mb3J3YXJkUmVmKChlLHQpPT57bGV0e2NsYXNzTmFtZTphLC4uLm59PWU7cmV0dXJuKDAscy5qc3gpKHIudUIuU2VwYXJhdG9yLHtyZWY6dCxjbGFzc05hbWU6KDAsaS5jbikoIi1teC0xIGgtcHggYmctYm9yZGVyIixhKSwuLi5ufSl9KS5kaXNwbGF5TmFtZT1yLnVCLlNlcGFyYXRvci5kaXNwbGF5TmFtZTtsZXQgcD1uLmZvcndhcmRSZWYoKGUsdCk9PntsZXR7Y2xhc3NOYW1lOmEsLi4ubn09ZTtyZXR1cm4oMCxzLmpzeCkoci51Qi5JdGVtLHtyZWY6dCxjbGFzc05hbWU6KDAsaS5jbikoInJlbGF0aXZlIGZsZXggY3Vyc29yLWRlZmF1bHQgZ2FwLTIgc2VsZWN0LW5vbmUgaXRlbXMtY2VudGVyIHJvdW5kZWQtc20gcHgtMiBweS0xLjUgdGV4dC1zbSBvdXRsaW5lLW5vbmUgZGF0YS1bZGlzYWJsZWQ9dHJ1ZV06cG9pbnRlci1ldmVudHMtbm9uZSBkYXRhLVtzZWxlY3RlZD10cnVlXTpiZy1hY2NlbnQgZGF0YS1bc2VsZWN0ZWQ9dHJ1ZV06dGV4dC1hY2NlbnQtZm9yZWdyb3VuZCBkYXRhLVtkaXNhYmxlZD10cnVlXTpvcGFjaXR5LTUwIFsmX3N2Z106cG9pbnRlci1ldmVudHMtbm9uZSBbJl9zdmddOnNpemUtNCBbJl9zdmddOnNocmluay0wIixhKSwuLi5ufSl9KTtwLmRpc3BsYXlOYW1lPXIudUIuSXRlbS5kaXNwbGF5TmFtZX0sNjc3NzM6KGUsdCxhKT0+eyJ1c2Ugc3RyaWN0IjthLmQodCx7VTooKT0+bH0pO3ZhciBzPWEoNjI0NTMpLG49YSg0NjQxNCkscj1hKDkyMjIyKTtmdW5jdGlvbiBsKGUpe3ZhciB0O2xldCBhPW51bGwhPT0odD1lLnRlc3RNYXJnaW4pJiZ2b2lkIDAhPT10P3Q6InctWzYycHhdIjtyZXR1cm4icnVubmluZyI9PT1lLmV4ZWN1dGlvblN0YXRlLnN0YXRlPygwLHMuanN4cykoImRpdiIse2NsYXNzTmFtZToiZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgaC02IixjaGlsZHJlbjpbKDAscy5qc3gpKCJkaXYiLHtjbGFzc05hbWU6IiIuY29uY2F0KGEsIiBmbGV4IGZsZXgtcm93IGl0ZW1zLWNlbnRlciBnYXAtMiBqdXN0aWZ5LWNlbnRlciIpLGNoaWxkcmVuOigwLHMuanN4KShuLkEse3NpemU6MTgsY2xhc3NOYW1lOiJhbmltYXRlLXNwaW4ifSl9KSwoMCxzLmpzeCkoInNwYW4iLHtjbGFzc05hbWU6InRleHQtc20iLGNoaWxkcmVuOmUucnVuVGV4dH0pXX0pOigwLHMuanN4cykoImRpdiIse2NsYXNzTmFtZToiZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgaC02IixjaGlsZHJlbjpbKDAscy5qc3gpKCJkaXYiLHtjbGFzc05hbWU6IiIuY29uY2F0KGEsIiBmbGV4IGZsZXgtcm93IGl0ZW1zLWNlbnRlciBnYXAtMiBqdXN0aWZ5LWNlbnRlciB0ZXh0LWdyZWVuLTYwMCBob3Zlcjp0ZXh0LWdyZWVuLTgwMCIpLGNoaWxkcmVuOigwLHMuanN4KShyLkEse3NpemU6MTh9KX0pLCgwLHMuanN4KSgic3BhbiIse2NsYXNzTmFtZToidGV4dC1zbSIsY2hpbGRyZW46ZS5ydW5UZXh0fSldfSl9YSg0MDE3KX0sNzU4NjU6KGUsdCxhKT0+eyJ1c2Ugc3RyaWN0IjthLmQodCx7SjooKT0+Y30pO3ZhciBzPWEoNjI0NTMpLG49YSg0MDE3KSxyPWEoNTU2MDIpLGw9YSg3NTAzNiksaT1hKDg4Nzg2KTtsZXQgbz0oMCxsLkYpKCJ0ZXh0LXNtIGZvbnQtbWVkaXVtIGxlYWRpbmctbm9uZSBwZWVyLWRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZCBwZWVyLWRpc2FibGVkOm9wYWNpdHktNzAiKSxjPW4uZm9yd2FyZFJlZigoZSx0KT0+e2xldHtjbGFzc05hbWU6YSwuLi5ufT1lO3JldHVybigwLHMuanN4KShyLmIse3JlZjp0LGNsYXNzTmFtZTooMCxpLmNuKShvKCksYSksLi4ubn0pfSk7Yy5kaXNwbGF5TmFtZT1yLmIuZGlzcGxheU5hbWV9LDgzMzE1OihlLHQsYSk9PnsidXNlIHN0cmljdCI7YS5kKHQse0s6KCk9PnJ9KTt2YXIgcz1hKDYyNDUzKSxuPWEoNDAxNyk7ZnVuY3Rpb24gcihlKXt2YXIgdCxhLHIsbDtsZXQgaT0icm93Ij09PWUubGF5b3V0PyJmbGV4LWNvbCI6ImZsZXgtcm93IixvPSJmbGV4LXJvdyI9PT1pLGM9KDAsbi51c2VSZWYpKG51bGwpLFtkLHVdPSgwLG4udXNlU3RhdGUpKCExKSx4PSgwLG4udXNlUmVmKShudWxsKSxoPSgwLG4udXNlUmVmKShlLnJhdGlvKSxtPSgwLG4udXNlQ2FsbGJhY2spKHQ9PntpZighZHx8IWMuY3VycmVudHx8bnVsbD09PXguY3VycmVudClyZXR1cm47bGV0IGE9Yy5jdXJyZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLHM9KG8/dC5jbGllbnRYOnQuY2xpZW50WSkteC5jdXJyZW50LG49bz9hLndpZHRoOmEuaGVpZ2h0LHI9TWF0aC5taW4oTWF0aC5tYXgoaC5jdXJyZW50K3MvbiwuMSksLjkpO2Uub25DaGFuZ2Uocil9LFtkLG9dKSxwPSgwLG4udXNlQ2FsbGJhY2spKCgpPT57dSghMSkseC5jdXJyZW50PW51bGx9LFtdKTsoMCxuLnVzZUVmZmVjdCkoKCk9PihkPyhkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW1vdmUiLG0pLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNldXAiLHApKTooZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2Vtb3ZlIixtKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJtb3VzZXVwIixwKSksKCk9Pntkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJtb3VzZW1vdmUiLG0pLGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1vdXNldXAiLHApfSksW2QsbSxwXSk7bGV0IGY9MTAwKmUucmF0aW87aWYodm9pZCAwPT09ZS5jaGlsZHJlbnx8MiE9PWUuY2hpbGRyZW4ubGVuZ3RoKXRocm93IEVycm9yKCJXaW5kb3dTcGxpdHRlciByZXF1aXJlcyBleGFjdGx5IDIgY2hpbGRyZW4gYnV0IGhhcyAiK2UuY2hpbGRyZW4ubGVuZ3RoKTtsZXRbZyx2XT1lLmNoaWxkcmVuLGo9KG51bGw9PT0odD1lLmNoaWxkMUFjdGl2ZSl8fHZvaWQgMD09PXR8fHQpJiYobnVsbD09PShhPWUuY2hpbGQyQWN0aXZlKXx8dm9pZCAwPT09YXx8YSk7cmV0dXJuKDAscy5qc3hzKSgiZGl2Iix7cmVmOmMsY2xhc3NOYW1lOiJiZy1pbmhlcml0IHctZnVsbCBoLWZ1bGwgZmxleCAiLmNvbmNhdChpLCIgaXRlbXMtc3RyZXRjaCIpLGNoaWxkcmVuOlsobnVsbD09PShyPWUuY2hpbGQxQWN0aXZlKXx8dm9pZCAwPT09cnx8cikmJigwLHMuanN4KSgiZGl2Iix7Y2xhc3NOYW1lOiJvdmVyZmxvdy1hdXRvIixzdHlsZTp7ZmxleDoiIi5jb25jYXQoZiwiIDEgMCUiKSxhbGlnblNlbGY6InN0cmV0Y2gifSxjaGlsZHJlbjpnfSksaiYmKDAscy5qc3hzKSgiZGl2Iix7Y2xhc3NOYW1lOiIiLmNvbmNhdChvPyJ3LXB4IGgtZnVsbCI6ImgtcHggdy1mdWxsIiwiIHJlbGF0aXZlIGJnLWJvcmRlciIpLHN0eWxlOnt6SW5kZXg6NDAsY3Vyc29yOm8/ImNvbC1yZXNpemUiOiJyb3ctcmVzaXplIn0sb25Nb3VzZURvd246dD0+e3QucHJldmVudERlZmF1bHQoKSx1KCEwKSx4LmN1cnJlbnQ9bz90LmNsaWVudFg6dC5jbGllbnRZLGguY3VycmVudD1lLnJhdGlvfSxjaGlsZHJlbjpbKDAscy5qc3gpKCJkaXYiLHtjbGFzc05hbWU6IiIuY29uY2F0KG8/ImgtZnVsbCI6InctZnVsbCIpfSksKDAscy5qc3gpKCJkaXYiLHtjbGFzc05hbWU6ImFic29sdXRlIGJnLXRyYW5zcGFyZW50IixzdHlsZTp7dG9wOm8/IjAiOiItNXB4IixsZWZ0Om8/Ii01cHgiOiIwIix3aWR0aDpvPyIxMXB4IjoiMTAwJSIsaGVpZ2h0Om8/IjEwMCUiOiIxMXB4IixjdXJzb3I6bz8iZXctcmVzaXplIjoibnMtcmVzaXplIixwb2ludGVyRXZlbnRzOiJhbGwifX0pXX0pLChudWxsPT09KGw9ZS5jaGlsZDJBY3RpdmUpfHx2b2lkIDA9PT1sfHxsKSYmKDAscy5qc3gpKCJkaXYiLHtjbGFzc05hbWU6Im92ZXJmbG93LWF1dG8gYmctaW5oZXJpdCIsc3R5bGU6e2ZsZXg6IiIuY29uY2F0KDEwMC1mLCIgMSAwJSIpLGFsaWduU2VsZjoic3RyZXRjaCJ9LGNoaWxkcmVuOnZ9KV19KX19LDk0MjkwOihlLHQsYSk9PnsidXNlIHN0cmljdCI7YS5kKHQse3c6KCk9Pml9KTt2YXIgcz1hKDYyNDUzKSxuPWEoNDAxNykscj1hKDM3NzQ2KSxsPWEoODg3ODYpO2xldCBpPW4uZm9yd2FyZFJlZigoZSx0KT0+e2xldHtjbGFzc05hbWU6YSxvcmllbnRhdGlvbjpuPSJob3Jpem9udGFsIixkZWNvcmF0aXZlOmk9ITAsLi4ub309ZTtyZXR1cm4oMCxzLmpzeCkoci5iLHtyZWY6dCxkZWNvcmF0aXZlOmksb3JpZW50YXRpb246bixjbGFzc05hbWU6KDAsbC5jbikoInNocmluay0wIGJnLWJvcmRlciIsImhvcml6b250YWwiPT09bj8iaC1bMXB4XSB3LWZ1bGwiOiJoLWZ1bGwgdy1bMXB4XSIsYSksLi4ub30pfSk7aS5kaXNwbGF5TmFtZT1yLmIuZGlzcGxheU5hbWV9fSxlPT57dmFyIHQ9dD0+ZShlLnM9dCk7ZS5PKDAsWzQ1OSwzNDYsNjU1LDgyMiw0NDcsOTIxLDIyNCw5OTMsOTUxLDE0Niw1ODUsMjkzLDU2NiwzNThdLCgpPT50KDQ2MDg2KSksX05fRT1lLk8oKX1dKTs=",    //
     226968, //
     "application/javascript", //
     "/_next/static/chunks/app/page-d9da5f6326651bca.js/", //
     
};
}
