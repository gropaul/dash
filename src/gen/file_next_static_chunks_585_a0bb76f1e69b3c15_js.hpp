
#pragma once
#include "files.hpp"
namespace duckdb {
const File FILE_NEXT_STATIC_CHUNKS_585_A0BB76F1E69B3C15_JS = {
     // Content
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "KT0+e24uZCh0LHtPOigpPT5pLGNuOigpPT5zfSk7dmFyIGE9big2MTQ1MCksbz1uKDI4OTkpO2Z1bmN0aW9uIHMoKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PUFycmF5KGUpLG49MDtuPGU7bisrKXRbbl09YXJndW1lbnRzW25dO3JldHVybigwLG8uUVApKCgwLGEuJCkodCkpfWZ1bmN0aW9uIGkoZSl7cmV0dXJuJyInK2UrJyInfX0sOTAzNTA6KGUsdCxuKT0+e24uZCh0LHtyOigpPT5hfSk7ZnVuY3Rpb24gYSgpe2xldCBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTozMix0PSJhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ekFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMDEyMzQ1Njc4OSI7cmV0dXJuIEFycmF5LmZyb20oe2xlbmd0aDplfSwoKT0+dFtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqdC5sZW5ndGgpXSkuam9pbigiIil9fSw5MTY3MDooZSx0LG4pPT57bi5kKHQse3BVOigpPT5kLHI1OigpPT5jLGtBOigpPT5sfSk7dmFyIGE9big0MTYpLG89big3NTY0KSxzPW4oOTgzMDgpLGk9big5MDM1MCk7ZnVuY3Rpb24gcigpe3JldHVybntpbnB1dFR5cGU6InNlbGVjdCIsbmFtZToiU2VsZWN0XyIrKDAsaS5yKSg4KX19ZnVuY3Rpb24gYyhlKXtyZXR1cm57ZGlzcGxheU5hbWU6ZX19ZnVuY3Rpb24gbChlLHQpe2xldCBuPWQoZS5kaXNwbGF5TmFtZSx2b2lkIDApO3JldHVybigwLG8uYkQpKGUsbik/ZChlLmRpc3BsYXlOYW1lLHQpOmV9ZnVuY3Rpb24gZChlLHQsbil7bGV0IG89YXJndW1lbnRzLmxlbmd0aD4zJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10mJmFyZ3VtZW50c1szXSxpPXsuLi5jKGUpLGNvZGVGZW5jZVN0YXRlOntzaG93Om8sc2l6ZVBlcmNlbnRhZ2U6LjMsbGF5b3V0OiJyb3cifSxzZWxlY3RlZFZpZXc6InRhYmxlIn07cmV0dXJuIHQ/ey4uLmksY2hhcnRTdGF0ZTooMCxzLmJLKSh0KSx0YWJsZVN0YXRlOigwLGEuUTEpKHQpLGlucHV0VGV4dFN0YXRlOnIoKSxzY2hlbWE6bnVsbCE9bj9uOnQuY29sdW1uc306ey4uLmksY2hhcnRTdGF0ZTooMCxzLm0yKSgpLHRhYmxlU3RhdGU6KDAsYS5CNCkoKSxpbnB1dFRleHRTdGF0ZTpyKCksc2NoZW1hOltdfX19LDkxODE4OihlLHQsbik9PntuLmQodCx7d0o6KCk9PnIsekE6KCk9PmN9KTt2YXIgYT1uKDg3MTAyKSxvPW4oNjk0MjYpO2xldCBzPSgwLGEuS1UpKCgpPT5sb2NhbFN0b3JhZ2UpO3ZhciBpPW4oNzIwODUpO2Z1bmN0aW9uIHIoKXtyZXR1cm4gdX1mdW5jdGlvbiBjKGUpe2lmKCJkdWNrZGItb3Zlci1odHRwIj09PWUudHlwZXx8ImR1Y2tkYi13YXNtIj09PWUudHlwZSlsKCk7ZWxzZSB0aHJvdyBFcnJvcigiQ29ubmVjdGlvbiB0eXBlIG5vdCBzdXBwb3J0ZWQiKX1sZXQgbD0oKT0+e2kuVTQucGVyc2lzdC5zZXRPcHRpb25zKHtzdG9yYWdlOmR9KSxpLlMkLmdldFN0YXRlKCkuc2V0SGFzRHVja0RCU3RvcmFnZSghMCksaS5VNC5wZXJzaXN0LnJlaHlkcmF0ZSgpLGNvbnNvbGUubG9nKCJTd2l0Y2hlZCB0byBEdWNrREIgc3RvcmFnZSIpfSxkPSgwLGEuS1UpKCgpPT5vLnVnKSx1PXN9LDk1MDkxOihlLHQsbik9PntuLmQodCx7cDooKT0+aX0pO3ZhciBhPW4oNjI0NTMpLG89big0MDE3KSxzPW4oODg3ODYpO2xldCBpPW8uZm9yd2FyZFJlZigoZSx0KT0+e2xldHtjbGFzc05hbWU6bix0eXBlOm8sLi4uaX09ZTtyZXR1cm4oMCxhLmpzeCkoImlucHV0Iix7dHlwZTpvLGNsYXNzTmFtZTooMCxzLmNuKSgiZmxleCBoLTggdy1mdWxsIHJvdW5kZWQtbWQgYm9yZGVyIGJvcmRlci1pbnB1dCBiZy10cmFuc3BhcmVudCBweC0zIHB5LTEgdGV4dC1iYXNlIHNoYWRvdy1zbSB0cmFuc2l0aW9uLWNvbG9ycyBmaWxlOmJvcmRlci0wIGZpbGU6YmctdHJhbnNwYXJlbnQgZmlsZTp0ZXh0LXNtIGZpbGU6Zm9udC1tZWRpdW0gZmlsZTp0ZXh0LWZvcmVncm91bmQgcGxhY2Vob2xkZXI6dGV4dC1tdXRlZC1mb3JlZ3JvdW5kIGZvY3VzLXZpc2libGU6b3V0bGluZS1ub25lIGZvY3VzLXZpc2libGU6cmluZy0xIGZvY3VzLXZpc2libGU6cmluZy1yaW5nIGRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZCBkaXNhYmxlZDpvcGFjaXR5LTUwIG1kOnRleHQtc20iLG4pLHJlZjp0LC4uLml9KX0pO2kuZGlzcGxheU5hbWU9IklucHV0In0sOTU3MDM6KGUsdCxuKT0+e2Z1bmN0aW9uIGEoZSl7aWYoMD09PWUucm93cy5sZW5ndGgpcmV0dXJuIkVtcHR5IHJlbGF0aW9uLCBDb2x1bW5zOiAiK2UuY29sdW1ucy5tYXAoZT0+ZS5uYW1lKS5qb2luKCIsICIpO2xldCB0PWUuY29sdW1ucy5tYXAoZT0+ZS5uYW1lKS5qb2luKCIgfCAiKSxuPWUuY29sdW1ucy5tYXAoKCk9PiItLS0iKS5qb2luKCIgfCAiKSxhPWUucm93cy5tYXAoZT0+ZS5tYXAoZT0+U3RyaW5nKGUpKS5qb2luKCIgfCAiKSkuam9pbigiXG4iKTtyZXR1cm4ifCAiLmNvbmNhdCh0LCIgfFxufCAiKS5jb25jYXQobiwiIHxcbnwgIikuY29uY2F0KGEsIiB8Iil9ZnVuY3Rpb24gbyhlLHQpe2lmKCJmaWxlIj09ZS50eXBlKXJldHVyblt0LGUuYmFzZU5hbWVdO2lmKCJxdWVyeSI9PWUudHlwZSlyZXR1cm5bdF07aWYoInRhYmxlIj09ZS50eXBlKXJldHVyblt0LGUuZGF0YWJhc2UsZS5zY2hlbWEsZS50YWJsZU5hbWVdO3Rocm93IEVycm9yKCJVbmtub3duIHJlbGF0aW9uIHR5cGU6ICIuY29uY2F0KGUpKX1mdW5jdGlvbiBzKGUsdCl7aWYoInRhYmxlIj09PXQudHlwZSlyZXR1cm4icmVsYXRpb24tdGFibGUtIi5jb25jYXQoZSwiLSIpLmNvbmNhdCh0LmRhdGFiYXNlLCItIikuY29uY2F0KHQuc2NoZW1hLCItIikuY29uY2F0KHQudGFibGVOYW1lKTtpZigiZmlsZSI9PT10LnR5cGUpcmV0dXJuInJlbGF0aW9uLWZpbGUtIi5jb25jYXQoZSwiLSIpLmNvbmNhdCh0LnBhdGgpO2lmKCJxdWVyeSI9PT10LnR5cGUpcmV0dXJuInJlbGF0aW9uLXF1ZXJ5LSIuY29uY2F0KGUsIi0iKS5jb25jYXQodC5pZCk7dGhyb3cgRXJyb3IoIlVua25vd24gcmVsYXRpb24gdHlwZTogIi5jb25jYXQodCkpfWZ1bmN0aW9uIGkoZSl7aWYoInRhYmxlIj09PWUudHlwZSlyZXR1cm4iIi5jb25jYXQoZS50YWJsZU5hbWUsIiBWaWV3Iik7aWYoImZpbGUiPT09ZS50eXBlKXJldHVybiIiLmNvbmNhdChlLmJhc2VOYW1lLCIgVmlldyIpO2lmKCJxdWVyeSI9PT1lLnR5cGUpcmV0dXJuIGUubmFtZTt0aHJvdyBFcnJvcigiVW5rbm93biByZWxhdGlvbiB0eXBlOiAiLmNvbmNhdChlKSl9bi5kKHQse1RJOigpPT5zLGU4OigpPT5vLGhvOigpPT5pLHokOigpPT5hfSl9LDk4MzA4OihlLHQsbik9PntuLmQodCx7QVk6KCk9PmMsQ0Y6KCk9Pm0sQ2w6KCk9PnUsTms6KCk9PnIsU2k6KCk9Pm8sYWw6KCk9PmksYks6KCk9PmQsZTM6KCk9PnMsbTI6KCk9Pmx9KTt2YXIgYT1uKDMwMTE1KTtsZXQgbz1bImJhciIsInNjYXR0ZXIiLCJsaW5lIiwiYXJlYSIsInBpZSIsInJhZGFyIl0scz17d2lkdGg6Mixjb2xvcjoiIzAwMDAwMCIsbGluZVN0eWxlOiJzb2xpZCJ9LGk9e3Zpc2libGU6ITAsZmlsbDoid2hpdGUiLHJhZGl1czo2LGJvcmRlcldpZHRoOjAsc2hhcGU6ImNpcmNsZSJ9LHI9e2NvbG9yOiIjMDAwMDAwIixvcGFjaXR5Oi4yfTtmdW5jdGlvbiBjKGUpe2xldCB0PWEuamlbZSVhLmppLmxlbmd0aF07cmV0dXJue2NvbG9yOnQsc2NhdHRlcjp7ZG90czp7c2hhcGU6ImNpcmNsZSIsdmlzaWJsZTohMCxmaWxsOnQscmFkaXVzOjYsYm9yZGVyV2lkdGg6MH19LGxpbmU6e3N0cm9rZTp7Y29sb3I6dCx3aWR0aDoyLGxpbmVTdHlsZToic29saWQifSxzbW9vdGg6ITF9LGFyZWE6e2ZpbGw6e2NvbG9yOnQsb3BhY2l0eTouMn19LGJhcjp7Y29ybmVyUmFkaXVzOjQsZmlsbE9wYWNpdHk6MSxib3JkZXI6e3dpZHRoOjAsY29sb3I6IiMwMDAwMDAifX0scGllOntpbm5lclJhZGl1czowLHBhZEFuZ2xlOjAsY29ybmVyUmFkaXVzOjAsc2hvd0xhYmVsczohMCxsYWJlbDp7Y29sb3I6IiMwMDAwMDAiLGZvbnRTaXplOjEyLGZvbnRGYW1pbHk6IlVyYmFuaXN0LCBzYW5zLXNlcmlmIn19LHJhZGFyOntzdHJva2VXaWR0aDoyLGZpbGxDb2xvcjp0LGZpbGxPcGFjaXR5Oi4yLHNob3dEb3RzOiEwLGRvdFNpemU6Nixkb3RDb2xvcjp0LGRvdEJvcmRlcldpZHRoOjF9fX1mdW5jdGlvbiBsKCl7cmV0dXJue2NoYXJ0OntwbG90Ont0eXBlOiJiYXIiLGNhcnRlc2lhbjp7eFJhbmdlOnt9LHlSYW5nZTp7fSxkZWNvcmF0aW9uOntiYXI6e3N0YWNrZWQ6ITF9fSxncm91cEJ5OnZvaWQgMH0scGllOntheGlzOnt9fX19LHZpZXc6e3Nob3dDb25maWc6ITAsY29uZmlnUGxvdFJhdGlvOi41LGxheW91dDoiY29sdW1uIn19fWZ1bmN0aW9uIGQoZSl7cmV0dXJue2NoYXJ0OntwbG90Ont0eXBlOiJiYXIiLGNhcnRlc2lhbjp7eFJhbmdlOnt9LHlSYW5nZTp7fSxkZWNvcmF0aW9uOntiYXI6e3N0YWNrZWQ6ITF9fSxncm91cEJ5OnZvaWQgMH0scGllOntheGlzOnt9fX19LHZpZXc6e3Nob3dDb25maWc6ITAsY29uZmlnUGxvdFJhdGlvOi41LGxheW91dDoiY29sdW1uIn19fWZ1bmN0aW9uIHUoZSl7c3dpdGNoKGUpe2Nhc2UiY29uZmlnLW5vdC1jb21wbGV0ZSI6cmV0dXJuIkNvbmZpZ3VyYXRpb24gbm90IGNvbXBsZXRlIjtjYXNlIm1pc3NpbmctZGF0YSI6cmV0dXJuIk1pc3NpbmcgZGF0YSJ9dGhyb3cgRXJyb3IoIlVuc3VwcG9ydGVkIGVycm9yIHR5cGU6ICIuY29uY2F0KGUpKX1mdW5jdGlvbiBtKGUsdCl7dmFyIG4sYSxvLHMsaTtsZXQgcj1lLnBsb3Q7c3dpdGNoKHIudHlwZSl7Y2FzZSJiYXIiOmNhc2UicmFkYXIiOmNhc2UibGluZSI6Y2FzZSJzY2F0dGVyIjpjYXNlImFyZWEiOmlmKChudWxsIT09KGE9bnVsbD09PShuPXIuY2FydGVzaWFuLnlBeGVzKXx8dm9pZCAwPT09bj92b2lkIDA6bi5sZW5ndGgpJiZ2b2lkIDAhPT1hP2E6MCk9PTApcmV0dXJue3R5cGU6ImNvbmZpZy1ub3QtY29tcGxldGUiLG1lc3NhZ2U6IlBsZWFzZSBkZWZpbmUgYXQgbGVhc3Qgb25lIFktYXhpcy4ifTticmVhaztjYXNlInBpZSI6aWYodm9pZCAwPT09ci5waWUuYXhpcy5sYWJlbHx8dm9pZCAwPT09ci5waWUuYXhpcy5yYWRpdXMpcmV0dXJue3R5cGU6ImNvbmZpZy1ub3QtY29tcGxldGUiLG1lc3NhZ2U6IlBsZWFzZSBkZWZpbmUgYm90aCB0aGUgbGFiZWwgYW5kIHJhZGl1cyBheGlzLiJ9O2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoIlVuc3VwcG9ydGVkIHBsb3QgdHlwZTogIi5jb25jYXQoci50eXBlKSl9aWYoci5jYXJ0ZXNpYW4uZ3JvdXBCeSYmci5jYXJ0ZXNpYW4ueEF4aXMpe2lmKHIuY2FydGVzaWFuLmdyb3VwQnkuY29sdW1uSWQ9PT1yLmNhcnRlc2lhbi54QXhpcy5jb2x1bW5JZClyZXR1cm57dHlwZToiY29uZmlnLW5vdC1jb21wbGV0ZSIsbWVzc2FnZToiR3JvdXAgYnkgY29sdW1uIGFuZCB4LWF4aXMgY29sdW1uIG11c3QgYmUgZGlmZmVyZW50LiJ9fWVsc2UgaWYoci5jYXJ0ZXNpYW4uZ3JvdXBCeSl7aWYoIXIuY2FydGVzaWFuLnhBeGlzKXJldHVybnt0eXBlOiJjb25maWctbm90LWNvbXBsZXRlIixtZXNzYWdlOiJQbGVhc2UgZGVmaW5lIHRoZSB4LWF4aXMgY29sdW1uLiJ9O2lmKCFyLmNhcnRlc2lhbi55QXhlcylyZXR1cm57dHlwZToiY29uZmlnLW5vdC1jb21wbGV0ZSIsbWVzc2FnZToiUGxlYXNlIGRlZmluZSBhdCBsZWFzdCBvbmUgWS1heGlzLiJ9O2lmKChudWxsIT09KGk9bnVsbD09PShvPXIuY2FydGVzaWFuLnlBeGVzKXx8dm9pZCAwPT09bz92b2lkIDA6by5sZW5ndGgpJiZ2b2lkIDAhPT1pP2k6MCk+MSlyZXR1cm57dHlwZToiY29uZmlnLW5vdC1jb21wbGV0ZSIsbWVzc2FnZToiR3JvdXAgYnkgY29sdW1uIGlzIG9ubHkgc3VwcG9ydGVkIHdpdGggb25lIFktYXhpcy4ifTtlbHNlIGlmKChudWxsPT09KHM9ci5jYXJ0ZXNpYW4pfHx2b2lkIDA9PT1zP3ZvaWQgMDpzLnlBeGVzWzBdLmNvbHVtbklkKT09PXIuY2FydGVzaWFuLmdyb3VwQnkuY29sdW1uSWQpcmV0dXJue3R5cGU6ImNvbmZpZy1ub3QtY29tcGxldGUiLG1lc3NhZ2U6Ikdyb3VwIGJ5IGNvbHVtbiBhbmQgeS1heGlzIGNvbHVtbiBtdXN0IGJlIGRpZmZlcmVudC4ifX1sZXQgYz0oZnVuY3Rpb24oZSl7bGV0IHQ9ZS5wbG90O3N3aXRjaCh0LnR5cGUpe2Nhc2UiYmFyIjpjYXNlInJhZGFyIjpjYXNlImxpbmUiOmNhc2Uic2NhdHRlciI6Y2FzZSJhcmVhIjp7dmFyIG4sYTtpZih0LmNhcnRlc2lhbi5ncm91cEJ5KXtpZih0LmNhcnRlc2lhbi54QXhpcylyZXR1cm5bdC5jYXJ0ZX"
     "NpYW4ueEF4aXMuY29sdW1uSWRdO3JldHVybltdfWxldCBlPW51bGwhPT0oYT1udWxsPT09KG49dC5jYXJ0ZXNpYW4ueUF4ZXMpfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLm1hcChlPT5lLmNvbHVtbklkKSkmJnZvaWQgMCE9PWE/YTpbXTtyZXR1cm4gdC5jYXJ0ZXNpYW4ueEF4aXMmJmUucHVzaCh0LmNhcnRlc2lhbi54QXhpcy5jb2x1bW5JZCksZX1jYXNlInBpZSI6e2xldCBlPVtdO3JldHVybiB0LnBpZS5heGlzLmxhYmVsJiZlLnB1c2godC5waWUuYXhpcy5sYWJlbC5jb2x1bW5JZCksdC5waWUuYXhpcy5yYWRpdXMmJmUucHVzaCh0LnBpZS5heGlzLnJhZGl1cy5jb2x1bW5JZCksZX1kZWZhdWx0OnRocm93IEVycm9yKCJVbnN1cHBvcnRlZCBwbG90IHR5cGU6ICIuY29uY2F0KHQudHlwZSkpfX0pKGUpLmZpbHRlcihlPT4hdC5jb2x1bW5zLmZpbmQodD0+dC5pZD09PWUpKTtpZihjLmxlbmd0aD4wKXJldHVybiBjb25zb2xlLndhcm4oIk1pc3NpbmcgY29sdW1uczogIi5jb25jYXQoYy5qb2luKCIsICIpLCIsIGF2YWlsYWJsZSBjb2x1bW5zOiAiKS5jb25jYXQodC5jb2x1bW5zLm1hcChlPT5lLmlkKS5qb2luKCIsICIpKSkse3R5cGU6Im1pc3NpbmctZGF0YSIsbWVzc2FnZToiTWlzc2luZyBkYXRhIGNvbHVtbnM6ICIuY29uY2F0KGMuam9pbigiLCAiKSl9fX0sOTkxOTM6KGUsdCxuKT0+e24uZCh0LHtBOigpPT5vfSk7dmFyIGE9bigzMDExNSk7ZnVuY3Rpb24gbygpe3JldHVybntzdGF0ZToidW5pbml0aWFsaXplZCIsZGVzdGluYXRpb246YS5oQ319fX1dKTs=",    //
     173020, //
     "application/javascript", //
     "/_next/static/chunks/585-a0bb76f1e69b3c15.js/", //
     
};
}
